#/secure/daemon/function.c
FileSize (["/lib/std/bed.c":309,"/lib/lamp.c":1402,"/lib/virtual/virt_sky.c":2362,"/lib/events/put.c":2914,"/lib/events/read.c":4163,"/lib/props/body_mass.c":920,"/lib/classes.c":4129,"/lib/events/activate.c":676,"/lib/genetics.c":9770,"/lib/combat.c":33859,"/lib/comp/container.c":1373,"/lib/comp/holder.c":2732,"/lib/door.c":13677,"/lib/fish.c":538,"/lib/events/look.c":7684,"/lib/events/jump.c":3161,"/lib/post_office.c":1274,"/lib/virtual/virt_subsurface.c":571,"/lib/events/touch.c":2827,"/lib/comp/surface.c":159,"/lib/sentient.c":11691,"/lib/std/daemon.c":1283,"/lib/events/turn.c":1719,"/lib/events/crawl.c":111,"/lib/std/worn_storage.c":1237,"/lib/undead.c":2702,"/lib/trainer.c":143,"/lib/props/carry.c":1633,"/lib/meal.c":6398,"/lib/std/table.c":344,"/lib/events/drop.c":2268,"/lib/props/inventory.c":3731,"/lib/domesticate.c":4703,"/lib/events/press.c":2376,"/lib/pole.c":2634,"/lib/events/dig.c":1216,"/lib/events/consult.c":2208,"/lib/follow.c":1479,"/lib/props/ambiance.c":368,"/lib/clan.c":5236,"/lib/events/swim.c":109,"/lib/bank.c":670,"/lib/pager.c":12524,"/lib/std/bot_limb.c":1213,"/lib/std/corpse.c":5900,"/lib/cigar.c":970,"/lib/flashlight.c":5477,"/lib/events/apply.c":463,"/lib/lvs/level.c":1591,"/lib/props/value.c":2228,"/lib/props/description.c":3615,"/lib/std/boobytrap_object.c":2494,"/lib/std/germ.c":8565,"/lib/torch.c":1114,"/lib/mount.c":4814,"/lib/history.c":6060,"/lib/events/disarm.c":1354,"/lib/std/room.c":32122,"/lib/events/bury.c":267,"/lib/std/book.c":1404,"/secure/daemon/bboard.c":3956,"/lib/spell.c":21376,"/lib/events/get.c":3295,"/lib/events/dig_with.c":2521,"/lib/chario.c":8153,"/lib/events/search.c":4339,"/lib/events/roll.c":1890,"/lib/magic.c":5291,"/lib/player.c":19906,"/lib/creator.c":7067,"/lib/std/base_dummy.c":3214,"/lib/die.c":2591,"/lib/events/pull.c":2246,"/lib/manycoins.c":231,"/lib/std/barkeep.c":5422,"/lib/files.c":1096,"/lib/currency.c":3223,"/lib/events/smoke.c":225,"/lib/props/equip.c":1988,"/lib/events/lie.c":1709,"/lib/clerk.c":4350,"/lib/blank.c":38,"/lib/clay.c":1786,"/lib/std/boobytrap_shadow.c":6598,"/lib/fishing.c":6255,"/lib/props/mass.c":1026,"/lib/pipe.c":1740,"/lib/user/autosave.c":2311,"/lib/virtual/virtual.c":654,"/lib/vehicle.c":8761,"/lib/rifle.c":181,"/lib/light.c":1417,"/lib/used_meal.c":173,"/lib/virtual/virt_map.c":4867,"/lib/std/bane.c":192,"/lib/events/lock.c":7805,"/lib/events/wield.c":1220,"/lib/help.c":575,"/secure/daemon/rooms.c":22900,"/lib/events/rock.c":561,"/lib/events/buy.c":375,"/lib/teacher.c":6928,"/lib/events/scratch.c":2093,"/lib/events/fly.c":107,"/lib/events/smell.c":3394,"/lib/steal.c":946,"/lib/fuel.c":1502,"/lib/race.c":9405,"/lib/std/armor.c":151,"/lib/base_trainer.c":8016,"/lib/std/limb.c":2870,"/lib/inventory.c":4032,"/lib/bboard.c":9816,"/lib/props/move.c":6087,"/lib/detect.c":3961,"/lib/flow.c":6105,"/lib/events/fall.c":1865,"/lib/events/bait_with.c":1055,"/lib/missile.c":3937,"/lib/elevator.c":1651,"/lib/language.c":3187,"/lib/exits.c":10226,"/lib/match.c":1101,"/lib/living.c":28605,"/lib/events/look_in.c":2823,"/lib/virtual/virt_std.c":1542,"/lib/events/sit.c":1965,"/lib/comp/seal.c":1322,"/lib/vi.c":46921,"/lib/chamber.c":9463,"/lib/std/bot_corpse.c":1916,"/lib/npc.c":19463,"/daemon/soul.c":12189,"/lib/daemons/player_stub.c":489,"/lib/events/poison.c":863,"/lib/battery.c":2447,"/lib/editor.c":1416,"/lib/persist.c":4097,"/lib/teach.c":2465,"/lib/clip.c":4739,"/lib/events/load.c":1665,"/lib/cgi.c":901,"/lib/events/knock.c":2036,"/secure/daemon/imc2.c":60943,"/lib/events/bait.c":877,"/lib/stargate.c":7590,"/lib/std/furnace.c":1056,"/lib/std/lockpick.c":991,"/lib/firearm.c":15908,"/lib/events/swivel.c":581,"/lib/nmsh.c":36145,"/lib/messages.c":2068,"/lib/std/vendor.c":18178,"/lib/props/save.c":3356,"/lib/comp/object.c":1257,"/lib/events/show.c":382,"/lib/std/base_storage.c":5042,"/lib/chapel.c":3457,"/lib/blank_pile.c":781,"/lib/events/shake.c":2160,"/lib/events/manipulate.c":2256,"/lib/lvs/abilities.c":9268,"/lib/std/chair.c":527,"/lib/std/item.c":9514,"/lib/teller.c":11812,"/lib/trap.c":3733,"/lib/events/climb.c":3742,"/lib/shadow.c":671,"/lib/events/lock_with.c":1933,"/lib/remote.c":3373,"/lib/poison.c":1423,"/lib/props/id.c":5953,"/lib/props/clean.c":2991,"/lib/events/sink.c":1503,"/lib/cedit.c":18621,"/lib/comp/weapon.c":5126,"/lib/std/story.c":3147,"/lib/lead.c":4489,"/lib/daemons/verb.c":1933,"/lib/body.c":60696,"/lib/enter.c":4467,"/lib/leader.c":5917,"/lib/elevator_button.c":876,"/lib/props/properties.c":1115,"/lib/bonus.c":2882,"/lib/props/uniqueness.c":971,"/lib/props/radiance.c":463,"/lib/events/stop.c":1642,"/lib/events/describe.c":14230,"/lib/props/addstuff.c":491,"/lib/events/install.c":2126,"/lib/bot.c":3707,"/lib/interface.c":18907,"/lib/lvs/position.c":7523,"/lib/props/deterioration.c":1995,"/lib/command.c":17220,"/lib/std/storage.c":772,"/lib/pile.c":3605,"/lib/cylinder.c":358,"/lib/learn.c":326,"/lib/events/close.c":2077,"/lib/combatmsg.c":8349,"/lib/events/shoot.c":2204,"/lib/events/get_from.c":6425,"/lib/events/listen.c":3267,"/lib/pistol.c":137,"/lib/shop.c":812,"/lib/props/damage.c":1181,"/lib/chat.c":7687,"/lib/burn.c":4561,"/lib/quest.c":3066,"/lib/std/base_armor.c":15085,"/lib/money.c":661,"/lib/std/wound.c":2372,"/lib/shadow_hook.c":493,"/lib/flask.c":6504,"/lib/round.c":3732,"/lib/events/sell.c":500,"/lib/std/dummy.c":496,"/lib/events/aim.c":2191,"/lib/donate.c":1843,"/lib/guard.c":4281,"/lib/events/give.c":1468,"/lib/interactive.c":18854,"/lib/events/drink.c":611,"/lib/virtual/virt_land.c":5963,"/lib/shell.c":879,"/lib/talk.c":12426,"/lib/potion.c":909,"/lib/mayor.c":2213,"/lib/events/wear.c":955,])
FunctionCache (["/lib/std/bed.c":"int CanGet(object who){void create(){","/lib/lamp.c":"string GetShort(){static void create(){varargs string GetLong(string unused){int GetRadiantLight(int ambient){varargs mixed eventLight(object who, object tool){mixed direct_light_obj(){mixed eventDarken(){static void heart_beat(){int GetBurnRate(){static int SetBurnRate(int x){","/lib/events/put.c":"static void create(){mixed SetPreventPut(mixed val){mixed direct_put_obj_word_obj(){mixed direct_put_wrd_wrd_word_obj(){mixed direct_put_obj_obj(){mixed GetPreventPut(){varargs mixed CanPut(object who, object what){","/lib/virtual/virt_sky.c":"varargs static void create(int x, int y,int z){mixed eventReceiveObject(object ob){mixed CanFly(object who, string dir){mixed eventFly(object who, string dir){varargs static void Setup(int x, int y,int z){mixed GetPreventLand(){mixed SetPreventLand(mixed val){string SetGround(string str){string GetGround(){","/lib/events/read.c":"mixed direct_read_obj(){mixed direct_read_str_word_obj(string str){mixed direct_read_obj_at_obj(object reader, object readee){mapping GetReadsMap(){void RemoveRead(string item){void SetReads(mapping ReadMap){varargs mixed SetDefaultRead(mixed arg1, mixed desc){int SetLanguage(string str){mixed GetLanguage(){varargs mixed eventRead(object who, mixed str){","/lib/props/body_mass.c":"int SetZPG(int x){int GetZPG(){int GetMass(){int AddBodyMass(int x){int GetBodyMass(){int SetBodyMass(int x){int GetWeight(){","/lib/classes.c":"static void create(){int AddSkillPoints(string skill, int x){int ClassMember(string class_name){string SetClass(string class_name){string GetClass(){ return Class; }string GetMoralityDescription(){int eventMoralAct(int degree){int GetBaseStatLevel(string stat){ return 0; }string GetSkillModifier(string skill){ return SkillModifiers[skill]; }string SetClan(string clan){ return (Clan = clan); }string GetClan(){ return Clan; }int SetMorality(int x){ return (Morality = x); }static string SetSkillModifier(string skill, string stat){string array SetReligion(string adj, string noun){varargs string GetReligion(int flag){ return Religion[flag]; }mixed ChangeClass(string class_name){","/lib/events/activate.c":"int direct_activate_obj(object target){int direct_deactivate_obj(object target){int direct_activate_obj_on_obj(object target, object where){int direct_activate_str_on_obj(string target, object where){int direct_deactivate_obj_on_obj(object target, object where){int direct_deactivate_str_on_obj(string target, object where){","/lib/combat.c":"static void heart_beat(){varargs int eventReceiveDamage(mixed agent, int type, int x, int internal,mixed eventBite(object target){mixed eventTurn(object who){static void create(){int GetLevel(){varargs int eventDie(mixed agent){void eventEnemyDied(object ob){int GetMaxCarry(){varargs int SetParalyzed(int count, function f){int GetBaseStatLevel(string stat){int GetParalyzed(){ return cParalyzed; }int RemoveHostile(object ob){static int Destruct(){int eventExecuteAttack(mixed target){int eventWeaponRound(mixed target, mixed val){void eventWeaponAttack(object target, object weapon, int num){int eventMeleeRound(mixed target, function f){void eventMeleeAttack(object target, string limb){int eventMagicRound(mixed target, function f){int eventWimpy(int i){int GetVisibility(){int SetDead(int i){object array GetEnemies(){int AddEnemy(object ob){int RemoveEnemy(object ob){object SetCurrentEnemy(object ob){static object ResetCurrentEnemy(){object GetCurrentEnemy(){private static void SortEnemies(){mixed array AddNonTargets(mixed val){int AddHostile(object ob){int GetInCombat(){int GetDead(){void eventDestroyEnemy(object ob){mixed array RemoveNonTargets(mixed val){object array GetNonTargets(){object array GetHostiles(){object array GetSpecialTarget(){object array SetSpecialTarget(object array cibles){int eventQuell(){int eventUnQuell(){string SetParty(string str){string GetParty(){varargs int SetAttack(mixed target, function callback, int type){string SetWimpyCommand(string cmd){string GetWimpyCommand(){int GetMagicChance(int val){int GetMagicResistance(){varargs int GetPenalty(object other){static int GetDamage(int power, string skill){int GetCombatChance(int val){int GetDefenseChance(int val){int GetCombatBonus(int level){int CanWeapon(object target, string type, int hands, int num){int CanMelee(object target){int eventPreAttack(object agent){varargs int eventReceiveAttack(int speed, string def, object agent){void eventKillEnemy(object ob){","/lib/genetics.c":"varargs mixed GetEffectiveVision(mixed location, int raw_score){string array GetStats(){ return keys(Stats); }static void create(){static void heart_beat(){varargs static int array SetLightSensitivity(mixed array val...){string GetResistance(int type){varargs void SetStat(string stat, int level, int classes){mixed eventCustomizeStat(string stat, int amount){varargs void AddStat(string stat, int base, int cls){int GetBaseStatLevel(string stat){int AddStatPoints(string stat, int x){int GetMaxStatPoints(string stat, int level){void AddStatBonus(string stat, mixed f){varargs void RemoveStatBonus(string stat, object ob){int GetStatBonus(string stat){varargs string SetResistance(int type, string level){int GetCustomStats(){ return Custom[\"stats\"]; }int array GetLightSensitivity(){int AddVisionBonus(int x){int GetVisionBonus(){int GetBlind(){static void RemoveBlindness(){varargs mixed eventBlind(object who, int amt, mixed end){mixed eventDeviateStat(string stat, int amount){mixed eventRestoreSight(object who, int amt){mapping GetStatsMap(){ return copy(Stats); }mapping GetResistanceMap(){int GetStatLevel(string stat){int GetStatClass(string stat){int GetCustomDeviations(){ return Custom[\"deviations\"]; }int GetDeviating(){ return Custom[\"deviating\"]; }int SetDeviating(int x){ return (Custom[\"deviating\"] = (x ? 1 : 0)); }","/lib/comp/container.c":"int GetOpacity(){int SetOpacity(int x){int GetRadiantLight(int ambient){int CanReceive(object ob){int CanRelease(object ob){int eventReceiveObject(object ob){int eventReleaseObject(object ob){mixed eventPostRelease(object ob){","/lib/door.c":"static void create(){string GetDefiniteShort(){varargs mixed eventClose(object who){varargs int eventOpen(object who, object tool){varargs string array SetKeys(string side, mixed array args...){mixed CanUnlock(object who){varargs mixed eventLock(object who, mixed key, mixed foo){mixed eventUnlock(object who, object key){string array GetKeys(string side){ return Sides[side][\"Keys\"]; }mixed CanLock(object who, string foo){varargs mixed eventKnock(object who, mixed what){varargs mixed eventScratch(object who, mixed what){string array GetId(string side){varargs string GetShort(string side){int GetOpacity(){int SetOpacity(int x){string GetLong(string side){mixed SetLong(string side, mixed long){mixed SetShort(string side, mixed short){int eventRegisterSide(string side){void SetSide(string side, mapping mp){int GetHiddenDoor(){varargs string array SetId(string side, mixed array args...){int GetLockable(string side){string array GetSides(){int get_closed(){ return GetClosed(); }int GetPerforated(){int SetPerforated(int x){int CanPeer(){int SetHiddenDoor(int i){object array GetRooms(string side){ return Sides[side][\"Rooms\"]; }int SetLockable(string side, int x){","/lib/comp/holder.c":"mixed inventory_visible(){varargs string GetInternalDesc(){int GetOpacity(){int SetOpacity(int x){int CanReceive(object ob){int eventReceiveObject(object ob){int eventReleaseObject(object ob){static void eventLoadInventory(){static void create(){int isBag(){static mixed array AddSave(mixed array vars){int SetSaveRecurse(int x){","/lib/fish.c":"static void create(){int GetFight(){ return Fight; }string GetFood(){ return Food; }int SetFight(int x){ return (Fight = x); }string SetFood(string str){ return (Food = str); }int eventCatch(object who){ return 1; }","/lib/events/look.c":"varargs string GetExternalDesc(object who){string SetExternalDesc(string desc){mixed SetInvis(mixed val){varargs mixed AddItem(mixed item, mixed val){string array GetItems(){mapping GetItemsMap(){mapping RemoveItem(mixed item){mapping SetItems(mapping items){mapping SetItem_desc(mapping items){varargs string GetLong(string str){string SetLong(string str){varargs mixed eventShow(object who, string component){mixed direct_look_obj(){mixed direct_look_at_obj(){mixed direct_look_on_obj(){mixed direct_look_at_obj_on_obj(object target, object ob,mixed arg, mixed arg2){mixed direct_look_at_obj_word_obj(){mixed direct_look_at_str_on_obj(string str, object target){varargs int GetInvis(object ob){static mixed AddItem_func(mixed foo){static mixed SetItem_func(mixed foo){","/lib/events/jump.c":"varargs mixed AddJump(string name, mixed saute, int type){mixed CanJump(object who, string id, int type){mapping GetJumps(){mixed eventJump(object who, string id, int type){mixed direct_jump_word_obj(string prep, object target, string id){varargs mixed direct_jump_word_word_obj(mixed args...){","/lib/post_office.c":"static void create(){int CanReceive(object ob){int eventReleaseObject(object foo){mixed CanMail(object who, string args){mixed eventMail(object who, string args){","/lib/virtual/virt_subsurface.c":"varargs static void create(int x, int y,int z){mixed eventReceiveObject(object ob){varargs static void Setup(int x, int y,int z){string SetGround(string str){string GetGround(){","/lib/comp/surface.c":"void create(){int eventPutOn(object player, object item){","/lib/events/touch.c":"static void create(){varargs mixed SetTouch(mixed array args...){mapping RemoveTouch(string item){string array GetTouches(){varargs mixed eventTouch(object who, string str){mixed direct_touch_obj(){mixed direct_touch_str_word_obj(string str){","/lib/std/daemon.c":"static void create(){int eventDestruct(){varargs int eventRestore(int do_not_zero_out){varargs int eventSave(int save_zero_values){string GetSaveFile(){static string SetSaveFile(string str){","/lib/sentient.c":"static void heart_beat(){static int ContinueHeart(){mixed eventTalkRespond(object who, object targ, int cls, string msg, string lang){varargs mixed eventReceiveEmote(object who, string verb, string info){int RemoveConsultResponse(string str){mapping SetConsultResponses(mapping mp){mapping AddCommandResponses(mapping mp){mapping GetCommandResponses(){int RemoveCommandResponse(string str){mapping SetCommandResponses(mapping mp){mixed AddEmoteResponse(string verb, mixed val){mapping GetEmoteResponses(){int RemoveEmoteResponse(string verb){mapping SetEmoteResponses(mapping mp){mapping AddRequestResponses(mapping mp){mapping GetRequestResponses(){int RemoveRequestResponse(string str){mapping GetTalkResponses(){mapping SetTalkResponses(mapping mp){int SetSpellChance(int i){int GetSpellChance(){varargs int SetWander(int speed, mixed array path, int recurse){mixed array GetWanderPath(){mixed array SetWanderPath(mixed array path){int GetWanderRecurse(){int SetWanderRecurse(int x){mixed eventAsk(object who, string str){int GetWanderSpeed(){int SetWanderSpeed(int x){int SetPermitLoad(mixed i){int GetPermitLoad(){mixed eventConsult(object who, string str){mixed eventRequest(object who, string str){mixed eventWander(){mapping SetRequestResponses(mapping mp){mixed AddTalkResponse(string str, mixed val){int RemoveTalkResponse(string str){mixed AddConsultResponse(string str, mixed val){mapping GetConsultResponses(){","/lib/events/crawl.c":"mixed direct_crawl_str(string str){mixed direct_crawl_into_str(string str){","/lib/events/turn.c":"int eventTurn(object who){mixed eventTurnOn(object ob){int direct_turn_on_obj_on_obj(object target, object thinger){int indirect_turn_on_obj_on_obj(object thinger, object target){int direct_turn_off_obj(object target){int direct_turn_off_obj_on_obj(object target, object thinger){int indirect_turn_off_obj_on_obj(object thinger, object target){int direct_turn_obj_on(object target){int direct_turn_obj_on_obj_on(object target, object thinger){int indirect_turn_obj_on_obj_on(object thinger, object target){int direct_turn_obj_off(object target){int direct_turn_obj_on_obj_off(object target, object thinger){int indirect_turn_obj_on_obj_off(object thinger, object target){mixed eventTurnOff(object ob){varargs mixed CanTurn(object who, object what){varargs mixed CanTurnOn(object who, object what){varargs mixed CanTurnOff(object who, object what){","/lib/std/worn_storage.c":"void create(){varargs string array AddSave(string array args){string array GetSave(){mixed eventEquip(object who, string array limbs){varargs mixed eventUnequip(object who){varargs string GetExternalDesc(object who){mixed direct_remove_obj(){mixed direct_wear_obj(){void init(){varargs string GetEquippedDescription(object who){string GetEquippedShort(){","/lib/trainer.c":"static void create(){","/lib/undead.c":"static void heart_beat(){string GetUndeadType(){string SetUndeadType(string str){mixed eventBite(object target){mixed eventTurn(object who){int GetGhost(){","/lib/props/carry.c":"int CanCarry(int amount){int AddCarriedMass(int x){int GetCarriedMass(){static int SetCarriedMass(int x){int CalculateCarriedMass(){int GetCarriedWeight(){int GetMaxCarry(){int GetLivingMaxCarry(){int SetMaxCarry(int x){","/lib/meal.c":"string GetShort(){ return item::GetShort(); }static void create(){int eventDestruct(){ return item::eventDestruct(); }static mixed AddSave(mixed array vars){ return item::AddSave(vars); }int GetValue(){int eventPoison(object who, object agent, int x){int GetStrength(){ return MealStrength; }int GetMealType(){ return MealType; }mixed eventDrink(object who){mixed eventEat(object who){int SetMealType(int x){int SetStrength(int x){ return (MealStrength = x); }mixed direct_eat_obj(){string SetEmptyItem(string file){ return (EmptyItem = file); }string GetEmptyItem(){ return EmptyItem; }string SetEmptyName(string str){ return (EmptyName = str); }mixed direct_drink_from_obj(){mixed direct_drink_obj(){string GetEmptyName(){ return EmptyName; }mixed SetEmptyShort(mixed val){ return (EmptyShort = val); }mixed GetEmptyShort(){ return EmptyShort; }mixed SetEmptyLong(mixed val){ return (EmptyLong = val); }mixed GetEmptyLong(){ return EmptyLong; }varargs void SetMealMessages(mixed array val...){int SetMealAction(function f){mixed array GetMealMessages(){ return ({ MyMessage, OtherMessage }); }","/lib/std/table.c":"int CanGet(object who){void create(){void init(){","/lib/props/inventory.c":"static void eventLoadInventory(){static void eventLoadItem(string file, mixed args, int count){mapping GetInventory(){mapping SetInventoryCheck(mapping newmap){void heart_beat(){varargs void reset(){","/lib/events/drop.c":"mixed GetPreventDrop(){mixed SetPreventDrop(mixed val){int GetDestructOnDrop(){int SetDestructOnDrop(int val){mixed CanDrop(object who){mixed direct_drop_obj(object target){","/lib/domesticate.c":"object GetMountOwner(){mixed direct_befriend_liv(){mixed direct_abandon_liv(){mixed direct_train_liv(){int CanTrain(){mixed direct_train_liv_to_str(){mixed direct_untrain_liv(){mixed direct_untrain_liv_to_str(){mixed direct_command_liv(){mixed direct_command_liv_to_str(){object SetMountOwner(object who){int SetCanBefriend(int i){int CanAbandon(object who){int SetCanTrain(int i){int CanUnTrain(){int SetCanCommand(int i){int eventBefriend(object who){int eventAbandon(object who){varargs int eventTrainLiving(object who, string what){varargs int eventUnTrainLiving(object who, string what){string array GetTrainedSkilles(){string array SetTrainedSkills(string array skills){string eventCommandNPC(object who, string cmd){varargs mixed SetBefriended(mixed who){varargs mixed GetBefriended(mixed who){","/lib/events/press.c":"mapping RemovePress(string item){varargs mapping SetPress(mixed key, mixed desc){varargs mixed CanPress(object who, string component){varargs mixed eventPress(object who, string component){mixed direct_press_obj(object target){mixed direct_press_str_on_obj(string str, object target){string array GetPresses(){","/lib/events/consult.c":"varargs mixed eventConsult(object who, string component){string array GetConsults(){mapping RemoveConsult(string item){varargs mapping SetConsult(mixed key, mixed desc){varargs mixed CanConsult(object who, string component){mixed direct_consult_obj(object target){mixed direct_consult_str_on_obj(string str, object target){","/lib/events/dig.c":"int RemoveDig(){mixed SetDig(mixed val){mixed CanDig(object who){mixed direct_dig_obj_with_obj(){mixed eventDig(object who, object tool){mixed GetDig(){","/lib/pole.c":"static void create(){int SetChance(int x){ return (CatchChance =x); }int eventFish(object who){int GetChance(){ return CatchChance + GetProperty(\"blessed\"); }mixed AddSave(mixed array vars){ return ({}); }int GetStrength(){ return PoleStrength; }mixed CanCast(object who){int SetStrength(int x){ return (PoleStrength = x);  }int eventBreak(){mixed direct_cast_obj(){mixed eventCatch(object who, string fish){mixed direct_fish_with_obj(){","/lib/props/ambiance.c":"int GetAmbientLight(){int SetAmbientLight(int x){","/lib/follow.c":"static void create(){ Leader = 0; }object GetLeader(){ return Leader; }varargs mixed CanFollow(object ob){int IsFollowing(object ob){mixed direct_follow_liv(){int eventFollow(object dest, int fC){ return 0; }object SetLeader(object leader){","/lib/clan.c":"string SetClanObject(string str){string GetClanObject(){ return Clan->objectName; }static void create(){static void init(){void eventUnjoin(object ob){void eventWelcome(object ob){string GetLeader(){ return Clan->leader; }string SetLeader(string str){string GetAffectLong(object ob){string SetClanSkill(string str){string GetClanSkill(){ return Clan->skill; }void eventJoin(object ob){string SetClanName(string str){mixed CanJoin(object ob){ return 1; }string GetClanName(){ return Clan->name; }int eventBring(string str){int eventInitiate(string str){int eventRetire(string str){","/lib/bank.c":"static void create(){void init(){int HandleTeller(string str){mixed teller_check(){","/lib/events/swim.c":"mixed direct_swim_str(string str){mixed direct_swim_into_str(string str){","/lib/pager.c":"string GetHelp(string str){varargs mixed eventPage(mixed val, mixed msg_class, function f,mixed args...){mixed more(mixed val, string cl, function f, mixed args){varargs static private void RazzleDazzle(mixed args...){static private string GetPagerPrompt(mapping file){static void cmdPage(string str, mapping file){","/lib/cigar.c":"static void create(){string GetShort(){varargs string GetLong(string unused){int GetRadiantLight(int ambient){mixed eventSmoke(object who, object what){int GetLastPuff(){","/lib/std/corpse.c":"int CanReceive(object ob){ return 1; }static void create(){string GetItemCondition(){ return \"\";}static int Destruct(){string GetCapName(){string GetSaveString(){ return 0; }string SetClass(string the_class){string GetClass(){int GetCount(int i){string GetGender(){string GetRace(){ return Race; }int direct_offer_obj(){int GetLevel(){string array GetMissingLimbs(){mapping SetSkills(mapping skills){mapping SetStats(mapping stats){mapping GetStats(){int direct_animate_obj(){int SetNoDecay(int i){int SetLevel(int level){int isFreshCorpse(){string GetHealthShort(){string SetGender(string gender){mapping GetSkills(){mixed direct_resurrect_obj(){ return 1; }void SetCorpse(object who){mixed indirect_resurrect_obj(){ return 1; }int eventDecay(){string GetLivingShort(){int GetSlowDecay(){string SetLivingLong(string long){int GetNoDecay(){string SetBaseFile(string file){int isCorpse(){int isPlayer(){object GetPlayerob(){string GetLivingLong(){string GetBaseFile(){string GetOwner(){ return Owner; }mapping GetEquipped(){string SetLivingShort(string short){int SetSlowDecay(int i){string array SetMissingLimbs(string array limbs){int SetCount(int i){","/lib/std/bot_limb.c":"static void create(){void init(){void SetLimb(string limb, string owner, string race){int eventDecay(){","/lib/events/apply.c":"mixed direct_apply_obj_word_obj(){mixed indirect_apply_obj_word_obj(){mixed CanApply(object applicant){","/lib/flashlight.c":"string GetShort(){int CanReceive(object ob){void heart_beat(){void create(){void init(){int eventTurnOn(object ob){varargs mixed eventTurnOff(string str){int eventDie(){varargs int eventUse(mixed i, mixed foo){mixed eventExtinguish(){mixed eventLight(){void SetLightLevel(int i){int eventRadiate(int i){int SetHB(int i){int GetHB(){int SetMaxCells(int i){ maxcells = i; return i; }int GetMaxCells(){ return maxcells; }int SetMinCells(int i){ mincells = i; return i; }int GetMinCells(){ return mincells; }int SetCellType(string str){celltype=str; return 1; }string GetCellType(){ return celltype; }int SetDrainRate(int i){int flicker(){int CheckPower(){int GetLightLevel(){void regetID(){","/lib/lvs/level.c":"int collect_moduli(int mod, int array range){varargs int ChangeLevel(int i){","/lib/props/value.c":"string array GetSave(){int GetDestroyOnSell(){int SetDestroyOnSell(int x){varargs int GetValue(string str){int SetValue(mixed y){varargs mixed SetBaseCost(mixed arg, int i){int GetVendorType(){int SetVendorType(int x){int SetDollarCost(int x){int GetBaseCost(string str){","/lib/props/description.c":"string GetShort(){mixed direct_modify_obj_str(){mixed direct_modify_word_str(){mixed direct_initfix_obj(){mixed direct_createfix_obj(){mixed direct_reload_obj(){ return 1; }mixed indirect_reload_obj(){ return 1; }mixed direct_reload_word_obj(){ return 1; }mixed indirect_reload_word_obj(){ return 1; }mixed direct_reload_str_obj(){ return 1; }mixed indirect_reload_str_obj(){ return 1; }mixed direct_reload_str_word(){ return 1; }mixed indirect_reload_str_word(){ return 1; }mixed direct_reload_every_str(){ return 1; }mixed indirect_reload_every_str(){ return 1; }mixed direct_copy_obj_to_obj(){ return 1; }mixed direct_copy_obj_str(){ return 1; }mixed direct_add_obj_to_obj(){ return 1; }mixed indirect_add_obj_to_obj(){ return 1; }mixed indirect_read_obj_at_obj(){ return 1; }mixed direct_delete_obj_from_obj(){mixed indirect_delete_obj_from_obj(){mixed indirect_delete_obj_from_here(){ return 1; }mixed direct_delete_obj_from_room(){ return 1; }mixed indirect_delete_obj_from_room(){ return 1; }mixed indirect_add_obj_to_here(){ return 1; }mixed indirect_add_obj_to_room(){ return 1; }int SetNoModify(int i){int GetModify(){int GetNoModify(){string GetDefiniteShort(){varargs mixed SetShort(mixed val, int proper){object array GetDummyItems(){","/lib/std/boobytrap_object.c":"void create(){void init(){int GetAutoResets(){varargs int eventBoobytrap(object who, mixed target, mixed trap){int SetTrapType(int i){int GetTrapType(){string SetShadowObject(string str){string GetShadowObject(){varargs mixed CanBoobytrap(object who, mixed what){int SetAutoResets(int i){","/lib/std/germ.c":"static void create(){void init(){static void heart_beat(){mixed eventCure(object who, int x, string type){string GetType(){mixed eventInfect(object ob){function SetInfect(function f){int GetLifeSpan(){int isGerm(){mixed GetCure(){mixed SetCure(mixed val){int SetLifeSpan(mixed x){string SetType(string type){int GetCannotInfect(){int SetCannotInfect(int i){mixed eventMultiply(){int GetCommunicable(){mixed eventEncounter(object who){void eventSuffer(object ob){int SetCommunicable(int x){string GetGermName(){int SetGermName(string str){function GetInfect(){","/lib/torch.c":"static void create(){string GetShort(){varargs string GetLong(string unused){int GetRadiantLight(int ambient){int direct_pray_for_str_for_obj(){ return 1; }","/lib/mount.c":"int GetMount(){ return Mount; }object array GetRiders(){mixed direct_ride_str(){mixed direct_ride_word_str(){mixed direct_mount_liv(){mixed direct_dismount_liv(){mixed direct_dismount_from_liv(){int eventRide(string direction){object array AddRider(object ob){object array RemoveRider(object ob){varargs mixed eventDismount(object who, int quiet, int forced){mixed eventBuck(object who){int SetMount(int x){varargs mixed eventMount(object who, int quiet, int forced){","/lib/history.c":"string GetLastCommand(){static string Push(string cmd){int GetCommandNumber(){mapping GetHistoryList(){mapping GetCommandHist(){int SetHistorySize(int x){int GetMaxCommandHistSize(){int SetMaxCommandHistSize(int i){static string eventHistory(string str){","/lib/events/disarm.c":"mixed indirect_boobytrap_obj_with_obj(){mixed direct_disarm_obj(){varargs mixed eventDisarm(mixed arg){","/lib/std/room.c":"static void create(){int eventDestruct(){int inventory_visible(){string GetInternalDesc(){int CanReceive(object ob){int eventReceiveObject(object ob){int eventReleaseObject(object ob){mixed eventPostRelease(object ob){mixed CanFly(object who, string dest){varargs mixed GetSearch(){varargs void RemoveSearch(mixed item){varargs void SetSearch(mixed items, mixed arg){object array GetDummyItems(){void heart_beat(){varargs void reset(int count){varargs void AddItem(mixed item, mixed val, mixed adjectives){mapping GetItemsMap(){mapping RemoveItem(mixed item){mapping SetItems(mixed items){string GetLong(){string SetLong(string str){varargs int eventShow(object who, string args){mixed SetProperties(mapping mp){mixed SetProperty(string prop, mixed val){int GetAmbientLight(){void RemoveRead(mixed item){varargs void SetRead(mixed items, mixed arg){string GetClimate(){ return Climate; }string array GetId(){ return ({}); }varargs int eventPrint(string msg, mixed arg2, mixed arg3){mixed CanSwim(object who, string dest){int GetRespirationType(){int GetResetNumber(){int GenerateObviousExits(){int SetCanStand(int i){int SetCanSit(int i){int SetCanKneel(int i){int SetNoObviousExits(int i){string GetFlyRoom(){string GetSinkRoom(){static int SetNightLight(int x){static int SetDayLight(int x){mapping GetSmellMap(){mapping GetListenMap(){mapping QueryMap(string str){varargs void SetSmell(mixed items, mixed arg){varargs void SetListen(mixed items, mixed arg){varargs void AddListen(mixed item, mixed val){varargs void RemoveListen(mixed item){int SetMedium(int medium){int GetMedium(){int GetClimateExposed(){int SetNoReplace(int x){ return (NoReplace = x); }int GetNoReplace(){ return NoReplace; }int GetPlayerKill(){int SetPlayerKill(int x){int AddPoisonGas(int x){int GetPoisonGas(){int SetPoisonGas(int x){varargs void AddRead(mixed item, mixed val, string lang){static int SetShade(int x){varargs void AddSearch(mixed item, mixed val){varargs void AddSmell(mixed item, mixed val){varargs void RemoveSmell(mixed item){varargs void AddTouch(mixed item, mixed val){varargs void SetTouch(mixed items, mixed arg){varargs void RemoveTouch(mixed item){string GetTown(){ return Town; }string SetTown(string town){ return (Town = town); }int CanAttack( object attacker, object who ){int GetNightLight(){int GetDayLight(){int GetShade(){varargs mixed DestructEmptyVirtual(object ob){mixed direct_delete_exit_str(){mixed indirect_delete_exit_str(){void CheckActions(){void SetAction(int chance, mixed val){mapping GetActionsMap(){mapping SetActionsMap(mapping ActMap){int SetFrequency(int tick){int GetFrequency(){int GetTerrainType(){int SetTerrainType(int i){int AddTerrainType(int i){int RemoveTerrainType(int i){function GetBury(){function SetBury(function what){static string GetExtraLong(){string SetDayLong(string str){ return (DayLong = str); }string GetDayLong(){ return DayLong; }string SetNightLong(string str){ return (NightLong = str); }string GetNightLong(){ return NightLong; }string SetClimate(string str){float SetGravity(float h){ return (Gravity = h); }float GetGravity(){ return Gravity; }mixed eventBuryItem(object who, object tool, object what){varargs mixed eventHearTalk(object who, object target, int cls, string verb,int inventory_accessible(){int SetNoDefaultExits(int i){int SetDefaultExits(int i){int SetCanFly(int i){int SetCanSwim(int i){string SetFlyRoom(string str){string SetSinkRoom(string str){int SetFlowLimit(int i){int GetFlowLimit(){int SetRespirationType(int i){void CompileNeighbors(mixed coords){mixed GetNeighbors(){mixed GetNeighborCoords(){mixed GetCoords(){string SetCoordinates(string str){static void init(){string GetElevator(){string SetElevator(string str){int eventMove(){ return 0; }","/lib/events/bury.c":"mixed direct_bury_obj_with_obj(){","/lib/std/book.c":"void create(){void init(){void LoadBook(){string ReadBook(mixed args...){void SetTitle(string title){void SetSource(string source){string ReadBookIndex(){mixed GetTitle(){string GetSource(){mixed array eventLoadChapters(){string eventLoadIndex(){","/lib/events/get.c":"static void create(){mixed GetPreventGet(){mixed SetPreventGet(mixed val){mixed CanGet(object who){mixed direct_get_obj(object target){mixed direct_get_obj_out_of_obj(object target, object src){mixed direct_get_obj_from_obj(object target, object src){mixed direct_get_obj_obj(object target, object src){","/lib/spell.c":"static void create(){varargs static string array SetRules(mixed args...){int GetMorality(){int GetHealing(){static mapping SetSkills(mapping mp){int GetAutoDamage(){static int SetAutoDamage(int x){static int SetAutoHeal(int x){string GetConjure(){static int SetRequiredMagic(int x){static int SetRequiredStamina(int x){static string SetSpell(string str){static int SetSpellType(int x){int GetStaminaCost(){static string SetConjure(string str){int GetDifficulty(){static int SetDifficulty(int x){static varargs int array SetStaminaCost(mixed args...){static int SetTrainingModifier(int modifier){int GetTrainingModifier(){static int CanSpellAttack(object who, object array enemies, int power){static varargs int array SetHealing(mixed args...){int GetMagicCost(){static varargs int array SetMagicCost(mixed args...){static mixed array SetMessages(mixed array messages){string array GetReligions(){varargs static string array SetReligions(string array religions...){int GetRemoteTargets(){static int SetRemoteTargets(int x){string GetErrorMessage(){static int SetMorality(int x){varargs mixed eventParse(object who, mixed array args...){varargs object array GetTargets(object who, mixed args...){int GetAutoHeal(){int GetSpellType(){int GetRequiredSkill(string skill){string array GetSkills(){varargs int eventCast(object who, int level, mixed limb, object array targets){varargs string array GetMessage(int damage, int healing){varargs int CanCast(object who, int level, string limb, object array targets){string GetVerb(){int GetRequiredMagic(){int GetRequiredStamina(){int GetDamage(){int GetDamageType(){string array GetRules(){static string SetVerb(string verb){varargs static void SetDamage(int type, mixed array rest...){","/lib/events/dig_with.c":"mixed direct_dig_with_obj(){mixed direct_dig_str_with_obj(string what){mixed indirect_bury_obj_with_obj(object what){mixed indirect_dig_obj_with_obj(object what){mixed eventBuryWith(object who, object what){varargs mixed eventDigWith(object who, object what){varargs mixed CanBuryWith(object who, object what){varargs mixed CanDigWith(object who, object what){mixed direct_bury_str_with_obj(string str){","/lib/chario.c":"void create(){void heart_beat(){int GetCharmode(){static string GetTempbuffer(){int rEsc(){varargs int CancelCharmode(int extra){void CheckCharmode(){static int ReceiveChars(string str){int SetCharmode(int x){static string GetCharbuffer(){static string SetCharbuffer(string str){static string SetTempbuffer(string str){int SetNoEcho(int x){int GetNoEcho(){","/lib/events/search.c":"mapping GetTraps(){mapping FoundTraps(){varargs string GetSearch(string str, object who){string array GetSearches(){mapping RemoveSearch(string item){varargs mixed SetSearch(mixed array args...){mixed direct_search_obj(){varargs mixed eventSearch(object who, string str){mixed direct_search_str_word_obj(string str){","/lib/player.c":"int CanReceive(object ob){ return CanCarry(ob->GetMass()); }int eventReleaseObject(object foo){static void create(){static int Destruct(){string SetShort(string irrelevant){string GetName(){string GetCapName(){ return interactive::GetCapName(); }varargs string GetLong(string str){varargs int eventShow(object who, string str){int Setup(){static void heart_beat(){int eventMove(mixed dest){static void net_dead(){void eventReconnect(){varargs mixed GetEffectiveVision(mixed location, int raw_score){int SetUndead(int x){mixed eventTurn(object who){string SetClass(string str){varargs int eventDie(mixed agent){void eventLoadObject(mixed array value, int recurse){ }varargs static int AddHealthPoints(int x, string limb, object agent){int GetLanguageLevel(string lang){int ResetLevel(){void eventKillEnemy(object ob){int AddBank(string bank, string type, int amount){int AddCurrency(string type, int amount){mixed GetTeloptIp(){string array GetMuffed(){string GetPlainShort(){string array AddTitle(mixed title){string array GetTitles(){ return Titles; }mixed eventAsk(object who, string what){varargs mixed eventDisplayStatus(int simple){varargs void eventRevive(int nopenalty){mixed CanUse(){ return 1; }string array SetTitles(string array titles){mapping array GetDeaths(){int GetTrainingPoints(){ return TrainingPoints; }int RemoveTrainingPoints(int x){string array RemoveTitle(mixed title){int AddTrainingPoints(int x){static void eventDestroyUndead(object agent){string array SetMuffed(string array muffed){string array AddMuffed(string muffed){string array RemoveMuffed(string unmuffed){int SetTitleLength(int x){int GetTitleLength(){ return TitleLength; }varargs int eventTrain(string skill, int points){mixed SetTeloptIp(mixed str){","/lib/magic.c":"static void eventTrainSpell(object spell){mapping GetSpellBook(){varargs mixed eventPrepareCast(string verb, mixed array args...){mixed eventLearnSpell(string spell){static varargs void eventCast(object spell, string limb, object array targs){void SetSpellBook(mapping book){int GetSpellLevel(string spell){varargs mixed CanCast(object spell){","/lib/events/roll.c":"mixed direct_roll_obj(object target){mixed direct_roll_obj_on_obj(object target, object where, mixed wtf, mixed wtf2){mixed direct_roll_obj_on_str(object target, string where){varargs mixed eventRoll(object ob){varargs mixed CanRoll(object target, object where){mixed direct_roll_obj_here(object target){mixed indirect_roll_obj_on_obj(object target, object where){mixed indirect_roll_obs_on_obj(mixed target, object where){varargs mixed eventResults(mixed args){","/lib/std/base_dummy.c":"varargs static void create(string array id, mixed long, string array adj){static int Destruct(){varargs mixed eventKnock(object who, mixed what){varargs mixed eventScratch(object who, mixed what){varargs string array SetId(mixed ids...){int isDummy(){mixed eventMove(mixed dest){","/lib/creator.c":"void eventDescribeEnvironment(int verbose){int inventory_visible(){ return 1; }int eventReleaseObject(object foo2){static void create(){static int Destruct(){string GetName(){varargs string GetLong(string str){varargs int eventShow(object who, string str, string on_id){mixed direct_look_obj(){ return 1; }mixed direct_look_at_obj(){ return 1; }int Setup(){int eventMove(mixed dest){static void net_dead(){void eventReconnect(){int eventForce(string cmd){varargs mixed GetEffectiveVision(mixed location, int raw_score){int inventory_accessible(){ return 1; }int CanCarry(int amount){ return 1; }int is_living(){ return 1; }int eventDie(mixed agent){mapping GetSpellBook(){varargs mixed CanCast(mixed spell...){mixed direct_give_liv_obj(){mixed indirect_give_obj_to_liv(object item){mixed direct_verb_rule(string verb){mixed direct_marry_liv_to_liv(){mixed indirect_marry_liv_to_liv(){mixed indirect_give_obs_to_liv(object array item){mixed direct_give_liv_obs(){int GetWizVision(){string GetLivingShort(){int GetCreatorBirth(){ return CreatorBirth; }int GetCreatorAge(){int GetVisibleGrid(){int SetWizVision(int i){int SetVisibleGrid(int i){","/lib/die.c":"int eventMove(mixed dest){static void create(){string SetLong(string str){void init(){varargs mixed eventRoll(object where){varargs mixed eventResults(mixed args){varargs mixed eventShake(object dude, string foo){varargs mixed CanShake(object who, string component){varargs mixed eventConsult(object dude, string foo){varargs mixed CanConsult(object who, string component){int doRoll(){int SetDenominator(int denom){","/lib/manycoins.c":"int Payment(object who, int value){int PutCoins(object who){","/lib/events/pull.c":"varargs mixed eventPull(object who, string component){string array GetPulls(){mapping RemovePull(string item){varargs mapping SetPull(mixed key, mixed desc){varargs mixed CanPull(object who, string component){mixed direct_pull_obj(object target){mixed direct_pull_str_on_obj(string str, object target){mixed direct_pull_str_from_obj(string str, object target){","/lib/std/barkeep.c":"static void create(){int CanCarry(int cmt){int indirect_sell_obj_to_liv(){mixed CanSell(object who, string item){mixed eventSell(object who, string args){string SetLocalCurrency(string str){mapping SetMenuItems(mapping mp){mapping GetMenuItems(){int GetCost(string array item){string GetLocalCurrency(){mapping AddMenuItem(mixed item, string file){mapping RemoveMenuItem(string item){mixed eventBuyItem(object who, string cmd, string item){int eventList(object who, string cmd, string args){","/lib/props/equip.c":"string array GetSave(){int SetArmorType(int x){mixed CanEquip(object who, string array limbs){mixed CanUnequip(object who){mixed eventEquip(object who, string array limbs){static void eventRestoreEquip(string array limbs){mixed eventUnequip(object who){string array GetWorn(){int GetArmorType(){static string array SetWorn(string array limbs){","/lib/events/smoke.c":"mixed CanSmoke(object who){int direct_smoke_obj(object who, object target){int direct_smoke_from_obj(object who, object target){","/lib/currency.c":"static void create(){int GetCurrency(string type){ return Currency[type]; }mapping GetCurrencyMap(){ return copy(Currency); }varargs int GetCurrencyMass(string type){int AddBank(string bank, string type, int amount){int GetBank(string bank, string type){mapping GetAccountInfo(string bank){varargs int GetNetWorth(string benjamins){void ResetBank(){ Bank = ([]); }void ResetCurrency(){ Currency = ([]); }string array GetCurrencies(){ return keys(Currency); }int AddCurrency(string type, int amount){","/lib/files.c":"string query_cwd(){ return DIR_TMP; }","/lib/events/lie.c":"mixed eventReleaseStand(object who){int CanGet(object who){object array GetLiers(){mixed direct_lie_word_obj(){mixed direct_lie_down_word_obj(){mixed eventReceiveLay(object who){int GetMaxLiers(){static int SetMaxLiers(int x){","/lib/clerk.c":"void create(){mixed performMarriage(object spouse1, object spouse2){int performDivorce(object ob1){int MarriageRequest(mixed arg1, mixed arg2, mixed arg3){int eventRequestDivorce(mixed arg1, mixed arg2, mixed arg3){","/lib/blank.c":"","/lib/std/boobytrap_shadow.c":"int eventShadow(object ob){varargs mixed CanClose(object who, string id){mixed eventClose(object who){varargs mixed CanOpen(object who, object tool){varargs mixed eventOpen(object who, object tool){string GetKeyName(){void create(){string GetShort(){mixed GetPreventGet(){mixed CanGet(object who){mixed direct_get_obj(object target){mixed direct_get_obj_out_of_obj(object target, object src){mixed direct_get_obj_from_obj(object target, object src){mixed direct_get_obj_obj(object target, object src){mixed GetPreventDrop(){int GetDestructOnDrop(){mixed CanDrop(object who){mixed direct_drop_obj(object target){mixed CanPick(object who, string id){varargs mixed CanUnlock(object who, string id, object key){varargs mixed eventLock(object who, mixed arg1, mixed arg2){varargs mixed eventPick(object who, string str, object tool){varargs mixed eventUnlock(object who, mixed arg1, mixed arg2){mixed CanLock(object who, string id){mixed direct_pick_str_on_obj(string str, object target, string str2,mixed direct_pick_str_on_obj_with_obj(string str, object target, object tool,mixed eventSteal(object who){mixed CanSteal(object who){int GetTrapLevel(){string GetTrapDescription(){varargs mixed eventDisarm(mixed args...){varargs mixed SpringTrap(mixed arg1, mixed arg2){mixed eventEquip(object who, string array limbs){mixed eventUnequip(object who){int GetAutoResets(){string SetTrapDescription(string str){int SetTrapType(int i){int GetTrapType(){int SetTrapLevel(int i){int SetAutoResets(int i){","/lib/clay.c":"void create(){void init(){void InitComposition(){varargs string SetComposition(string comp, string name, string array nouns, string array adjs, string","/lib/fishing.c":"static void create(){int CanRelease(object who){void heart_beat(){int SetChance(int x){ return (Chance = x); }int AddFish(string fish, int x){int GetChance(){ return Chance; }mapping SetFish(mapping mp){ return (Fish = mp); }mapping RemoveFish(string fish){mapping GetFish(){ return Fish; }mapping SetFishing(object who, object pole){mapping RemoveFishing(object who){int SetMaxFishing(int x){ return (MaxFishing = x); }int GetMaxFishing(){ return MaxFishing; }mixed CanStop(object who, string str){mixed eventStop(object who, string str){mixed eventCast(object who, object pole, string str){mixed CanCast(object who, string where){static void eventCatch(object who, string fish, object pole){int GetSpeed(){ return Speed; }int SetSpeed(int x){ return (Speed = x); }","/lib/props/mass.c":"int SetZPG(int x){int GetZPG(){string array GetSave(){int SetMass(int x){mixed direct_weigh_obj(){int GetMass(){int GetWeight(){int AddMass(int x){","/lib/user/autosave.c":"nomask void save_player(string nom){nomask int restore_player(string nom){int Setup(){static void heart_beat(){nomask void restore_inventory(){","/lib/pipe.c":"string GetShort(){static void create(){varargs string GetLong(string unused){int GetRadiantLight(int ambient){varargs mixed eventLight(object who, object tool){mixed direct_light_obj(){mixed eventDarken(){static void heart_beat(){int GetBurnRate(){static int SetBurnRate(int x){mixed eventSmoke(object who, object what){int GetLastPuff(){","/lib/virtual/virtual.c":"int GetVirtualSky(){int GetExemptVirtual(){int GetVirtualSea(){int SetExemptVirtual(int i){","/lib/vehicle.c":"void create(){varargs string GetInternalDesc(){int eventMove(mixed dest){int inventory_accessible(){void init(){varargs int eventDie(mixed agent){mixed eventMount(object who){varargs int CanFly(mixed who, mixed where){object array GetDummyItems(){varargs void AddItem(mixed item, mixed val, mixed adjectives){mapping GetItemsMap(){mapping RemoveItem(mixed item){mapping SetItems(mixed items){varargs mixed eventEnter(object who, string what, string verb){mixed CanGo(object who, string str){mixed eventGo(object who, string str){void RemoveRead(mixed item){varargs void SetRead(mixed items, mixed arg){void AddRead(mixed item, mixed val){mixed GetVehicleInterior(){int SetVehicleInterior(mixed arg){int eventDrive(string direction){mixed direct_drive(){mixed direct_drive_word_str(){mixed direct_fly(){mixed direct_fly_word_str(){","/lib/rifle.c":"static void create(){void init(){","/lib/light.c":"static void create(){string GetShort(){varargs mixed eventLight(object who, object tool){mixed CanLight(object who){mixed direct_light_obj(){mixed eventDarken(){int GetLit(){static int SetLit(int x){","/lib/used_meal.c":"static void create(){","/lib/std/bane.c":"string array GetBane(){string array QueryBane(){int SetBane(array arr){","/lib/virtual/virt_map.c":"varargs static void create(string virt_file){varargs string array BaseMap(){ //override with actual mapint array GetLocations(string str){return Location[str]; }varargs mixed SetAreaMap(int y,int x ,int z, string str){varargs void InitializeLocations(string tmp){void SwitchLocations(){int AddLocation(string str, int array where){int RemoveLocation(string str){int SetVirtFile( string file){varargs mixed GetAreaMap(int x, int y, int z){","/lib/help.c":"string GetHelp(string topic){static mapping SetHelp(mixed val){","/lib/events/wield.c":"mixed direct_unwield_obj(){mixed direct_wield_obj(){mixed direct_wield_obj_word_str(object target, string wrd, string limb){","/lib/events/lock.c":"varargs string array SetKeys(mixed array args...){string array GetSave(){string array AddKey(string key){mixed CanPick(object who, string id){varargs mixed CanUnlock(object who, string id, object key){varargs mixed eventLock(object who, mixed arg1, mixed arg2){varargs mixed eventPick(object who, string id, object tool){varargs mixed eventUnlock(object who, mixed arg1, mixed arg2){varargs string array GetKeys(string unused){int GetLocked(){int SetLocked(int x){int GetLockStrength(){int SetLockStrength(int x){function GetPick(){function SetPick(function f){mixed CanLock(object who, string id){varargs mixed direct_lock_obj_with_obj(object target, object key, mixed id...){varargs mixed direct_lock_obj_with_str(object target, mixed key, mixed id...){varargs mixed direct_pick_str_on_obj(string str, object target, string str2,varargs mixed direct_pick_str_on_obj_with_obj(string str, object target, object tool,varargs mixed direct_unlock_obj_with_obj(object target, object key, string id, string key2){varargs mixed direct_unlock_obj_with_str(object target, object key, string id, string key2){mixed direct_wizlock_obj(){ return 1; }mixed direct_wizunlock_obj(){ return 1; }","/lib/events/rock.c":"mixed direct_rock_obj(object target){mixed direct_rock_wrd_obj(object target){mixed direct_rock_str(string str){mixed direct_rock_str_on_obj(string str, object target){varargs mixed eventRock(object who, mixed what){varargs int CanRock(mixed who, mixed what){","/lib/events/scratch.c":"varargs mixed eventScratch(object who, mixed component){string array GetScratches(){mapping RemoveScratch(string item){varargs mapping SetScratch(mixed key, mixed desc){varargs mixed CanScratch(object who, string component){mixed direct_scratch_obj(object target){mixed direct_scratch_on_obj(object target){mixed direct_scratch_str_on_obj(string str, object target){mixed direct_scratch_on_str_on_obj(string str, object target){","/lib/teacher.c":"static void create(){static void init(){string SetLocalCurrency(string str){int SetAllLanguages(int i){int GetAllLanguages(){int GetCommercial(){int SetCommercial(int i){int GetTeachingFee(){int SetTeachingFee(int i){string GetLocalCurrency(){string array GetTeachingLanguages(){ return copy(TeachingLanguages); }static int ContinueTeaching(object who, string language, int x){mapping GetStudents(){ return copy(Students); }int eventHelp(object who, string unused){int eventStart(object who, string language){int eventContinue(object who, string language, int x){int eventComplete(object who, string language){string Expertise(){int eventTeachLanguage(object who, string verb, string language){mixed AddTeachingLanguages(string array args){mixed RemoveTeachingLanguages(string array args...){","/lib/events/buy.c":"mixed CanSell(object who, string what){int direct_buy_str_from_liv(string str){","/lib/events/fly.c":"mixed direct_fly_into_str(string str){mixed direct_fly_str(string str){","/lib/steal.c":"static void create(){mixed direct_steal_obj_from_liv(){ return CanSteal(this_player()); }mixed eventSteal(object who){mixed SetPreventSteal(mixed val){ return (PreventSteal = val); }mixed GetPreventSteal(){ return PreventSteal; }","/lib/events/smell.c":"mapping GetSmellMap(){varargs mixed SetSmell(mixed array args...){mapping RemoveSmell(string item){string array GetSmells(){mixed direct_smell_obj(){mixed direct_smell_str_word_obj(string str){varargs mixed eventSmell(object who, string str){","/lib/fuel.c":"static void create(){varargs string GetLong(string val){mixed eventRefuel(int x){mixed eventDecreaseFuel(int x){int GetFuelAmount(){static int SetFuelAmount(int x){string GetFuelType(){int GetMaxFuel(){static int SetMaxFuel(int x){int GetRefuelable(){static int SetRefuelable(int x){static string SetFuelType(string str){","/lib/base_trainer.c":"void create(){static void init(){int eventTrain(object who, string verb, string skill){int SetNoSpells(int i){mixed AddTrainingSkills(string array args){string array GetTrainingSkills(){ return copy(TrainingSkills); }mixed RemoveTrainingSkills(string array args){mapping GetStudents(){ return copy(Students); }int eventHelp(object who, string unused){static int ContinueTraining(object who, string skill, int x){int eventStart(object who, string skill){int eventContinue(object who, string skill, int x){int eventComplete(object who, string skill){int GetNoSpells(){string Expertise(){","/lib/std/armor.c":"void create(){void init(){","/lib/race.c":"static void heart_beat(){string GetRace(){ return Race; }void NewBody(string race){static void create(){varargs int eventDie(mixed agent){varargs string SetRace(string race, mixed extra){int SetMaxHealthPoints(int x){int GetCarriedMass(){ return 0; }int GetMaxCarry(){string GetResistance(int type){ return genetics::GetResistance(type); }varargs int GetMaxHealthPoints(string limb){int GetMaxMagicPoints(){float GetMaxStaminaPoints(){int GetAlcohol(){ return body::GetAlcohol(); }int GetHeartRate(){varargs void SetStat(string stat, int level, int classes){int GetStatLevel(string stat){ return genetics::GetStatLevel(stat); }string GetGender(){ return Gender; }string GetTown(){ return Town; }string SetTown(string str){ return (Town = str); }mixed CanEat(object ob){mixed eventDrink(object ob){mixed eventEat(object ob){string SetGender(string gender){ return (Gender = gender); }int GetLuck(){int GetMobility(){int GetRespiration(){varargs int CanBreathe(object what, object where, int dbg){mixed CanDrink(object ob){int SetRespiration(int i){","/lib/props/move.c":"int eventMove(mixed dest){int GetAnchored(){object GetLastEnvironment(){int SetAnchored(int x){","/lib/bboard.c":"void create(){string GetExternalDesc(){void init(){static private int valid_edit(string author){int cmd_post(string str){static void begin_post(string cmd, string subj, string file, function f){void continue_post(string subj, string file){void end_post(string subj, string mail){int cmd_read(string str){int cmd_followup_and_respond(string str){void continue_followup(mapping post, string subj, string file){void continue_mail(mapping post, string subj, string file){static void check_include_text(string ans, string subj, string file, mappingint cmd_edit(string str){void end_edit(string subj, int num){void set_board_id(string str){ __BoardID = str; }string query_board_id(){ return __BoardID; }string query_board_time(int x){void RegisterLocation(){int cmd_remove(string str){","/lib/std/limb.c":"string GetShort(){int CanReceive(object ob){void create(){string GetItemCondition(){int Destruct(){int GetSaveString(){void init(){int GetCount(int i){string GetRace(){int SetNoDecay(int i){string GetLimb(){void SetLimb(string limb, string owner, string race){int eventDecay(){int GetSlowDecay(){int GetNoDecay(){string GetOwner(){int SetSlowDecay(int i){int SetCount(int i){","/lib/detect.c":"mixed eventDetect(object who, string str, int ability){int direct_detect_wrd_in_obj(string word){","/lib/flow.c":"int eventMove(mixed dest){void create(){varargs int eventPrint(string msg, mixed arg2, mixed arg3){int eventDestruct(){void init(){void heart_beat(){int GetPressure(){int AddPressure(int x){void CheckRooms(){string GetRoomAffectLong(){int GeteventPrints() { return 1; }int SetPressure(int i){int GetHBOverride(){int SetHBOverride(int x){int GetDoorStopped(){int SetDoorStopped(int i){void shb(int i){void eventFlood(mixed targets){","/lib/events/bait_with.c":"mixed eventBait(object who, object pole){int GetBaitStrength(){int SetBaitStrength(int x){mixed indirect_bait_obj_with_obj(){","/lib/events/fall.c":"mixed eventFall(){","/lib/elevator.c":"static void create() {int eventMove(mixed foo){void init(){mapping GetFloors(){mapping SetFloors(mapping floors){int GetSpeed(){int SetSpeed(int x){","/lib/missile.c":"void create(){string GetName(){void init(){object GetOwnerOb(){mixed eventNegotiateObstacles(){mixed eventRunOut(){mixed eventEncounterBlock(){string SetCruiseInMessage(string str){string SetCruiseOutMessage(string str){mixed eventCruiseMessages(object this_room, object next_room, string dir){int launch(string str){int GetDebugging(){int GetRange(){int SetRange(int x){int GetDamage(){int SetDebugging(int x){varargs object SetOwner(object who){int GetSpeed(){int SetSpeed(int x){varargs object SetOwnerOb(object ob){int SetDamage(int x){int SetArmed(int x){void eventDeploy(string str){","/lib/language.c":"int GetLanguageLevel(string lang){int GetPolyglot(){varargs void SetLanguage(string lang, int level, int native){string GetNativeLanguage(){int GetNextLevel(string lang, int curr_level){mapping RemoveLanguage(string lang){mapping SetNativeLanguage(string lang){mixed SetDefaultLanguage(string str){string GetDefaultLanguage(){string GetLanguageName(string lang){int AddLanguagePoints(string lang, int points){int GetLanguagePoints(string lang){string array GetLanguages(){int SetPolyglot(int i){int GetStatLevel(string stat){ return 0; }","/lib/living.c":"int CanCarry(int amount){ return carry::CanCarry(amount); }int AddCarriedMass(int x){ return carry::AddCarriedMass(x); }int GetCarriedMass(){int GetMaxCarry(){ return combat::GetMaxCarry(); }static void create(){mixed direct_get_obj(mixed args...){mixed direct_get_obj_from_obj(mixed args...){int is_living(){ return 1; }varargs mixed eventShow(object who, string str){varargs int eventMoveLiving(mixed dest, string omsg, string imsg, mixed dir){int inventory_accessible(){ return 1; }int eventFollow(object dest, int followChance){mixed direct_ride_str(){mixed direct_ride_word_str(){mixed direct_mount_liv(){mixed direct_dismount_liv(){mixed direct_dismount_from_liv(){int SetDead(int i){int direct_follow_liv(){ return 1; }int direct_lead_liv(){ return 1; }int direct_evade_liv(){ return 1; }mixed CanAttack(){int GeteventPrints(){mixed direct_give_liv_obj(){varargs mixed CanCastMagic(int hostile, string spell){mixed indirect_give_obj_to_liv(object item){mixed direct_give_liv_wrd_wrd(object targ, string num, string curr){mixed direct_give_wrd_wrd_to_liv(string num, string curr){mixed direct_steal_wrd_from_liv(string wrd){mixed indirect_steal_obj_from_liv(object item, mixed args...){mixed CanReceiveMagic(int hostile, string spell){int SetPK(int x){ return (isPK = x); }int GetPK(){ return isPK; }varargs mixed CanReceiveHealing(object who, string limb){mixed direct_verb_rule(string verb){mixed direct_attack_liv(){mixed direct_attack_only_liv(){mixed direct_attack_liv_only(){mixed direct_target_liv(){mixed direct_target_only_liv(){mixed direct_target_liv_only(){mixed direct_bite_liv(){mixed direct_capture_liv_word_obj(){mixed direct_pray_for_str_against_str_for_liv(){mixed direct_cast_str_on_obj(){mixed direct_cast_str_against_str(){mixed direct_cast_str_on_str_of_obj(){mixed direct_free_liv_from_obj(){mixed direct_resurrect_obj(){ return 1; }int GetNoCondition(){mixed indirect_zap_liv(){ return 1; }mixed indirect_pulsecheck_liv(){ return 1; }int direct_rockwhip_liv(){ return CanReceiveMagic(1, \"rockwhip\"); }int direct_acidspray_liv(){ return CanReceiveMagic(1, \"acidspray\"); }int direct_annihilate_at_liv(){ return CanReceiveMagic(1, \"annihilate\"); }int direct_annihilate_liv(){ return CanReceiveMagic(1, \"annihilate\"); }int direct_arrow_liv(){ return CanReceiveMagic(1, \"arrow\"); }int direct_arrow_at_liv(){ return CanReceiveMagic(1, \"arrow\"); }int direct_blades_at_liv(){ return CanReceiveMagic(1, \"blades\"); }int direct_blades_liv(){ return CanReceiveMagic(1, \"blades\"); }int direct_corrupt_liv(){ return CanReceiveMagic(1, \"currupt\"); }int direct_demonclaw_liv(){ return CanReceiveMagic(1, \"demonclaw\"); }int direct_dispel_liv(){ return CanReceiveMagic(1, \"dispel\"); }int direct_drain_at_liv(){ return CanReceiveMagic(1, \"drain\"); }int direct_drain_liv(){ return CanReceiveMagic(1, \"drain\"); }int direct_fireball_at_liv(){ return CanReceiveMagic(1, \"fireball\"); }int direct_fireball_liv(){ return CanReceiveMagic(1, \"fireball\"); }int direct_frigidus_at_liv(){ return CanReceiveMagic(1, \"frigidus\"); }int direct_frigidus_liv(){ return CanReceiveMagic(1, \"frigidus\"); }int direct_holylight_liv(){ return CanReceiveMagic(1, \"holylight\"); }int direct_missile_liv(){ return CanReceiveMagic(1, \"missile\"); }int direct_missile_at_liv(){ return CanReceiveMagic(1, \"missile\"); }int direct_shock_liv(){ return CanReceiveMagic(1, \"shock\"); }int direct_palm_liv(){ return CanReceiveMagic(1, \"palm\"); }int direct_immolate_liv(){ return CanReceiveMagic(1, \"immolate\"); }int direct_gale_liv(){ return CanReceiveMagic(1, \"gale\"); }int direct_aura_liv(){ return CanReceiveMagic(0, \"aura\"); }int direct_soulseek_liv(){ return CanReceiveMagic(0, \"soulseek\"); }int direct_cloak_wrd(){ return CanReceiveMagic(0, \"cloak\"); }int direct_stealth_wrd(){ return CanReceiveMagic(0, \"stealth\"); }int direct_backlash_for_liv(){ return CanReceiveMagic(0, \"backlash\"); }int direct_backlash_for_liv_against_wrd(){ return CanReceiveMagic(0, \"backlash\"); }int direct_balance_obj_to_obj(){ return CanReceiveMagic(0, \"balance\"); }int direct_buffer_liv(){ return CanReceiveMagic(0, \"buffer\"); }int direct_calm_liv(){ return CanReceiveMagic(0, \"calm\"); }int direct_cleanse_liv(){ return CanReceiveMagic(0, \"cleanse\"); }int direct_convert_liv(){ return CanReceiveMagic(0, \"convert\"); }int direct_shield_liv(){ return CanReceiveMagic(0, \"shield\"); }int direct_veil_liv_against_wrd_wrd(){ return CanReceiveMagic(0, \"veil\"); }int direct_ward_liv_against_wrd(){ return CanReceiveMagic(0, \"ward\"); }int direct_remedy_liv(){ return CanReceiveMagic(0, \"remedy\"); }int direct_command_str_to_str(){ return CanReceiveMagic(0, \"command\"); }int direct_gaze(){ return CanReceiveMagic(0, \"gaze\"); }int direct_send_str_to_str(){ return CanReceiveMagic(0, \"send\"); }int direct_connect_str(){ return CanReceiveMagic(0, \"connect\"); }int direct_heal_liv(){ return CanReceiveMagic(0, \"heal\"); }int direct_mend_liv(){ return CanReceiveMagic(0, \"mend\"); }int direct_refresh_liv(){ return CanReceiveMagic(0, \"refresh\"); }int direct_rejuvinate_liv(){ return CanReceiveMagic(0, \"rejuvinate\"); }int direct_farsight_liv(){ return 1; }int direct_bump_liv(){ return 1; }int direct_marry_liv_to_liv(){ return 1; }int direct_party_wrd_liv(){ return 1; }int direct_challenge_liv(){ return 1; }int direct_ignore_liv(){ return 1; }int indirect_throw_obj_at_obj(){ return 1; }int indirect_toss_obj_at_obj(){ return 1; }int indirect_buy_str_from_liv(){ return 1; }int indirect_sell_obj_to_liv(){ return 1; }int indirect_marry_liv_to_liv(){ return 1; }mixed eventCure(object who, int amount, string type){mixed eventInfect(object germ){varargs mixed eventSteal(object who, mixed what, object target, int skill){int GetNonCurrencyMass(){mixed SetAttackable(mixed foo){mixed GetAttackable(){int SetNoCondition(int foo){string GetEquippedShort(){mixed indirect_give_obj_liv(object item){mixed indirect_give_obs_to_liv(object array items){mixed indirect_give_obs_liv(object array items){mixed direct_backstab_liv(){mixed direct_heal_str_of_liv(string limb){mixed direct_remedy_str_of_liv(string limb){mixed direct_regen_str_on_liv(string limb){mixed direct_teleport_to_liv(){mixed direct_portal_to_liv(){mixed direct_resurrect_liv(){mixed direct_scry_liv(){mixed indirect_resurrect_obj(){ return 1; }mixed direct_show_liv_obj(){mixed indirect_show_obj_to_liv(object item){mixed indirect_show_obj_liv(object item){mixed direct_give_liv_obs(){","/lib/match.c":"mixed eventStrike(object who){int GetStrikeChance(){static int SetStrikeChance(int x){mixed direct_strike_obj(){","/lib/exits.c":"mixed CanGo(object who, string str){static void create(){string array GetDoors(){mapping GetDoorsMap(){varargs string CreateDoor(string dir, string odir, string long, string locked, string key){mixed eventGo(object who, string str){string SetDoor(string dir, string file){string GetDirection(string dest){object GetDummyItem(mixed id){varargs void AddEnter(string dir, string dest, function pre, function post){string GetEnter(string dir){static mapping GetEnterData(string dir){varargs string array GetEnters(int i){void RemoveEnter(string dir){void SetEnters(mapping mp){string GetEnterMessage(){string SetEnterMessage(string str){varargs mapping AddExit(string dir, string dest, function pre, function post){string GetExit(string str){mapping GetExitData(string str){mapping RemoveExit(string dir){mapping SetExits(mapping mp){string GetGoMessage(){string SetGoMessage(string str){string GetObviousExits(){string SetObviousExits(string str){string GetSky(){string SetSky(string str){string ResolveObjectName(string file){mapping GetEnterMap(){mapping GetFullExitData(){mapping GetExitMap(){string array GetExits(){","/lib/events/look_in.c":"mixed direct_look_in_obj(){mixed direct_look_inside_obj(){mixed indirect_look_at_obj_word_obj(object target){mixed inventory_visible(){string GetInternalDesc(){string SetInternalDesc(string str){int GetOpacity(){int SetOpacity(int x){varargs mixed CanShowInterior(object who, object target){varargs mixed eventShowInterior(object who, object target){","/lib/virtual/virt_std.c":"object compile_object(string fname){mixed CreateVirtualObject(string fname){","/lib/events/sit.c":"object array GetSitters(){mixed eventReleaseStand(object who){mixed eventReceiveSit(object who){int CanGet(object who){mixed direct_sit_word_obj(){mixed direct_sit_down_word_obj(){int GetMaxSitters(){static int SetMaxSitters(int x){","/lib/comp/seal.c":"varargs mixed CanOpen(object who, string id){varargs mixed eventOpen(object who, object tool){mixed CanLock(object who, string id){void create(){","/lib/std/bot_corpse.c":"void create(){void init(){void SetCorpse(object who){int eventDecay(){","/lib/chamber.c":"void create(){varargs string GetInternalDesc(){int eventMove(mixed dest){varargs int eventPrint(string msg, mixed arg2, mixed arg3){int inventory_accessible(){void init(){varargs int eventDie(mixed agent){int eventRide(string direction){mixed eventMount(object who){varargs int CanFly(mixed who, mixed where){varargs mixed eventHearTalk(object who, object target, int cls, string verb,object array GetDummyItems(){varargs void AddItem(mixed item, mixed val, mixed adjectives){mapping GetItemsMap(){mapping RemoveItem(mixed item){mapping SetItems(mixed items){varargs mixed GetBefriended(mixed who){varargs mixed eventEnter(object who, string what, string verb){mixed CanGo(object who, string str){mixed eventGo(object who, string str){void RemoveRead(mixed item){varargs void SetRead(mixed items, mixed arg){void AddRead(mixed item, mixed val){int eventDrive(string direction){mixed GetChamberInterior(){mixed direct_drive(){mixed direct_drive_word_str(){mixed direct_fly(){mixed direct_fly_word_str(){int SetChamberInterior(mixed arg){","/lib/npc.c":"static void create(){int eventDestruct(){void eventReconnect(){ }static int cmdAll(string arg){string GetCommandFail(){ return \"What?\"; }string GetShort(){int GetRadiantLight(int ambient){int CanReceive(object ob){ return CanCarry(ob->GetMass()); }int eventReceiveObject(object who){int eventReleaseObject(object who){int AddCarriedMass(int x){ return living::AddCarriedMass(x); }int eventMove(mixed dest){varargs int eventPrint(string msg, mixed arg2, mixed arg3){string GetName(){ return object::GetName(); }static void heart_beat(){mixed eventTurn(object who){mapping SetInventory(mapping mp ){ return (Inventory = mp); }mixed array GetCommands(){ return commands(); }string SetKeyName(string nom){string SetClass(string cls){int GetLevel(){ return NPCLevel; }varargs string GetLong(string str){varargs int eventShow(object who, string str){void SetAction(int chance, mixed val){int GetActionsEnabled(){static void init(){void SetCombatAction(int chance, mixed val){string GetCapName(){ return object::GetCapName(); }varargs int eventDie(mixed agent){int eventCompleteMove(mixed dest){void eventEnemyDied(object ob){static int ContinueHeart(){varargs string SetRace(string race, mixed extra){int SetLevel(int x){int SetMagicPoints(int x){float SetStaminaPoints(float x){float SetMaxStaminaPoints(float x){varargs void SetCurrency(mixed val, int amount){mixed SetEncounter(mixed val){ return (Encounter = val); }string array AddEncounter(string nom){string array RemoveEncounter(string nom){mixed GetEncounter(){ return Encounter; }mixed SetDie(mixed val){ return (Die = val); }mixed GetDie(){ return Die; }mixed GetCombatAction(){ return CombatAction; }string array GetEnemyNames(){ return EnemyNames; }int array GetScreen(){ return ({ 80, 24 }); }int AddEnemy(object ob){mapping GetInventory(){ return copy(Inventory); }void CheckEncounter(){int GetVisibleRiders(){string GetPlainShort(){int SetAutoStand(int i){int GetCustomXP(){int SetCustomXP(int i){int SetMaxMagicPoints(int x){mixed SetAggressive(mixed val){int DisableActions(int x){int EnableActions(int x){int GetAutoStand(){ return AutoStand; }string GetMountStyle(){string SetMountStyle(string str){int SetVisibleRiders(int i){int eventExtraAction(){ return 1; }","/lib/events/poison.c":"string array GetSave(){mixed eventPoison(object who, object agent, int strength){mixed direct_poison_obj_with_obj(){int SetPoison(int x){mixed CanPoison(object who){int AddPoison(int x){int GetPoison(){","/lib/daemons/player_stub.c":"string GetKeyName(){string SetKeyName(string str){","/lib/battery.c":"void create(){void init(){void heart_beat(){int eventUse(int i){int SetCharge(int i){charge = i; fullcharge = i; return 1; }int SetCellType(string str){celltype=str; return 1; }string GetCellType(){ return celltype; }int SetDrainRate(int i){ drainrate = i; return i; }int Spent(){int GetCharge(){ return charge; }int SetPowerType(string str){powertype=str; return 1; }string GetPowerType(){ return powertype; }int SetRechargeable(int i){ rechargeable = i; return i;}int GetRechargeable(){ return rechargeable;}int SetDrainable(int i){ drainable = i; return i; }int GetDrainable(){ return drainable; }int GetDrainRate(){ return drainrate; }int ModCharge(int i){int eventDrain(int i){int eventCharge(int i){","/lib/editor.c":"static void create(){static string process_input(string str){varargs void eventEdit(string file, function callback){","/lib/persist.c":"string GetSaveString(){static int eventConvertObject(mixed val, int recurse){int eventLoadObject(mixed val, int recurse){static mixed array AddSave(mixed array vars){static int SetSaveRecurse(int flag){ return (SaveRecurse = flag); }mixed array cGetSave(){ return copy(Saved); }mixed array dGetSave(){ return Saved; }int SetRetain(int i){int GetRetain(){","/lib/teach.c":"varargs int CanTeach(object whom, string what){int eventOfferTeaching(object who, string what){int eventTeach(object who, string what){int direct_teach_str_to_liv(){ return 1;}int direct_teach_liv_to_str(){ return 1;}","/lib/events/load.c":"varargs mixed CanLoad(object who, object what){varargs mixed CanUnload(object who, object what){int direct_load_obj(object target){int direct_unload_obj(object target){int direct_load_obj_word_obj(object thingus, object target){int indirect_load_obj_word_obj(object target, object thingus){int direct_unload_obj_word_obj(object thingus, object target){int indirect_unload_obj_word_obj(object one, object two, object three){int SetMaxLoad(int i){int GetMaxLoad(int i){varargs mixed eventLoad(object what, object where){varargs mixed eventUnload(object what, object where){int SetLoaded(int i){int GetLoaded(int i){int GetMaxLoaded(){","/lib/clip.c":"int CanReceive(object ob){int CanRelease(object ob){void create(){varargs mixed eventLoad(object who, object where){varargs mixed eventUnload(mixed where){int MinusAmmo(int i){ ammo -= i; return 1; }int SetAmmoType(string str){ammotype=str; return 1; }int SetFirearmType(string str){firearmtype=str; return 1; }int SetMaxAmmo(int i){ MaxAmmo=i; return 1; }int SetCaliber(int x){ caliber=x; return 1; }int SetMillimeter(int x){ millimeter=x; return 1; }string GetAmmoType(){ return ammotype; }string GetFirearmType(){ return firearmtype; }int GetCaliber(){ return caliber; }int GetMillimeter(){ return millimeter; }int PlusAmmo(int i){ ammo += i; return 1; }","/lib/cgi.c":"mapping ParsePost(string args){","/lib/events/knock.c":"varargs mixed eventKnock(object who, mixed component){string array GetKnocks(){mapping RemoveKnock(string item){varargs mapping SetKnock(mixed key, mixed desc){varargs mixed CanKnock(object who, string component){mixed direct_knock_obj(object target){mixed direct_knock_on_obj(object target){mixed direct_knock_str_on_obj(string str, object target){mixed direct_knock_on_str_on_obj(string str, object target){","/lib/events/bait.c":"mixed direct_bait_obj_with_obj(){string array GetSave(){int eventBait(object who, object bait){int AddBait(int x){int GetBait(){int SetBait(int x){mixed CanBait(object who){","/lib/stargate.c":"void create(){void init(){void heart_beat(){int eventEnter(object who){string status(){string displayLong(){string displayShort(){mixed cmdDial(string s){int cmdEnter(string what){void SetOrigin(string o, string d){string GetOrigin(){void eventConnect(string destination){int eventDisconnect(){","/lib/std/lockpick.c":"void create(){void init(){int SetPickingQuality(int i){int GetPickingQuality(){mixed indirect_pick_str_on_obj_with_obj(string str, object target, object tool,varargs mixed CanPick(mixed who, mixed what){varargs mixed eventPickLock(mixed who, mixed id, mixed tool){","/lib/std/furnace.c":"void create(){int CanReceive(object ob){void heart_beat(){void init(){","/lib/nmsh.c":"string GetKeyName(){ return 0; }static void create(){static int array GetScreen(){ return ({ 79, 24 }); }string get_path(){ return query_cwd(); }int Setup(){string GetUserPath(){varargs int GetInvis(){ return 0; }string GetAlias(string alias){string GetXverb(string xverb){nomask static int cmd_nickname(string str){string process_input(string str){nomask static int cmd_unalias(string str){nomask static int cmd_pwd(){nomask static int cmd_work(string str){nomask static int cmd_alias(string str){nomask static int cmd_nmsh(string str){nomask static int cmd_cd(string str){nomask static int cmd_pushd(string str){nomask static int cmd_popd(){varargs nomask string write_prompt(string str){nomask static void process_request(string request, string xtra){static int request_vis(object ob){private static int set_cwd(string str){nomask private static string do_nickname(string str){nomask private static string do_alias(string str){nomask static string replace_nickname(string str){void reset_prompt(){string GetPromptString(){int query_mp(){ return 1; }int query_max_mp(){ return 10; }int query_hp(){ return 1; }int query_max_hp(){ return 10; }int query_sp(){ return 1; }int query_max_sp(){ return 10; }varargs int erase_prompt(int x){static int rAscii(string str){static int rAnsi(string str){static int rArrow(string str){static int rDel(){static int rBackspace(){static int rCtrl(string str){static int rEnter(){static string user_names(object ob){string SetUserPath(string str){string query_prev_wd(){ return Directories[\"previous\"]; }string SetPrompt(string str){ return Prompt = str; }static void EchoCommand(string str){mixed RecalculateHist(int x){","/lib/events/swivel.c":"varargs mixed eventSwivel(object who, mixed what){mixed direct_swivel_obj(object target){mixed direct_swivel_wrd_obj(object target){mixed direct_swivel_str(string str){mixed direct_swivel_str_on_obj(string str, object target){varargs int CanSwivel(mixed who, mixed what){","/lib/firearm.c":"int CanReceive(object ob){int CanRelease(object ob){mixed CanGetFrom(object who, object item){mixed CanPutInto(object who, object what){static void create(){varargs mixed eventShoot(object ob, mixed target, string dir, string whom){void init(){mixed eventLoad(object ob){mixed eventUnload(mixed what){int SetLoaded(int i){ loaded=i; return 1; }int GetMaxLoaded(){int GetLive(){ return loaded; }string SetFirearmName(string str){string GetFirearmName(){int eventFire(mixed str){int GetMagnum(){int SetAmmo(int i){ rounds=i; return 1; }string GetAmmoType(){ return AmmoType; }int SetMag(int i){ mag=i; return 1; }int doMagUnload(){int SetMagnum(int i){int InitRevolver(string array arr){int SetAmmoType(string str){ AmmoType=str; return 1; }int SetFirearmType(string str){ FirearmType=str; return 1; }int SetMaxAmmo(int x){ MaxAmmo=x; return 1; }int SetCaliber(int x){ Caliber=x; return 1; }int SetMillimeter(int x){ Millimeter=x; return 1; }string GetFirearmType(){ return FirearmType; }int GetMaxAmmo(){ return MaxAmmo; }int GetCaliber(){ return Caliber; }int GetMillimeter(){ return Millimeter; }int CalculateAmmoSize(){int missed_shot(){int doRevolverUnload(string what, string num){int SetAmmoFile(string str){ AmmoFile=str; return 1; }","/lib/std/vendor.c":"static void create(){int CanCarry(int amount){ return 1; }mixed eventBuy(object who, object array obs){int indirect_sell_obj_to_liv(){ return 1; }mixed eventAsk(object who, string str){mixed CanSell(object who, string what){int GetValue(object ob, object who){int GetVendorType(){ return VendorType; }int SetVendorType(int x){ return (VendorType = x); }mixed eventSell(object who, mixed what){string SetLocalCurrency(string str){ return (LocalCurrency = str); }string SetStorageRoom(string room){ return (StorageRoom = room); }int SetMaxItems(int x){ return (MaxItems = x); }int indirect_sell_obs_to_liv(){ return 1; }mixed direct_buy_str_from_liv(string str){mixed CanBuy(object who, object array obs){int GetCost(object ob, object who){string GetLocalCurrency(){ return LocalCurrency; }int cmdBrowse(object who, string args){int cmdShow(object who, string args){int cmdPrice(object who, string args){int cmdAppraise(object who, string args){string GetStorageRoom(){ return StorageRoom; }int GetMaxItems(){ return MaxItems; }","/lib/messages.c":"string GetName(){ return 0; }static void create(){string SetMessage(string msg, string str){mapping GetMessages(){ return copy(Messages); }","/lib/props/save.c":"varargs void create(){string GetSaveName(){int GetLastSave(){int SetPersistent(int x){mixed GetPersistentInventory(){static varargs int RestoreObject(mixed str, int i){int eventDestruct(){static varargs int SaveObject(mixed str, int i){","/lib/events/show.c":"mixed indirect_show_liv_obj(object target){mixed direct_show_obj_to_liv(){mixed direct_show_obj_liv(){","/lib/comp/object.c":"static void create(){static int Destruct(){mixed indirect_dest_obj(){ return CanDest(); }","/lib/blank_pile.c":"string GetShort(){static void create(){string array GetId(){","/lib/chapel.c":"static void create(){string array GetClasses(){ return Classes; }string array SetClasses(string array rc){ return (Classes = rc); }int SetAllowSacrifice(int x){ return (AllowSacrifice = x); }int GetAllowSacrifice(){ return AllowSacrifice; }string array SetDeities(string array deities){string array GetDeities(){ return Deities; }int SetSacrificeType(int x){ return (SacrificeType = x); }int AddSacrificeType(int x){ return (SacrificeType |= x); }int GetSacrificeType(){ return SacrificeType; }string array SetReligion(string adj, string noun){varargs string GetReligion(int flag){ return Religion[flag]; }mixed CanSacrifice(object who, object what, string deus){mixed CanMarry(object who, object spouse1, object spouse2){mixed eventMarry(object who, object spouse1, object spouse2){mixed eventSacrifice(object who, object what, string deus){","/lib/std/base_storage.c":"int inventory_visible(){int GetOpacity(){int SetOpacity(mixed arg){varargs mixed CanShowInterior(object who, object target){int GetRadiantLight(int ambient){int eventReceiveObject(object ob){int inventory_accessible(){mixed CanGetFrom(object who, object item){mixed CanPutInto(object who, object what){void create(){mixed CanClose(object who, string id){mixed CanOpen(object who, string id){mixed CanPick(object who, string id){mixed CanUnlock(object who, string id, object key){mixed CanLock(object who, string id){int GetMaxRecurseDepth(){int SetMaxRecurseDepth(int i){int GetCanClose(){int SetCanClose(int x){int GetCanLock(){int SetCanLock(int x){void SetKey(string key){void PutCheck(){int GetRecurseDepth(){int AddRecurseDepth(int i){int SetRecurseDepth(int i){","/lib/events/manipulate.c":"varargs mixed CanManipulate(object who, string component){varargs mixed eventManipulate(object who, string component){string array GetManipulates(){mapping RemoveManipulate(string item){varargs mapping SetManipulate(mixed key, mixed desc){mixed direct_move_obj(object target){mixed direct_move_str_on_obj(string str, object target){","/lib/events/shake.c":"varargs mixed eventShake(object who, string component){string array GetShakes(){mapping RemoveShake(string item){varargs mapping SetShake(mixed key, mixed desc){varargs mixed CanShake(object who, string component){mixed direct_shake_obj(object target){mixed direct_shake_str_on_obj(string str, object target){","/lib/lvs/abilities.c":"string array GetSkills(){static void create(){varargs void SetSkill(string skill, int level, int cls){int GetLevel(){int SetLevel(int x){void RemoveSkill(string skill){void AddSkillBonus(string skill, mixed f){varargs void RemoveSkillBonus(string skill, object ob){mapping GetSkillsMap(){string array GetPrimarySkills(){int GetBaseSkillLevel(string skill){int ResetLevel(){int GetMaxSkillLevel(string skill){int GetMaxSkillPoints(string skill, int level){int GetSkillBonus(string skill){int GetSkillClass(string skill){int GetSkillLevel(string skill){int AddSkillPoints(string name, int x){","/lib/std/item.c":"string array GetSave(){void eventDeteriorate(int type){string GetItemCondition(){int eventMove(mixed dest){static void create(){varargs mixed direct_get_obj_from_obj(object item, mixed gamma,mixed alfa, mixed beta, mixed epsilon){static int Destruct(){string GetExternalDesc(object who){mixed eventShow(object who, string component){static mixed array AddSave(mixed array vars){mixed CanSteal(object who){void init(){ }mixed direct_cast_str_on_obj(){mixed direct_cast_str_on_str_of_obj(){int GetRetainOnDeath(){varargs mixed CanThrow(object who, object target){void eventRemoveBlessing(){int eventBless(int amount, int time){mixed eventThrow(object who, object target){varargs mixed eventRepair(object who, int strength, int type){mixed indirect_balance_obj_to_obj(){mixed direct_compare_obj_to_obj(){mixed indirect_compare_obj_to_obj(){mixed direct_judge_obj_to_obj(){mixed indirect_judge_obj_to_obj(){mixed direct_use_obj_to_str(){mixed direct_throw_obj_word_obj(){mixed indirect_throw_obj_into_obj(){int direct_sacrifice_obj_to_str(string deus){int SetNoCondition(int i){string SetQuestId(string name){string GetQuestId(){int SetRetainOnDeath(int x){mixed CanRepair(object who){mixed direct_bless_obj(){mixed direct_curse_obj(){","/lib/std/chair.c":"int CanGet(object who){void create(){","/lib/teller.c":"static void create(){mixed GetCurrencies(){ return copy(Currencies); }mixed CanBank(object who){int SetNonLocalFee(int x){ return (NonLocalFee = x); }int SetOpenFee(int x){ return (OpenFee = x); }float SetExchangeFee(float x){ return (ExchangeFee = x); }mixed SetCurrencies(mixed var){int GetLocalFee(){ return LocalFee; }int GetNonLocalFee(){ return NonLocalFee; }int GetExchangeFee(){ return ExchangeFee; }int GetOpenFee(){ return OpenFee; }string GetBankName(){ return BankName; }int AddSurcharge(object who, string currency, int amount){int eventDeposit(object who, string currency, int amount){int eventExchange(object who, int amount, string str1, string str2){int eventOpenAccount(object who){string SetBankName(string str){ return (BankName = str); }int SetLocalFee(int x){ return (LocalFee = x); }string SetLocalCurrency(string str){ return (LocalCurrency = str); }int eventBalance(object who){int eventWithdraw(object who, string currency, int amount){string GetLocalCurrency(){ return LocalCurrency; }int cmdParse(object who, string cmd, string str, mixed args...){","/lib/events/climb.c":"varargs mixed eventClimb(object who, int type, string where){mapping GetClimbs(){int SetCanClimbCarried(int i){int GetCanClimbCarried(){varargs static mapping SetClimb(mixed val, int type){mixed direct_climb_obj(object ob){mixed direct_climb_out_of_obj(object ob){mixed direct_climb_word_obj(string word, object ob){","/lib/trap.c":"static void heart_beat(){static void create(){int SetMaxCapture(int x){object array GetCaptives(){int GetEscapeChance(){int SetEscapeChance(int x){int GetMaxCapture(){mixed CanCapture(object who, object target){mixed CanFree(object who, object target){mixed eventEscape(){mixed indirect_capture_liv_word_obj(object target){mixed eventFree(object who, string target){mixed eventCapture(object who, object target){mixed indirect_free_liv_from_obj(object target){","/lib/shadow.c":"int eventShadow(object ob){int eventUnshadow(){object GetShadowedObject(){string GetShadowedName(){","/lib/poison.c":"static void create(){mixed indirect_poison_obj_with_obj(){mixed GetPoisonStrength(){ return PoisonStrength; }int SetPoisonUses(int x){ return (PoisonUses = x); }mixed eventSpreadPoison(object who, object target){int GetPoisonUses(){ return PoisonUses; }int SetPoisonStrength(int x){ return (PoisonStrength = x); }","/lib/remote.c":"static void create() {string eventReadFile(string file) {string eventWriteFile(string file, string str) {string eventCommand(string cmd, string arg) {","/lib/events/lock_with.c":"mixed array GetSave(){mixed eventLockLock(object who, object what){mixed eventUnlockLock(object who, object what){int GetDisableChance(){int SetDisableChance(int x){int GetDisabled(){int SetDisabled(int x){varargs mixed indirect_lock_obj_with_obj(object target, object key, mixed id){varargs mixed indirect_lock_obj_with_str(object target, mixed key, mixed id...){mixed indirect_unlock_obj_with_obj(object target, object key, mixed id...){varargs mixed indirect_unlock_obj_with_str(object target, mixed key, mixed id){","/lib/props/id.c":"int id(string str){string GetName(){string GetKeyName(){string array GetId(){string array GetAdjectives(){string array GetCanonicalId(){string SetKeyName(string nom){string array parse_command_id_list(){string array parse_command_plural_id_list(){string array parse_command_adjectiv_id_list(){string GetCapName(){string GetUniqueId(){int SetMatching(int i){int GetMatching(){varargs void eventAnnounceCanonicalId(object env){varargs string array SetId(mixed val...){varargs string array SetAdjectives(mixed adjs...){string SetCapName(string str){varargs void ReceiveCanonicalId(mixed foo, int leaving){","/lib/props/clean.c":"int eventDestruct(){int GetNoClean(){static int SetNoClean(int x){int clean_up(int ref_exists){","/lib/cedit.c":"void create(){static int array GetScreen(){ return ({ 79, 24 }); }varargs int SetCedmode(int x, string file){static int rAscii(string c){static int rAnsi(string str){static int rArrow(string str){static int rDel(){static int rBackspace(){int rCtrl(string c){static int rEnter(){int ClearBuffers(){varargs int StatReport(string str){varargs int RedrawScreen(int topline){static int UpdateScreen(){static varargs int CeditCollate(int x){ /* when lines need to be resorted array /static varargs int CeditSave(string file){int GetCedmode(){","/lib/events/sink.c":"mixed eventSink(){","/lib/comp/weapon.c":"string array GetSave(){int eventStrike(object target){mixed CanEquip(object who, string array limbs){mixed eventEquip(object who, string array limbs){mixed eventUnequip(object who){int GetHands(){int GetWielded(){string GetWeaponType(){varargs string GetEquippedDescription(object who){int SetHands(int x){string SetWeaponType(string str){mixed SetWield(mixed val){mixed direct_remove_obj(){mixed direct_wear_obj(){string GetEquippedShort(){int eventDeteriorate(int type){","/lib/std/story.c":"static void create(){string GetTalesDir(){ return TalesDir; }string SetNoTaleMessage(string notalemessage){string GetNoTaleMessage(){ return NoTaleMessage; }int GetTellingTale(){ return AlreadyTellingTale; }void PickTale( string taletotell ){void TellTale( int part ){string SetTalesDir(string dir){","/lib/lead.c":"static void create(){int AddFollowBonus(object follower, int bonus){int GetFollowBonus(object follower){varargs mixed CanEvade(object ob){int eventMoveFollowers(object dest){int eventEvade(object ob){mixed direct_lead_liv(){mixed direct_evade_liv(){int GetFollowed(object follower){object array RemoveFollower(object follower){object array GetFollowers(){ return filter(keys(Followers), (: $1 :)); }varargs mixed CanLead(object ob){object array AddFollower(object follower){mapping GetFollowerMap(){ return copy(Followers); }int SetFollowed(object follower, int followed){","/lib/daemons/verb.c":"static void create(){string array GetVerbs(){ return ({ Verb }); }varargs static string array SetRules(mixed array args...){string GetErrorMessage(){ return ErrorMessage; }static string SetErrorMessage(string str){ return (ErrorMessage = str); }string array GetRules(){ return copy(Rules); }string array GetSynonyms(){ return copy(Synonyms); }varargs static string array SetSynonyms(mixed array args...){static string SetVerb(string str){","/lib/enter.c":"static void create(){string GetDoor(){varargs void SetEnter(string dest, function pre, function post){varargs void SetDoor(string door, string side){string GetEnter(){string ResolveObjectName(string file){mixed eventClose(object who){varargs mixed eventOpen(object who, object tool){mixed direct_close_obj(object target){varargs mixed eventLock(object who, mixed arg1, mixed arg2){varargs mixed eventPick(object who, string str, object tool){mixed eventUnlock(object who, object key){varargs mixed eventEnter(object who, string what, string verb){mixed direct_open_obj(object target){mixed direct_open_obj_with_obj(object target, object ob){varargs mixed direct_lock_obj_with_obj(object target, object tool){mixed direct_pick_str_on_obj(string str, object ob, string id1, string id2){mixed direct_pick_str_on_obj_with_obj(string str, object ob, object w,mixed direct_unlock_obj_with_obj(object target, object w){mixed direct_wizlock_obj(){ return 1; }mixed direct_wizunlock_obj(){ return 1; }varargs mixed eventKnock(object who, mixed what){varargs mixed eventScratch(object who, object tool){string GetDoorSide(){void SetDoorSide(string doorside){mixed direct_enter_obj(){mixed direct_enter_into_obj(){","/lib/body.c":"mixed eventFall(){string GetName(){ return 0; }static void heart_beat(){string GetRace(){ return 0; }varargs int eventReceiveDamage(mixed agent, int type, int x, int internal,void eventCompleteHeal(int x){varargs int GetHealthPoints(string limb){void NewBody(string race){static void create(){string GetLong(string nom){string GetCapName(){ return 0; }varargs int eventDie(mixed agent){int SetHealthPoints(int x){int GetMass(){int CanFly(){int CanSwim(){string GetResistance(int type){ return \"none\"; }int GetSize(int decimal){int GetBodyType(){varargs string array GetMissingLimbs(int not_default){int GetSleeping(){ return Sleeping; }string array GetLimbs(){string array GetExtraChannels(){string array AddExtraChannels(string array chans){string array RemoveExtraChannels(string array chans){varargs mixed eventBuy(mixed arg1, mixed arg2, mixed arg3){int SetMass(int i){int SetSize(int i){int SetBodyType(int i){int GetEncumbrance(){int GetPacifist(){string GetHealthShort(){string SetBodyComposition(string str){string GetBodyComposition(){int SetPacifist(int i){int SetCanBite(int i){int GetCanBite(){string array SetExtraChannels(string array chans){mixed direct_body_liv(){mixed direct_turn_liv(){void eventCheckEnvironment(){varargs int eventCollapse(int noparalyze){void ParseHook(string str){mixed CanRemoveItem(object ob){ return 1; }private void checkCollapse(){varargs int GetLead(string ammo){int SetDying(int x){void eventCheckHealing(){int eventCheckProtection(object agent, int type, int damage){mixed eventReceiveThrow(object who, object what){int eventRemoveItem(object ob){int eventWear(object ob, mixed limbs){mixed CanWear(object ob, string array limbs){varargs int AddLimb(string limb, string parent, int classes, int array armors){varargs int RestoreLimb(string limb, int recurse){varargs int RemoveLimb(string limb, mixed agent, int quiet){string GetRandomLimb(string targ){string GetTorso(){int GetLimbClass(string limb){string GetLimbParent(string limb){ return Limbs[limb][\"parent\"]; }string array GetLimbChildren(string limb){string array GetWieldingLimbs(){varargs int AddFingers(string limb, int x){int GetFingers(string limb){varargs object array GetWorn(string limb){varargs mixed GetWielded(string limb){varargs static int AddHealthPoints(int x, string limb, mixed agent){int AddMagicPoints(int x){int GetMagicPoints(){ return MagicPoints; }int GetMaxMagicPoints(){ return 0; }float AddStaminaPoints(mixed x){int GetStaminaPoints(){ return to_int(StaminaPoints); }float GetMaxStaminaPoints(){  return 0; }int AddMagicProtection(class MagicProtection cl){int RemoveMagicProtection(int i){int SetSleeping(int x){int AddAlcohol(int x){int GetAlcohol(){ return Alcohol; }int AddCaffeine(int x){int GetCaffeine(){ return Caffeine; }int AddFood(int x){ return (Food += x); }int GetFood(){ return Food; }int AddDrink(int x){ return (Drink += x); }int GetDrink(){ return Drink; }int AddPoison(int x){int GetPoison(){ return Poison; }int GetDying(){int GetHeartRate(){int GetHealRate(){int GetExperiencePoints(){ return ExperiencePoints; }int GetMelee(){ return melee; }mixed SetProtect(function f){ return (Protect = f); }function GetProtect(){ return Protect; }int GetHeartModifier(){varargs int AddHeartModifier(int x, int t){int AddHP(int hp){string array GetEquippedLimbs(){varargs int eventHealDamage(int x, int internal, mixed limbs){void eventReconnect(){mixed CanManipulate(){int HealLimb(string limb){int DestLimb(string limb){string GetMissingLimbParent(string limb){ return MissingLimbs[limb][\"parent\"]; }string array GetMissingLimbParents(string limb){int eventCompareLimbs(string limb1, string limb2){int AddLead(string ammo,int number){int AddExperiencePoints(mixed x){int SetMelee(int i){ melee = i; return melee; }string GetAffectLong(){int GetDeathEvents(){int SetDeathEvents(int i){int SetGodMode(int i){int GetGodMode(){string SetKeepalive(string str){string GetKeepalive(){","/lib/leader.c":"static void create(){int eventPreAttack(object ob){mixed eventAsk(object who, string str){void eventConvert(object who, string args){void eventPreview(object who, string args){void eventJoin(object who, string args){int eventTeachPlayer(object who, string spell){","/lib/elevator_button.c":"static void create() {object GetElevator(){object SetElevator(object ob){string SetButtonId(string str){string GetButtonId(){int openDoor(object who) {","/lib/props/properties.c":"mixed GetProperty(string prop){mixed AddProperty(string prop, mixed val){mapping GetProperties(){int RemoveProperty(string prop){mapping SetProperties(mapping props){mixed SetProperty(string prop, mixed val){","/lib/props/uniqueness.c":"int GetMaxClones(){int GetUnique(){int SetUnique(int x){int array GetRarity(){int array SetRarity(int count, int days){int SetMaxClones(int x){","/lib/bonus.c":"mixed CanDrop(object who){ return 0; }void create(){mixed CanGet(object who){ return 0; }int eventDestruct(){mixed CanPut(object who){ return 0; }mixed CanSell(object who){ return 0; }void init(){string GetBonusName(){void heart_beat(){mapping SetSkills(mapping arg){mapping SetStats(mapping arg){mapping GetStats(){mixed CanGive(object who){ return 0; }mapping GetSkills(){int AddBonusDuration(int i){int GetBonusDuration(){int RemoveBonuses(){int SetBonuses(){mapping SetPoints(mapping arg){mapping GetPoints(){int SetBonusDuration(int i){string SetBonusName(string name){","/lib/events/stop.c":"varargs mixed CanStop(object who, string what, mixed args){varargs mixed eventStop(object who, string what, mixed args){","/lib/props/radiance.c":"int GetRadiantLight(int ambient){int GetBaseRadiance(int foo){int SetRadiantLight(int x){","/lib/events/describe.c":"void eventDescribeEnvironment(int brief){","/lib/props/addstuff.c":"varargs int AddStuff(string array str, int q){","/lib/events/install.c":"varargs mixed CanUninstall(object who, object where, object what){varargs mixed eventInstall(object what, object where){varargs mixed eventUninstall(object what, object where){int direct_install_obj(object what){int direct_uninstall_obj(object what){int direct_install_obj_word_obj(object thingus, mixed word, object target){int indirect_install_obj_word_obj(object target, mixed word, object thingus){int direct_uninstall_obj_word_obj(object thingus, mixed word, object target){int indirect_uninstall_obj_word_obj(object target, mixed word, object thingus){varargs mixed CanInstall(object who, object where, object what){","/lib/lvs/position.c":"mixed eventFall(){int GetPosition(){mixed eventFly(){int SetPosition(int x){string GetFurnitureName(){varargs mixed eventLay(object target){varargs mixed eventKneel(object target){varargs mixed eventSit(object target){mixed eventSwim(){mixed eventFloat(){mixed eventLand(){mixed eventStand(){","/lib/interface.c":"static void create(){int Setup(){static string process_input(string str){int GetClient(){ return Client; }string GetKeyName(){ return 0; }varargs int eventPrint(string msg, mixed arg2, mixed arg3){int array GetScreen(){ return Screen; }static int rAscii(string str){static int rAnsi(string str){static int rArrow(string str){static int rDel(){static int rBackspace(){static int rCtrl(string str){static int rEnter(){varargs void eventReceive(string message, int noprompt, int noerase){int GetBlocked(string type){ return (Blocked[\"all\"] || Blocked[type]); }void receive_message(mixed msg_class, string msg){string rgb_downto_xterm256(string msg) {string rgb2xterm256(string rgb) {int eventFlushQueuedMessages(){varargs int eventPauseMessages(int x, int exceptions){static varargs int PassengerPrint(string msg, mixed arg2,float rgb_distance(int r1, int g1, int b1, int r2, int g2, int b2) {int rgb2match( int r1, int g1, int b1, int low, int high )int rgb2ansi( int r1, int g1, int b1 )int rgb2grey( int r1, int g1, int b1 )int SetAnnoyblock(int i){int GetAnnoyblock(){static void window_size(int width, int height){static void receive_snoop(string str){ receive_message(\"snoop\", \"%\"+str); }varargs int SetBlocked(string type, int flag){int SetClient(int x){string GetTerminal(){ return Terminal; }static void terminal_type(string str){int SetLogHarass(int x){int GetLogHarass(){ return LogHarass; }int array SetScreen(int width, int height){string SetTerminal(string terminal){","/lib/bot.c":"static void create(){string GetLong(string nom){void init(){varargs int eventDie(mixed agent){string GetHealthShort(){int GetNoBotCondition(){int SetNoBotCondition(int foo){","/lib/props/deterioration.c":"string array GetSave(){int eventReceiveDamage(mixed agent, int type, int amt, int i, mixed array l){int GetBroken(){int SetBroken(int x){int SetDamagePoints(int x){int GetDamagePoints(){int GetDeterioration(){string GetItemCondition(){","/lib/std/storage.c":"int GetRadiantLight(int ambient){void create(){static mixed array AddSave(mixed array vars){int SetSaveRecurse(int x){string array GetSave(){","/lib/command.c":"static void create(){string array GetSearchPath(){ return SearchPath; }int Setup(){varargs int eventRetryCommand(string lastcmd, int errtype, mixed args){int GetForced(){ return Forced; }string SetCommandFail(string str){string GetCurrentCommand(){int SetPlayerPaused(int i){int GetPlayerPaused(){int cmdDebugAll(string args){int eventForceQueuedCommand(string cmd){int eventExecuteQueuedCommands(){int eventQueueCommand(string line){int DoneTrying(){int LimbCertain(string str){static string process_input(string args){static int cmdAll(string args){string array AddSearchPath(mixed val){string array RemoveSearchPath(mixed val){int GetClient(){ return 0; }string GetCommandFail(){ return CommandFail; }int direct_force_liv_str(){ return 1; }int direct_force_liv_to_str(){ return 1; }","/lib/events/close.c":"int inventory_visible(){varargs mixed CanClose(object who, string id){mixed eventClose(object who){int inventory_accessible(){int GetClosed(){varargs mixed CanOpen(object who, object tool){varargs mixed eventOpen(object who, object tool){int SetOpen(int x){mixed direct_close_obj(object target){mixed direct_open_obj(object target){mixed direct_open_obj_with_obj(object target, object tool){int GetOpen(){int SetClosed(int x){","/lib/learn.c":"int direct_learn_str_from_liv(){ return 1;}int direct_learn_to_str_from_liv(){ return 1;}int eventLearn(object who, string what){int CanLearn(){","/lib/cylinder.c":"void create(){","/lib/pile.c":"string GetShort(){int eventMove(mixed dest){static void create(){int GetMass(){string array GetId(){void init(){void SetPile(string str, int amt){void SetCurrency(string str, int amt){string GetPileType(){ return PileType; }mixed direct_get_wrd_wrd_out_of_obj(string num, string curr){mixed direct_get_wrd_wrd_from_obj(string amt, string curr){mixed eventGetMoney(object who, int amount, string curr){int GetPileAmount(){ return PileAmount; }","/lib/events/shoot.c":"varargs mixed direct_shoot_obj_at_obj(mixed args...){varargs mixed direct_shoot_obj_with_obj(mixed args...){varargs mixed indirect_shoot_obj_with_obj(mixed args...){varargs mixed indirect_shoot_obj_at_obj(mixed args...){varargs mixed direct_shoot_obj_at_liv(mixed args...){int MustCarry(int i){int MustWield(int i){mixed CanShoot(object shooter, mixed target){varargs mixed direct_shoot_liv_with_obj(mixed args...){varargs mixed indirect_shoot_liv_with_obj(mixed args...){varargs mixed indirect_shoot_obj_at_liv(mixed args...){varargs mixed direct_shoot_obj_wrd(mixed args...){varargs mixed direct_shoot_obj_wrd_at_wrd(mixed args...){varargs mixed eventShoot(object who, mixed target, string dir, string whom){","/lib/combatmsg.c":"varargs void SendWeaponMessages(object target, int x, object weapon, string limb){static mixed GetMissData(object targ, int type, string limb){static void eventSendMissMessages(object target, int x, string limb){mixed GetCombatVerbs(string type, int damage){mixed GetCombatMove(string type, int skill){varargs void SendMeleeMessages(object target, int x, string targlimb, string limb){","/lib/events/get_from.c":"int inventory_visible(){int inventory_accessible(){mixed CanGetFrom(object who, object item){mixed indirect_put_obj_obj(object what, string word, object storage){mixed indirect_put_obs_word_obj(object array items, string wrd, object storage){mixed indirect_put_obs_obj(object array items, string wrd, object storage){mixed CanPutOnto(object who, object item){mixed eventGetFrom(object who, object array what){mixed CanPutInto(object who, object item){mixed eventPutInto(object who, object what){mixed eventPutOnto(object who, object what){mixed indirect_get_obj_from_obj(object item, object container){mixed indirect_get_obj_out_of_obj(object item, object container){mixed indirect_get_obj_obj(object item, object container){mixed indirect_get_obs_from_obj(object array items, object storage){mixed indirect_get_obs_out_of_obj(object array items, object storage){mixed indirect_get_obs_obj(object array items, object storage){mixed indirect_put_obj_word_obj(object what, string word, object storage){","/lib/pistol.c":"static void create(){void init(){","/lib/events/listen.c":"mapping GetListenMap(){varargs mixed SetListen(mixed array args...){mapping RemoveListen(string item){mixed direct_listen_obj(){mixed direct_listen_to_obj(){mixed direct_listen_to_str_word_obj(string str){varargs mixed eventListen(object who, string str){string array GetListens(){","/lib/props/damage.c":"int SetClass(int x){int GetClass(){string array GetSave(){int GetMaxClass(){int eventStrike(object ob){int GetDamageType(){int SetDamageType(int x ){","/lib/shop.c":"static void create(){void init(){int list(string str){int show(string str){int price(string str){int appraise(string str){","/lib/chat.c":"static void create(){int eventDestruct(){string array GetChannels(){ return keys(Channels); }static void net_dead(){int GetNoChanColors(){int SetNoChanColors(int x){int GetMutedType(string type){int GetGaggedType(string type){int SetGagged(string type, mixed x){int SetMuted(string type, mixed x){void eventReconnect(){string array AddChannel(mixed val){string array RemoveChannel(mixed val){string array RestrictChannel(mixed val){string array UnrestrictChannel(mixed val){string array GetRestrictedChannels(){ return (RestrictedChannels + ({})); }mapping returnChannels(){static string chat_command(string str){","/lib/burn.c":"static void create(){mixed eventLight(object who, object what){mixed direct_light_obj(){static void heart_beat(){mixed eventExtinguish(){int GetBurning(){int GetBurnRate(){static int SetBurnRate(int x){int GetBurntValue(){static int SetBurntValue(int x){int GetFuelRequired(){static int SetFuelRequired(int x){int GetHeat(){static int SetHeat(int x){int GetMinHeat(){static int SetMinHeat(int x){mixed CanBurn(object who){mixed direct_burn_obj_with_obj(){mixed indirect_burn_obj_with_obj(object target, object source){mixed indirect_burn_obs_with_obj(object array targets, object source){mixed direct_light_obj_with_obj(){mixed indirect_light_obj_with_obj(object target, object source){mixed indirect_light_obs_with_obj(object array targets, object source){mixed CanExtinguish(object who){mixed direct_extinguish_obj(){mixed eventBurnOut(){","/lib/quest.c":"void create(){int AddQuestPoints(mixed x){int GetQuestPoints(){ return QuestPoints; }int SetQuestPoints(int i){void AddPartyQuest(string title, string desc){void AddQuestSkillPoints(string skill, int amount){void AddQuestStatPoints(string stat, int amount){void AddQuestCurrency(string type, int amount){mixed array GetQuests(){mapping RemoveQuest(string str){","/lib/std/base_armor.c":"string array GetSave(){void eventDeteriorate(int type){string GetItemCondition(){int eventMove(mixed dest){mixed CanEquip(object who, string array limbs){mixed eventEquip(object who, string array limbs){varargs mixed eventUnequip(object who){static void create(){static int Destruct(){varargs string GetExternalDesc(object who){mixed eventShow(object who, string component){static mixed array AddSave(mixed array vars){mixed CanSteal(object who){string array GetRestrictLimbs(){int GetSize(){void init(){int SetSize(int x){int GetFingers(){int GetRetainOnDeath(){ return RetainOnDeath; }varargs mixed eventRepair(object who, int strength, int type){varargs string GetEquippedDescription(object who){string GetEquippedShort(){mapping GetProtectionMap(){int SetRetainOnDeath(int x ){ return (RetainOnDeath = x); }mixed CanRepair(object who){int SetProtection(int type, int amount){int SetAC(int i){string array SetRestrictLimbs(string array limbs){string array SetBaseLimbs(string array limbs){mixed GetWear(){mixed SetWear(mixed val){varargs int restrict(mixed arg, int i){int GetMaxProtection(int type){int SetFingers(int x){string array LimbGuess(object who){string array GetBaseLimbs(){","/lib/money.c":"int AddMoney(string type, int amount){varargs void SetMoney(mixed val, int amount){mapping GetMoneyMap(){ return copy(Money); }","/lib/std/wound.c":"void create(){void heart_beat(){mixed CanDrop(object ob) { return \"#Your hands slip on the gunshot wounds.\";}mixed CanGet(object ob) { return \"#Your hands slip on the gunshot wounds.\";}string GetAffectLong(object ob) {string WoundLong(){","/lib/shadow_hook.c":"nomask int RemoveShadow(object sombra){nomask mapping GetShadows(){nomask int AddShadow(object sombra){","/lib/flask.c":"static void create(){string GetExternalDesc(){varargs mixed eventDrink(object who, object target, string foo){varargs mixed CanDrink(object who, string what){mixed direct_drink_from_obj(){mixed direct_drink_obj(){int direct_fill_obj_with_obj(){ return 1;}mixed GetStrength(){ return FlaskStrength; }int GetMealType(){ return MealType; }int direct_fill_obj_from_obj(){ return 1;}int indirect_fill_obj_with_obj(){ return 1;}int indirect_fill_obj_from_obj(){ return 1;}int indirect_pour_obj_into_obj(){ return 1;}int indirect_pour_from_obj_into_obj(){ return 1;}int direct_pour_obj_out(){ return 1;}int GetFlaskUses(){ return FlaskUses; }int SetEverFill(int x){ return (EverFill = x); }int GetEverFill(){ return EverFill; }int SetMaxFlask(int x){ return (MaxFlask = x); }int GetMaxFlask(){ return MaxFlask; }string GetFlaskContents(){ return FlaskContents; }string SetFlaskContents(string str){int direct_pour_out_obj(){ return 1;}int direct_empty_obj(){ return 1;}mixed indirect_drink_from_obj(){mixed GetTapped(){ return Tapped; }int SetMealType(int x){ return (MealType = x); }int SetStrength(int x){ return (FlaskStrength = x); }mixed eventFill(object who, object from){varargs mixed eventEmpty(object who){mixed eventPour(object who, object from){int CanFillMe(){int CanFillOther(){int SetTapped(int x){int SetFlaskUses(int x){","/lib/events/sell.c":"mixed CanSell(object seller){mixed direct_sell_obj_to_liv(){mixed indirect_sell_liv_obj(){","/lib/round.c":"void create(){varargs mixed eventLoad(object who, object where){varargs mixed eventUnload(object where){int SetAmmoType(string str){ammotype=str; return 1; }int SetFirearmType(string str){firearmtype=str; return 1; }int SetCaliber(int x){ caliber=x; return 1; }int SetMillimeter(int x){ millimeter=x; return 1; }string GetAmmoType(){ return ammotype; }string GetFirearmType(){ return firearmtype; }int GetCaliber(){ return caliber; }int GetMillimeter(){ return millimeter; }string GetRifleType(){ return rifletype; }int SetRifleType(string str){rifletype=str; return 1; }","/lib/std/dummy.c":"varargs static void create(string array id, mixed long, string array adj){","/lib/events/give.c":"mixed indirect_give_liv_obj(object target){mixed direct_give_obj_to_liv(object what, object target){mixed direct_give_obj_liv(object what, object target){","/lib/guard.c":"void heart_beat(){void init(){int AllowPass(object who, object what){int AllowGet(object who, object what){varargs mixed SetGuard(mixed what, mixed action, int howlong){void CheckPending(){void CheckGuardeds(){","/lib/donate.c":"static void create(){string GetLong(string str){static void init(){string SetLocalCurrency(string currency){string GetOwner(){return Owner;}int eventDonate(string amt, string type){string GetLocalCurrency(){return LocalCurrency;}int GetAssets(){return TotalAssets;}int AddAssets(int amount){string SetOwner(string owner){return (Owner = owner);}","/lib/events/aim.c":"varargs mixed indirect_aim_obj_with_obj(mixed args...){varargs mixed indirect_aim_obj_at_obj(mixed args...){varargs mixed direct_aim_obj_at_liv(mixed args...){varargs mixed direct_aim_liv_with_obj(mixed args...){varargs mixed indirect_aim_liv_with_obj(mixed args...){varargs mixed indirect_aim_obj_at_liv(mixed args...){varargs mixed direct_aim_obj_wrd(mixed args...){int MustCarry(int i){int MustWield(int i){varargs mixed direct_aim_obj_wrd_at_wrd(mixed args...){varargs mixed eventAim(object who, mixed target, string dir, string whom){mixed CanAim(object aimer, mixed target){","/lib/interactive.c":"string GetShort(){int GetRadiantLight(int ambient){nomask int eventReceiveObject(object ob){static void create(){int eventDestruct(){string SetShort(string str){string GetName(){ return object::GetName(); }string GetKeyName(){ return object::GetKeyName(); }string array GetId(){ return UserId; }string SetKeyName(string str){varargs string array SetId(string array bogus){string SetCapName(string str){varargs string GetLong(){string SetLong(string str){varargs int GetInvis(object ob){ return object::GetInvis(ob); }int Setup(){static void heart_beat(){string query_cwd(){ return interface::query_cwd(); }int eventMove(mixed dest){static void net_dead(){void eventReconnect(){static string process_input(string str){string get_path(){mixed array GetCommands(){int cmdQuit(){void SetLastError(mapping m){mapping GetLastError(){mixed CanGet(){int GetBriefMode(){ return Brief; }int SetRescueBit(int i){mixed GetParanoia(string str){mixed CanDivorce(){mixed CanMarry(){mixed eventDivorce(){mixed eventMarry(object who, object to_whom){void cmdParseRefresh(){int GetAge(){int GetBirth(){ return BirthTime - (YEAR array  18); }void SetEmail(string str){string GetEmail(){int GetLoginTime(){ return LoginTime; }void SetNews(string type, int sz){ News[type] = sz; }int GetNews(string type){ return News[type]; }void SetPassword(string str){string GetPassword(){void SetRank(string str){ Rank = str; }string GetRank(){ return Rank; }void SetRealName(string str){string GetRealName(){ return RealName; }int SetBriefMode(int x){ return (Brief = x); }int SetWhereBlock(){ return (WhereBlock = !WhereBlock); }int GetWhereBlock(){ return WhereBlock; }void move_or_destruct(){string GetSpouse(){string GetHostSite(){string GetWebPage(){string SetWebPage(string page){varargs nomask static void validate_paranoia(int prev){mixed SetParanoia(string str, mixed val){static nomask void NotifyReceipt(object ob){","/lib/events/drink.c":"varargs mixed eventDrink(object who, string substance){varargs mixed CanDrink(object who, string substance){mixed direct_drink_str_from_obj(string str){mixed direct_drink_from_obj(){mixed direct_drink_obj(){","/lib/virtual/virt_land.c":"varargs static void create(int x, int y,int z){void SetCoordinates(int x, int y, int z){varargs mixed GetCoordinates(int level){mapping SetSurroundAreas(int x, int y, int z){void ResetSurroundExits(){void SetVirtualExits(int x, int y, int z){varargs void SetLongAndItems(int x, int y, int z){int SetMasterMap(mixed map_name){int SetVirtFile( string file ){string SetResetMessage(mixed str){ Reset_Message = str;}mapping GetDirectionMap(){string GetReverseDirection(string dir){varargs mixed GetMapType(int x, int y, int z){void ResetLocation(){string GetAreaType(){ return AreaType;}object GetMasterMap(){ return Map_Master;}varargs string array GetNonExits(string array extra){mapping GetSurroundAreas(){ return Surrounding_Areas; }void PreAddEnter(mixed dir, string file){","/lib/talk.c":"varargs mixed eventHearTalk(object who, object target, int cls, string verb,int direct_ask_liv_about_str(){ return 1; }int direct_request_str_from_liv(){ return 1; }int direct_say_to_liv(){ return 1; }int direct_say_to_liv_str(){ return 1; }int direct_whisper_to_liv(){ return 1; }int direct_whisper_in_wrd_to_liv(){ return 1; }int direct_whisper_to_liv_str(){ return 1; }int direct_whisper_in_wrd_to_liv_str(){ return 1; }int direct_whisper_to_liv_in_wrd_str(){ return 1; }string SetSpeakColor(string str){string GetSpeakColor(){ return SpeakColor; }string array GetTellHistory(){int eventTalkHist(string str, string type){string array GetTalkHistory(string type){string array GetTalkHistTypes(){varargs mixed CanSpeak(object target, string verb, string msg, string lang){mixed eventTalkRespond(object who, object targ, int cls, string msg, string lang){varargs mixed eventSpeak(object target, int cls, string msg, string lang){int direct_ask_liv_str(){ return 1; }int direct_ask_liv_to_str(){ return 1; }int direct_ask_liv_for_str(){ return 1; }int eventTellHist(string str){","/lib/shell.c":"void create(){int SetAmmoType(string str){ammotype=str; return 1; }int SetFirearmType(string str){firearmtype=str; return 1; }int SetCaliber(int x){ caliber=x; return 1; }int SetMillimeter(int x){ millimeter=x; return 1; }string GetAmmoType(){ return ammotype; }string GetFirearmType(){ return firearmtype; }int GetCaliber(){ return caliber; }int GetMillimeter(){ return millimeter; }","/lib/potion.c":"void create(){mixed eventDrink(object who){mapping SetSkills(mapping arg){mapping SetStats(mapping arg){mapping GetStats(){mapping GetSkills(){mapping SetPoints(mapping arg){mapping GetPoints(){int SetDuration(int i){int GetDuration(){","/lib/mayor.c":"static void create(){static void EvaluateCitizenshipRequest(){mixed CanRequestCitizenship(object who){mixed eventRequestCitizenship(object who){int GetTax(){static int SetTax(int x){static string SetLocalCurrency(string str){string GetLocalCurrency(){","/lib/events/wear.c":"mixed direct_remove_obj(){mixed direct_wear_obj(){mixed direct_wear_obj_on_str(object target, string str){",])
Functions ({"eventTellHist","GetDummyItems","eventEquip","GetTax","SetTrapType","direct_missile_liv","SetScreen","eventOpen","SetDisabled","GetPoisonUses","SetCommercial","CanTrain","SetListen","indirect_light_obs_with_obj","GetCedmode","SetTrapDescription","LoadAuto","regetID","GetClimate","direct_put_obj_obj","GetSaveFile","SetCure","GetBaseSkillLevel","ClassMember","SetVisibleGrid","move_or_destruct","GetPoison","SetMillimeter","direct_detect_wrd_in_obj","GetActionsEnabled","GetStatBonus","GetGoMessage","CanUnTrain","end_edit","SetRead","direct_turn_obj_on_obj_on","GetMaxLoaded","GetEnter","direct_stealth_wrd","SetDeviating","SetBaseCost","GetPersistentInventory","direct_resurrect_liv","SetTerrainType","SetClient","RemoveFollower","SetMass","direct_scratch_str_on_obj","CanPutOnto","direct_abandon_liv","direct_fish_with_obj","eventTallyVotes","indirect_roll_obs_on_obj","AddTrainingPoints","GetBlind","SetValue","restore_player","direct_crawl_str","id","direct_aim_obj_at_liv","eventPreview","direct_put_wrd_wrd_word_obj","eventEncounterBlock","SetAction","CanWear","SetCharbuffer","SetFirearmType","GetAnnoyblock","GetWimpy","CanRepair","GetSource","AddEncounter","SetBaseLimbs","GetPenalty","CanSpeak","direct_train_liv_to_str","indirect_shoot_obj_at_obj","direct_buffer_liv","direct_pray_for_str_for_obj","GetSurroundAreas","eventEmpty","direct_add_obj_to_obj","direct_ride_str","SetZPG","eventLand","eventLoadItem","GetMaxFishing","SetInfect","SetBonusName","GetDeathEvents","GetMagicResistance","SetAutoStand","direct_ask_liv_str","RemoveConsult","SetBonusDuration","eventDecay","SetHiddenDoor","CanMelee","GetReligion","GetBaseStatLevel","SetDayLong","GetCaliber","SetCanSwim","GetRifleType","direct_reload_word_obj","AddQuestCurrency","SetFuelName","isCorpse","GetMaxStaminaPoints","direct_enter_into_obj","GetRecurseDepth","GetCoords","GetLanguages","query_max_mp","eventOfferTeaching","SetEmptyShort","GetAmmo","parse_command_id_list","SetLocalFee","RazzleDazzle","GetHealthPoints","GetType","direct_dig_obj_with_obj","GetDestructOnDrop","direct_body_liv","SetRecurseDepth","GetStaminaCost","GetMissData","GetExitData","doRevolverUnload","eventMoveFollowers","GetTitles","GetResistance","SetHealthPoints","indirect_delete_exit_str","AddSacrificeType","SetMaxLiers","eventReceiveDamage","eventDecreaseFuel","SetMagnum","direct_unload_obj","direct_remove_obj","GetDayLight","GetBirth","CanLead","Payment","eventReleaseStand","GetTempbuffer","GetCarriedMass","AddCurrency","GetCurrencyMass","openDoor","direct_rock_str","show","direct_unlock_obj_with_str","eventFly","eventBuryWith","direct_copy_obj_str","GetCharge","GetMode","eventWithdraw","CanEquip","SetMuffed","cmd_followup_and_respond","CanSpellAttack","eventCheckEnvironment","indirect_marry_liv_to_liv","CanTurnOff","SetLockable","SetRules","indirect_delete_obj","ClearBuffers","CanWeapon","NewBody","GetExitMap","direct_smoke_obj","SetVisibleRiders","GetInvis","CalculateAmmoSize","SetCapName","GetOrigin","ParseHook","AddSearchPath","eventWander","SetBodyComposition","direct_resurrect_obj","eventMultiply","direct_pour_out_obj","GetParalyzed","query_board_time","GetPromptString","eventRegisterSide","direct_rockwhip_liv","SetFingers","GetExtraChannels","SetGoMessage","SetSize","eventDrive","GetAllowSacrifice","SetBefriended","eventLearn","GetAreaType","disconnect","RemoveBonuses","direct_aim_obj_at_obj","eventJump","GetClass","SetPK","Destruct","eventPrepareCast","SetSaveFile","query_max_hp","GetAmmoType","SetSpeakColor","indirect_bury_obj_with_obj","wild_card","rEsc","UpdateScreen","SetBane","GetRoomAffectLong","SetMaxRecurseDepth","CanShowInterior","eventPutOnto","GetMealMessages","SetNoDefaultExits","SetRestrictLimbs","eventPreAttack","GetFollowerMap","GetInventory","SetMaxHealthPoints","GetLocations","SetMealMessages","SetRescueBit","direct_command_liv_to_str","SetExits","GetProtectionMap","rBackspace","eventForceQueuedCommand","eventExtraAction","SetNonLocalFee","eventStop","GetHostSite","ParsePost","GetTale","compile_object","GetMagicCost","indirect_read_obj_at_obj","GetTalkHistTypes","cmdSmell","SetMaxMagicPoints","eventBuck","launch","SetRifleType","doRoll","eventShow","eventMeleeAttack","cmd_pwd","SetCedmode","GetHealthShort","GetHands","SetSkill","SetSky","SetClimate","eventCommand","direct_look_on_obj","QueryMap","GetArmorType","RemoveLocation","indirect_balance_obj_to_obj","SetCommandResponses","SetReligion","RemoveBlindness","GetExchangeFee","GetPreventSteal","direct_shoot_obj_with_obj","SetRetain","SetPreventDrop","GetLanguagePoints","eventKneel","SetWanderSpeed","direct_untrain_liv","SetPreventSteal","eventJoin","GetPrompt","pushd","AddStat","eventResults","direct_move_obj","eventDisplayStatus","direct_free_liv_from_obj","GetOwner","direct_dispel_liv","indirect_sell_liv_obj","eventFlushQueuedMessages","GetPerforated","RemoveStat","GetWeaponType","eventDarken","GetCustomDeviations","CanBuryWith","GetDoorStopped","GetPermitLoad","SetBait","GetKnocks","GetDying","eventShake","SetDayLight","AddBonusDuration","eventEscape","GetMinHeat","GetFrequency","GetFollowed","direct_look_at_str_on_obj","CanPull","direct_apply_obj_word_obj","SetDead","appraise","SetId","eventQuell","eventSell","GetPowerType","AddFingers","eventTurnOff","SetTeachingFee","set_cwd","remove_dots","AddHostile","direct_shock_liv","direct_lead_liv","SetCaliber","GetLifeSpan","parse_command_adjectiv_id_list","SetParalyzed","SetDig","GetAdjectives","SetDie","indirect_turn_obj_on_obj_on","direct_immolate_liv","CanEat","direct_bait_obj_with_obj","SetShort","CanLearn","SetWanderRecurse","GetListens","eventDrink","GetMorality","RemoveScratch","direct_whisper_to_liv_in_wrd_str","GetZPG","GetScreen","eventLay","eventSwim","GetCurrencies","do_shoot","setOrigin","direct_scratch_on_obj","SetVehicleInterior","eventRunOut","GetVirtualSky","GetAccountInfo","GetBlocked","direct_initfix","GetParty","GetRequestResponses","direct_heal_str_of_liv","SetFuelAmount","GetDefiniteShort","SetTouch","GetListen","SetHB","GetHelp","cmdSearch","GetMaxLoad","GetOpacity","RemoveNonTargets","SetClan","eventMoveLiving","BaseMap","eventRoll","SetInventory","GetHostiles","GetClimateExposed","GetExperiencePoints","direct_put_obj_word_obj","SetAmmoType","GetClient","GetFlyRoom","GetAutoHeal","direct_delete_exit_str","direct_swivel_str","GetEquippedLimbs","eventHelp","SetPreventPut","direct_use_obj","direct_party_wrd_liv","SetWear","user_name","AddTitle","SetMagicCost","GetNativeLanguage","direct_look_in_obj","SetVendorType","direct_read_str_word_obj","direct_shoot_liv_with_obj","SetLeader","RemoveEncounter","GetMaxCells","GetAction","GetDrainRate","eventCustomizeStat","GetLastSave","RemoveFishing","direct_get_wrd_wrd_from_obj","cmd_pushd","GetTrainedSkilles","SetHistorySize","direct_farsight_liv","eventDetect","ReadBookIndex","indirect_reload_str_obj","AddSkillBonus","SetArmorType","SetMuted","direct_ask_liv_about_str","CanUnequip","GetInfect","eventEndVoting","direct_judge_obj_to_obj","CanKneel","direct_bless_obj","GetClanSkill","RemovePress","direct_sit_down_word_obj","GetProtect","indirect_unlock_obj_with_str","indirect_show_liv_obj","SetNoBotCondition","direct_weigh_obj","GetStudents","teller_check","indirect_lock_obj_with_str","GetStats","eventDeploy","GetCellType","SetWander","direct_look_at_obj_word_obj","direct_steal_obj_from_liv","missed_shot","GetEffectiveVision","CanShake","GetCanonicalId","catch_tell","GetFlowLimit","direct_calm_liv","GetDebugging","eventTeachLanguage","SetSurroundAreas","eventMount","SetFrequency","clean_up","flicker","isBag","GetMagnum","end_post","CanPutInto","SetMag","ShowRounds","GetSitters","GetHistoryList","SetBroken","GetStat","SetPowerType","SetMountOwner","CanBurn","GetVirtualSea","GetAutoResets","GetTalkResponses","eventHearTalk","GetCombatBonus","SetMaxStaminaPoints","GetSlowDecay","GetBaseRadiance","indirect_pulsecheck_liv","SetClosed","RegisterLocation","eventFlood","GetCanLock","eventManipulate","CanDrink","direct_shoot_obj_wrd_at_wrd","SetFollowed","AddTerrainType","GetMuffed","direct_cast_str_on_obj","SetEnter","GetMapType","SetAC","direct_poison_obj_with_obj","GetEmoteResponses","SetAutoDamage","eventRemoveItem","direct_search_obj","RemoveExtraChannels","NotifyReceipt","eventForce","GetClanObject","GetMaxClass","direct_read_obj_at_obj","GetProperties","SetRank","InitComposition","SetLifeSpan","PutCoins","GetCurrentEnemy","GetPolyglot","GetItemsMap","GetSpellBook","GetLightSensitivity","direct_aim_obj_wrd","CanPick","GetShadowedName","AddQuestSkillPoints","eventNegotiateObstacles","AddRequestResponse","rEnter","PutCheck","SetWimpy","GetBodyMass","SetCurrentEnemy","SetMorality","direct_befriend_liv","GetSky","GetGravity","eventUnlock","GetRequiredMagic","direct_look_at_obj","eventRetire","GetTitleLength","CanOpen","SetItem_func","AddPressure","GetSinkRoom","GetEnemies","eventFall","direct_pull_obj","DisableActions","GetLanguageName","direct_get_obj_out_of_obj","indirect_buy_str_from_liv","direct_annihilate_at_liv","direct_veil_liv_against_wrd_wrd","eventRide","AllowGet","GetPlayerKill","SetMinHeat","eventRock","cmdShow","direct_drive","ResetLocation","direct_arrow_liv","GetMaxStatPoints","IsFollowing","SetDrainRate","GetWhereBlock","list","GetMasterMap","GetSkillLevel","SetAutoHeal","GetSpecialTarget","GetCouncilMember","GetDoor","GetFollowers","AddProperty","ResetSurroundExits","CanAbandon","eventUnload","direct_pull_str_from_obj","RemoveKnock","GetHeat","indirect_shoot_obj_with_obj","direct_attack_liv_only","GetUniqueId","SetExtraChannels","isPlayer","SetMaxCells","SetVirtualExits","GetCarriedWeight","CreateDoor","GetFurnitureName","eventLoadInventory","direct_blades_liv","direct_sacrifice_obj_to_str","AddLimb","cmd_alias","SetClanSkill","GetAnchored","eventDeteriorate","SetLightLevel","SetBlocked","eventDrop","GetWorn","direct_empty_obj","SetFirearmName","RemoveLimb","cmdAppraise","eventUnequip","GetRequiredStamina","GetMaxSkillLevel","GetLive","eventBring","SetMaxLoad","SetOpacity","GetDig","GetDie","SetNews","RemoveTalkResponse","SetChance","eventUninstall","direct_sit_word_obj","ChangeLevel","RemoveChannel","GetCreatorAge","SetItem_desc","GetGaggedType","eventCast","GetEmptyName","SetFlowLimit","indirect_apply_obj_word_obj","SetSide","SetDebugging","AddSmell","GetRetain","GetActionsMap","eventTrainSkill","SetInvis","SetFlyRoom","ReadBook","CanPoison","GetPress","rAscii","GetPacifist","SetCellType","GetSpellType","FoundTraps","rgb2ansi","GetCommandHist","SetSlowDecay","GetPreventLand","direct_knock_str_on_obj","GetHealRate","GetNoTaleMessage","indirect_aim_obj_with_obj","direct_scry_liv","GetModify","eventHistory","direct_can_give_liv_obj","GetElevator","window_size","CanFollow","eventDismount","eventPutInto","AddSave","CanPut","GetCurrencyMap","GetName","direct_demonclaw_liv","GetAge","SetPull","CanGetFrom","direct_verb_rule","eventRadiate","GetNonExits","save_player","SetClass","cmd_nmsh","GetLimbs","GetQuestId","indirect_pick_str_on_obj_with_obj","Page","eventUnQuell","SetAttack","direct_wield_obj_word_str","SetSpellBook","GetMaxClones","SetCruiseInMessage","eventMarry","eventSwivel","direct_modify_obj_str","direct_consult_obj","direct_regen_str_on_liv","CanApply","SetPile","eventList","cmd_remove","CanReceiveMagic","InitializeLocations","SetProtect","direct_steal_wrd_from_liv","direct_give_liv_wrd_wrd","GetMagicProtection","RemoveTitle","SpringTrap","check_include_text","SetDefaultExits","SetRarity","eventReceiveLay","SetHBOverride","GetSpellChance","SetPolyglot","getOrigin","GetPileType","GetDuration","indirect_resurrect_obj","eventBuy","rgb2xterm256","eventBuyItem","direct_wizunlock_obj","direct_ride_word_str","direct_read_obj","GetMaxFuel","eventDestroyEnemy","indirect_shoot_liv_with_obj","direct_ward_liv_against_wrd","SetBodyMass","AddStatBonus","direct_open_obj_with_obj","eventTurnOn","SetCorpse","GetStaminaPoints","AddQuestStatPoints","GetTown","GetEmptyLong","direct_enter_obj","SetHands","direct_burn_obj_with_obj","direct_reload_str_obj","inventory_accessible","GetProtection","LimbCertain","GetNightLong","SetSinkRoom","SetMasterMap","direct_shoot_obj_wrd","SetPreventGet","eventSendMissMessages","direct_show_liv_obj","direct_smoke_from_obj","GetCouncil","SetRace","CanJump","direct_look_obj","HealLimb","SetCanLock","GetDoorSide","SetArmed","SetRequestResponses","GetFuelRequired","GetMag","direct_extinguish_obj","GetLong","eventAbandon","GetLeader","direct_whisper_in_wrd_to_liv_str","cmd_work","RemoveMenuItem","GetMaxProtection","SetFuelRequired","SetOwner","eventReadFile","direct_delete_obj_from_here","GetTaleKeys","SetMountStyle","eventFloat","indirect_steal_obj_from_liv","direct_activate_obj_on_obj","GetMenuItems","GetPoisonGas","GetCount","CanStop","direct_close_obj","indirect_sell_obs_to_liv","AddConsultResponse","AddFollowBonus","SetDying","indirect_aim_liv_with_obj","GetKnock","SetGravity","EnableActions","SetAnchored","indirect_free_liv_from_obj","GetNoChanColors","SetEmptyName","AddVisionBonus","direct_unwield_obj","eventBalance","GetLimb","direct_untrain_liv_to_str","direct_pour_obj_out","SetNoChanColors","SetKeys","eventLockLock","direct_deactivate_str_on_obj","xterm2rgb","MinusAmmo","eventCompleteMove","direct_pulsecheck_liv","direct_animate_obj","SetSpellType","indirect_roll_obj_on_obj","GetCombatMove","direct_delete_obj_from_room","CanGive","GetCommercial","GetXverb","direct_strike_obj","AddExtraChannels","SubtractRound","GetConsult","collect_moduli","indirect_poison_obj_with_obj","direct_scratch_on_str_on_obj","direct_cloak_wrd","GetReadsMap","eventCatch","GetSides","SetBury","direct_attack_only_liv","direct_force_liv_to_str","SetPacifist","direct_ask_liv_for_str","GetMillimeter","eventTalkRespond","SetParty","indirect_bait_obj_with_obj","SetQuestPoints","CanJoin","GetDummyItem","direct_aim_obj_wrd_at_wrd","SetMaxSitters","eventGetFrom","GetBroken","CanMarry","eventTurn","SetDifficulty","SetMaxClones","SetElevator","GetListenMap","SetDamageType","SetResetMessage","GetDefaultLanguage","direct_pick_str_on_obj_with_obj","SetLivingLong","MustCarry","GetClosed","GetDeaths","GetSave","indirect_look_at_obj_word_obj","direct_climb_obj","cmdListen","SetCommandFail","SetCoordinates","GetExemptVirtual","GetCharbuffer","ResetBank","indirect_get_obj_out_of_obj","RemoveLanguage","SetPick","eventPickLock","net_dead","CanSell","SetCanSit","SetMoney","GetClasses","SetVerb","eventSave","SetNoObviousExits","direct_backlash_for_liv_against_wrd","get_closed","rgb_distance","GetMoneyMap","GetEquippedDescription","SetEmptyLong","RemoveRequestResponse","SetOpen","direct_fireball_at_liv","direct_look_inside_obj","direct_deactivate_obj","GetConsultResponses","LoadRevolver","indirect_show_obj_to_liv","cmdDebugAll","GetQuests","SetTalkResponses","GetCommandResponse","SetNightLong","EchoCommand","GetHiddenDoor","SetDuration","CanSit","GetPrimarySkills","CanSwim","eventTouch","GetTitle","AddQuest","eventCompareLimbs","eventCruiseMessages","indirect_put_obs_obj","GetReads","SetFloors","SetManipulate","GetSpell","GetEmptyShort","direct_whisper_in_wrd_to_liv","eventDestroyUndead","SetQuestId","indirect_get_obj_from_obj","AddFish","SetLightSensitivity","SetGround","SetLivingShort","CheckGuardeds","GetVisibleGrid","RemoveFish","SetCanStand","CanRoll","GetEnterMessage","GetTraps","GetEquipped","ReceiveCanonicalId","direct_roll_obj_here","direct_wear_obj","SetStats","CanDig","RemoveSmell","SetMenuItems","direct_gale_liv","CanAim","GetWebPage","GetTellHistory","SetPoisonGas","direct_activate_obj","abort_edit","eventShoot","SetEnterMessage","GetTerrainType","direct_uninstall_obj","SetSkills","SetDoorSide","SetRequiredMagic","GetTeloptIp","SetDamage","GetMissingLimbs","GetMaxMagicPoints","GetDrainable","AddStuff","rgb2xterm","GetAlcohol","direct_bury_str_with_obj","AddNonTargets","SetMissingLimbs","GetFirearmType","SetMaxFuel","GetLuck","indirect_put_obj_obj","GetChance","indirect_show_obj_liv","GetAmbientLight","GetRespirationType","eventNextDay","GetClanName","SetSpecialTarget","indirect_give_liv_obj","SendWeaponMessages","SetAmbientLight","GetCharmode","eventOpenAccount","AddFood","direct_ignore_liv","GetPlayerPaused","direct_challenge_liv","eventShowInterior","eventReceiveThrow","eventPrint","GetTargets","GetBefriended","direct_swim_into_str","AddCaffeine","CanGet","SetPlayerPaused","eventPostRelease","indirect_give_obs_to_liv","eventLock","SetDefaultRead","AddKey","Expertise","GetRetainOnDeath","eventDeposit","GetSpeakColor","begin_post","direct_give_wrd_wrd_to_liv","replace_nickname","CheckPower","AllowPass","GetDirection","SetAmmo","eventWelcome","GetPresses","direct_arrow_at_liv","SetMagicPoints","SetType","eventRepair","RemoveTerrainType","direct_knock_on_str_on_obj","SetMealAction","GetChamberInterior","SetWanderPath","indirect_reload_every_str","eventRestoreSight","reset_prompt","cmdBrowse","direct_get_obj_obj","direct_climb_word_obj","eventEnter","eventDescribeEnvironment","SetMaxCapture","GetLocalCurrency","direct_holylight_liv","eventLoad","SetNoCondition","HandleTeller","eventRevive","GetResistanceMap","eventBlind","SetDollarCost","SetNightLight","GetSpeed","RedrawScreen","GetEnterMap","SetNoTaleMessage","direct_shoot_obj_at_liv","query_cwd","SetLit","SetPoints","SetConsult","GetRarity","GetSkillModifier","RemoveStatBonus","SetEnters","eventWimpy","eventRefuel","CheckEncounter","AddDrink","direct_turn_obj_on","cmd_nickname","GetCanClose","direct_turn_off_obj","eventExecuteQueuedCommands","AddItem_func","direct_roll_obj_on_obj","direct_fly_into_str","CanBoobytrap","GetScratch","GetButtonId","direct_portal_to_liv","SetStorageRoom","SetComposition","direct_lock_obj_with_obj","GetFullExitData","direct_swivel_str_on_obj","is_living","CanShoot","RestrictChannel","direct_use_obj_to_str","GetRiders","CanManipulate","direct_createfix","RestoreLimb","eventSteal","direct_remedy_liv","indirect_get_obs_from_obj","SetBurntValue","CanRemoveItem","GetTrainingSkills","direct_annihilate_liv","GetMealType","direct_listen_to_str_word_obj","GetVoteStatus","SetDrainable","SetTapped","GetCommands","CanRock","validate_paranoia","eventEat","GetFish","SetPress","CanCastMagic","eventConvertObject","GetRange","GetLimbParent","SetClasses","GetDamagePoints","eventRetryCommand","SetStaminaPoints","direct_aura_liv","direct_cleanse_liv","SetTeloptIp","GetVerbs","GetSmell","SetDamagePoints","GetNonLocalFee","Push","eventFish","GetLanguage","direct_dismount_liv","eventReconnect","RemoveConsultResponse","GetScratches","valid_edit","AddShadow","direct_blades_at_liv","AddRead","eventAddCandidate","CanDrop","direct_fly_word_str","direct_cast_str_on_str_of_obj","CanRelease","SortEnemies","eventRestore","GetMobility","GetAllLanguages","SetTale","CanInstall","AddMass","GetNoBotCondition","GetMelee","RemoveRead","GetSpouse","GetItems","direct_convert_liv","direct_show_obj_to_liv","indirect_delete_obj_from_here","eventFire","GetMissingLimb","SetAllLanguages","SetClanName","MarriageRequest","eventDisarm","SetPickingQuality","GetTrainingModifier","SetBonuses","SetLocked","GetFuelAmount","SetCharmode","CanCast","SetRespiration","GetRequiredSkill","RemoveShadow","GetBaitStrength","GetAreaMap","connect","direct_turn_off_obj_on_obj","eventTeachPlayer","direct_crawl_into_str","SetWebPage","GetSearches","GetPreventDrop","GetFood","AddTeachingLanguages","SetBaitStrength","GetWanderSpeed","direct_mend_liv","heart_beat","checkCollapse","SetAttackable","direct_look_at_obj_on_obj","GetItemCondition","GetCombatAction","SetCruiseOutMessage","direct_shoot_obj_at_obj","indirect_delete_obj_from_room","GetPreventPut","RemoveQuest","cmd_unalias","indirect_dig_obj_with_obj","GetNoDecay","GetVendorType","SetCombatAction","GetCombatVerbs","direct_smell_str_word_obj","cmdDial","eventShadow","GetSmellMap","GetFollowBonus","indirect_burn_obj_with_obj","GetCustomXP","GetVisionBonus","PreAddEnter","GetTrainingPoints","returnChannels","cmdTouch","eventUnlockLock","CanCapture","CanPeer","GetTeachingFee","rDel","GetLoginTime","GetResetNumber","GetMaxFlask","GetCanClimbCarried","CanRequestCitizenship","direct_throw_obj_word_obj","direct_consult_str_on_obj","GetMinCells","GetStatLevel","GetPlayerob","SetCount","direct_rock_obj","CanSteal","SetKnock","direct_unlock_obj_with_obj","SetCanClose","terminal_type","GetCurrency","eventMagicRound","direct_show_obj_liv","GetNextLevel","SetExemptVirtual","GetFloors","eventEncounter","direct_drink_str_from_obj","GetSleeping","direct_give_liv_obs","indirect_toss_obj_at_obj","PickTale","SetButtonId","eventRequestDivorce","direct_give_liv_obj","GetGermName","GetGround","direct_disarm_obj","direct_copy_obj_to_obj","eventFill","CanGo","ReceiveChars","direct_turn_on_obj","direct_marry_liv_to_liv","SetConsultResponses","SetHelp","SetVirtFile","doAutoUnload","ResetCurrency","AddTalkResponse","GetChannels","AddAssets","GetPlainShort","SetMealType","eventDestruct","restrict","continue_mail","GetSkills","GetNoSpells","GetMountOwner","eventCommandNPC","GetDamage","rArrow","AddQuestPoints","StatReport","SetRefuelable","GetMessage","GetReligions","GetCommandNumber","direct_remedy_str_of_liv","GetShakes","GetTellingTale","GetEscapeChance","GetMaxCarry","eventDisconnect","GetCustomStats","SwitchLocations","GetDeities","eventCheckHealing","GetAutoDamage","GetCost","direct_jump_word_word_obj","SetMedium","SetEscapeChance","SetScratch","SetLanguage","GetSearchPath","GetReverseDirection","AddLanguagePoints","shb","AddBank","GetEncumbrance","eventInstall","SetLoaded","eventRequest","GetCure","GetLastEnvironment","direct_rock_wrd_obj","eventComplete","RemoveShake","GetLit","direct_backlash_for_liv","eventWriteFile","SetPersistent","GetRead","SetRequiredStamina","direct_drink_obj","AddAlcohol","LimbGuess","RecalculateHist","indirect_reload","direct_dig_str_with_obj","SetGagged","GetFight","direct_teleport_to_liv","GetMass","DoneTrying","GetChannel","direct_fill_obj_with_obj","indirect_pour_from_obj_into_obj","AddStaminaPoints","direct_palm_liv","GetInCombat","QueryBane","eventMeleeRound","GetClimbs","CanConsult","direct_reload","eventCure","direct_whisper_to_liv_str","GetObviousExits","direct_dest_obj","ModCharge","direct_evade_liv","GetFlaskContents","GetConjure","GetSkillClass","cmdEnter","eventRead","SetObviousExits","SetTitle","ResetCurrentEnemy","price","SetReads","SetSpell","direct_frigidus_liv","eventMoralAct","GetSpellLevel","direct_capture_liv_word_obj","direct_fill_obj_from_obj","GetHeartRate","direct_listen_obj","direct_initfix_obj","CanTurn","GetNoModify","SetFishing","direct_cast_obj","AddSearch","GetErrorMessage","GetCaptives","CanBreathe","eventParse","SetUndeadType","GetBriefMode","eventSmoke","direct_pour_from_obj_into_obj","GetQuest","SetStat","eventPage","IsCouncilMember","eventFree","indirect_burn_obs_with_obj","SetErrorMessage","direct_jump_word_obj","direct_say_to_liv_str","SetDeathEvents","cGetSave","rgb_downto_xterm256","eventCapture","eventRequestCitizenship","SetCanTrain","GetLightLevel","SetCustomXP","direct_corrupt_liv","ChangeClass","AddFollower","SetRetainOnDeath","GetPoints","direct_light_obj","GetEnters","eventEdit","RemoveSearch","set_board_id","SetPoisonUses","SetMaxFlask","SetAreaMap","GetKeepalive","GetDisableChance","AddBait","GetEverFill","GetGhost","rAnsi","GetSynonyms","direct_force_liv_str","eventPut","direct_drain_liv","direct_delete_obj_from_obj","SetUnique","direct_touch_str_word_obj","GetFlaskUses","direct_createfix_obj","SetMinCells","GetCandidates","GetMaxSkillPoints","RemoveProperty","SetStaminaCost","indirect_give_obs_liv","CanUse","GetPassword","RemoveHostile","SetCurrency","direct_compare_obj_to_obj","direct_reload_obj","SetLocalCurrency","GetSkillsMap","SetSleeping","eventBuryItem","direct_install_obj_word_obj","SetNoDecay","direct_gaze","SetGermName","SetPoisonStrength","SetCarriedMass","direct_fly","eventSearch","ContinueTraining","SetReligions","GetTapped","direct_search_str_word_obj","GetManipulates","SetSkillModifier","eventEnemyDied","AddPoisonGas","rgb2match","GetConsults","eventInitiate","GetMaxItems","DestructEmptyVirtual","SetAnnoyblock","indirect_throw_obj_into_obj","SetNoSpells","parse_command_plural_id_list","direct_pour_obj_into_obj","indirect_add_obj","direct_acidspray_liv","GetRealName","SetTrainedSkills","SetUndead","CanSacrifice","AddCommandResponses","eventExtinguish","indirect_put_obj_word_obj","isDummy","SetSaveRecurse","GetMagicChance","GetHeartModifier","indirect_add_obj_to_here","direct_rejuvinate_liv","eventRestoreEquip","indirect_turn_off_obj_on_obj","AddMagicPoints","SetMaxCarry","eventGetMoney","GetBankName","SetDoor","cmd_read","SetMaxFishing","indirect_drink_from_obj","GetRemoteTargets","GetSize","SetCanBefriend","GetUserPath","SetHeat","direct_swim_str","eventAsk","eventStart","indirect_give_obj_liv","UnrestrictChannel","GetTrapDescription","GetPosition","GetFirearmName","direct_swivel_obj","MustWield","direct_learn_str_from_liv","CheckCharmode","AddSkill","GetHBOverride","eventBefriend","direct_lie_word_obj","GetBodyType","SetWorn","AddMagicProtection","GetBank","GetLocked","SetCanCommand","SetClimb","GetBane","indirect_add_obj_to_room","GetRestrictedChannels","SetSpeed","cmdAll","GetShake","eventConsult","indirect_judge_obj_to_obj","SetAmmoFile","direct_bite_liv","direct_wear_obj_on_str","LoadBook","GetEnemyNames","SetResistance","AddPoison","indirect_get_obs_out_of_obj","direct_dig_with_obj","direct_bump_liv","GetPreventGet","indirect_sell_obj_to_liv","direct_wizlock_obj","GetDefenseChance","direct_swivel_wrd_obj","cmd_edit","GetAlias","SetMessage","GetLimbChildren","process_input","GetEmail","cmdQuit","CanLock","SetTempbuffer","user_names","CanSmoke","GetLastCommand","cmdPrice","SetDeities","indirect_zap_liv","SetBriefMode","SetTrainingModifier","direct_turn_obj_on_obj_off","eventPauseMessages","eventLight","GetDrink","indirect_unlock_obj_with_obj","AddRider","PlusAmmo","cmdParseRefresh","CanDivorce","GetEmoteResponse","direct_touch_obj","RemoveDig","SetNoModify","indirect_lock_obj_with_obj","eventCastVote","SetDefaultLanguage","SetCanFly","GetMountStyle","continue_post","eventMail","GetSkillBonus","SetKeepalive","GetFuelType","SetFlaskUses","AddLead","RecurseLocations","receive_message","displayLong","SetRange","eventStand","CanLoad","GetHealing","GetEncounter","eventLoadObject","SetExchangeFee","CanFly","direct_pull_str_on_obj","GetTrapLevel","SetSmell","GetStrength","AddStatPoints","eventPoison","GetRechargeable","SetEverFill","eventCompleteHeal","SetSynonyms","direct_load_obj","SetConjure","CeditCollate","GetBait","AddTouch","SetRechargeable","GetStatus","eventBreak","direct_follow_liv","GetDestroyOnSell","CanScratch","AddEnemy","SetDenominator","SetPassword","eventFollow","SetMelee","SetDoorStopped","CheckActions","SetItems","GetDead","GetLevel","AddBodyMass","SetDestructOnDrop","CanDigWith","GetShadowObject","SetTown","GetOpenFee","AddLocation","WoundLong","GetMaxSitters","eventStartVoting","eventBait","eventPress","GetDifficulty","direct_offer_obj","GetDamageType","GetWield","GetSaveName","SetShadowObject","GetMoralityDescription","CanAttack","GetCanBite","direct_turn_liv","GetLivingLong","GetPileAmount","cmd_cd","direct_install_obj","GetLimbClass","GetLastPuff","Setup","AddRound","SetMaxItems","eventSit","GetMessages","request_vis","SetRealName","CalculateCarriedMass","GetLockStrength","direct_mount_liv","GetBodyComposition","indirect_put_obs_word_obj","GetPressure","GetMedium","doMagUnload","performDivorce","eventTalkHist","GetShade","SetLong","eventTeach","eventTrainLiving","direct_deactivate_obj_on_obj","continue_followup","CanBefriend","SetBankName","SetLockStrength","GetMaxAmmo","eventSpreadPoison","GetLoaded","SetUserPath","direct_buy_str_from_liv","GetClan","eventCruise","ResetLevel","query_board_id","direct_knock_obj","GetDoors","SetPosition","GetDeterioration","create","GetOwnerOb","GetMount","AddItem","eventBless","direct_train_liv","GetParanoia","eventDig","direct_connect_str","eventDie","GetGagged","GetMutedType","eventAim","GetGodMode","RemoveItem","direct_request_str_from_liv","SetBodyType","direct_eat_obj","GetWear","SetRespirationType","GetProperty","direct_load_obj_word_obj","SetLimb","GetMaxRecurseDepth","eventContinue","cmdPage","SetAllowSacrifice","GetMaxHealthPoints","GetManipulate","SetPerforated","AddCommandResponse","eventCheckProtection","GetSacrificeType","GetNeighborCoords","CanLight","SetWeaponType","eventBoobytrap","SetPermitLoad","eventCharge","GetMissingLimbParent","GetBurnRate","GetNeighbors","init","cmdParse","erase_prompt","GetWimpyCommand","eventWear","eventWeaponAttack","SetGuard","GetQuestPoints","eventUnshadow","indirect_delete_obj_from_obj","AddChannel","direct_light_obj_with_obj","SetWimpyCommand","GetLogHarass","direct_command_str_to_str","cmd_eventDestruct","eventDivorce","SetSearch","GetNoReplace","direct_press_obj","CanStand","direct_scratch_obj","indirect_compare_obj_to_obj","CancelCharmode","SetEncounter","AddEnter","direct_add_obj_to_here","direct_listen_to_obj","restore_inventory","RemoveTeachingLanguages","eventTrainSpell","GetCommandFail","Spent","SetAdjectives","GetWielded","GetCoordinates","GetCommunicable","SetTrapLevel","SetChamberInterior","GetCombatChance","eventSink","indirect_give_obj_to_liv","eventGet","eventReleaseObject","SetFlaskContents","SetAggressive","indirect_reload_str_word","GetPK","indirect_boobytrap_obj_with_obj","indirect_throw_obj_at_obj","GetVoteRoom","SetCurrencies","SetCommunicable","SetFuelType","indirect_reload_obj","CompileNeighbors","eventUnTrainLiving","indirect_uninstall_obj_word_obj","indirect_capture_liv_word_obj","displayShort","GetShadowed","eventDeviateStat","GetUnique","GetLead","direct_aim_obj_with_obj","GetMissingLimbParents","direct_modify_word_str","RemovePull","SetGender","eventKnock","direct_backstab_liv","SetStrength","direct_give_obj_liv","direct_turn_obj","eventLoadChapters","eventScratch","direct_add_obj_to_room","GetTorso","CanUnlock","SetNoEcho","CanPress","AddRecurseDepth","GetValue","direct_drink_from_obj","RemoveSearchPath","CanFillOther","isGerm","AddHealthPoints","CeditSave","GetTalkResponse","GetWizVision","direct_sell_obj_to_liv","RemoveSkill","dGetSave","eventDigWith","PassengerPrint","direct_boobytrap_obj_with_obj","SendMeleeMessages","SetFight","popd","GetShadowedObject","GetEquippedShort","direct_uninstall_obj_word_obj","InitRevolver","direct_say_to_liv","SetDisableChance","GetLivingShort","GetRank","eventPour","CanTeach","EvaluateCitizenshipRequest","GetCurrentCommand","CanDest","direct_drain_at_liv","GetUndead","GetWanderPath","GetFurniture","SetHealing","direct_move_str_on_obj","indirect_fill_obj_with_obj","eventRemoveBlessing","GetLastError","eventExecuteAttack","SetCanKneel","CanUnload","indirect_install_obj_word_obj","GenerateObviousExits","SetMessages","GetVehicleInterior","GetLiers","GetMaxCapture","eventAnnounceCanonicalId","SetPressure","GetTerminal","GetKeyName","GetEmptyItem","CheckPending","GetNightLight","direct_teach_liv_to_str","SetTitleLength","direct_shake_obj","GetPickingQuality","RemoveRider","query_sp","direct_target_liv","GetTeachingLanguages","GetVisibility","indirect_turn_obj_on_obj_off","indirect_fill_obj_from_obj","AddListen","RemoveMagicProtection","SetKey","eventReceiveObject","direct_unload_obj_word_obj","CanReceive","ContinueTeaching","SetParanoia","do_nickname","SetOpenFee","GetItem","direct_knock_on_obj","direct_missile_at_liv","TellTale","SetProperty","RemoveEmoteResponse","SetPoison","GetId","SetInventoryCheck","AddExit","SetCanBite","SetRemoteTargets","direct_turn_on_obj_on_obj","SetLogHarass","CreateVirtualObject","direct_target_liv_only","SetNoReplace","RemoveExit","RemoveListen","direct_learn_to_str_from_liv","GetRules","GetDirectionMap","SetAutoResets","GetBonusDuration","GetBurntValue","SetBurnRate","eventThrow","direct_aim_liv_with_obj","RemoveTouch","RemoveTrainingSkills","ResolveObjectName","GetTalesDir","direct_curse_obj","indirect_get_obs_obj","direct_fireball_liv","RemoveEnemy","eventClose","SetMaxAmmo","SetNativeLanguage","AddCarriedMass","GetTalkHistory","GetMagicPoints","GetNews","GetRequestResponse","get_path","SetSource","SetClanObject","SetProperties","AddSurcharge","GetHB","GetNoClean","GetSaveString","SetOwnerOb","GetSide","eventSuffer","SetTax","direct_add_obj","CanKnock","AddPartyQuest","direct_bury_obj_with_obj","SetLongAndItems","eventDrain","CanSwivel","direct_send_str_to_str","eventListen","direct_frigidus_at_liv","GetStatsMap","eventCollapse","SetGodMode","CanFree","restart_heart","RestoreObject","GetNoCondition","rgb2grey","direct_shield_liv","isFreshCorpse","GetCannotInfect","eventConvert","eventRemoveCandidate","AddRequestResponses","do_alias","indirect_pour_obj_into_obj","indirect_aim_obj_at_liv","SetCanClimbCarried","SetWizVision","cache_commands","GetInternalDesc","GetPull","SetCannotInfect","direct_command_liv","SetPreventLand","AddSkillPoints","CanTurnOn","SetPlayerKill","GetExits","SetInternalDesc","GetStorageRoom","GetVisibleRiders","GetTouches","direct_dismount_from_liv","direct_climb_out_of_obj","eventBurnOut","indirect_get_obj_obj","indirect_add_obj_to_obj","query_mp","SetTitles","GetJumps","direct_get_wrd_wrd_out_of_obj","SetWhereBlock","AddExperiencePoints","SetPistolType","GetMatching","cmd_post","eventEvade","receive_snoop","GetAssets","more","eventPull","SetLastError","GetWieldingLimbs","GetAttackable","reset","SetShake","direct_soulseek_liv","GetSkill","SetCharge","eventInfect","GetBaseFile","SetEmptyItem","AddMuffed","eventExchange","eventReceiveSit","direct_zap_liv","GetPagerPrompt","SetEmail","SetDestroyOnSell","rCtrl","SetFish","inventory_visible","direct_roll_obj","GetPulls","SetEmoteResponses","SetSpellChance","GetTrapType","status","direct_give_obj_to_liv","ContinueHeart","eventMove","GetStatClass","GetRestrictLimbs","SetOrigin","direct_reload_str_word","GetDisabled","SetTerminal","RemoveTrainingPoints","CanReceiveHealing","direct_drop_obj","eventKillEnemy","RemoveMuffed","direct_get_obj_from_obj","direct_turn_obj_off","eventUnjoin","GetRace","indirect_reload_word_obj","indirect_light_obj_with_obj","direct_drive_word_str","SetActionsMap","direct_delete_obj","GetForced","GetExtraLong","eventReceive","eventClimb","RemoveEnter","indirect_dest_obj","cmd_popd","RemoveSkillBonus","CanThrow","GetSmells","GetMarriages","direct_cast_str_against_str","GetDayLong","direct_refresh_liv","GetExternalDesc","direct_open_obj","eventTrain","RemoveCommandResponse","GetRespiration","GetWeight","GetBaseCost","AddHP","CanClose","process_request","CanExtinguish","SetExternalDesc","eventReceiveAttack","direct_rock_str_on_obj","CheckRooms","direct_press_str_on_obj","query_hp","GetEnterData","GetExit","direct_shake_str_on_obj","DestLimb","CanBank","GetShort","SetFood","performMarriage","direct_heal_liv","GetDeviating","GetSearch","GetAffectLong","write_prompt","SetKeyName","GetCommandResponses","SetLevel","SetTalesDir","GetNonCurrencyMass","GetBurning","GetRefuelable","eventLearnSpell","GetKeys","indirect_aim_obj_at_obj","GetNonTargets","direct_pray_for_str_against_str_for_liv","eventConnect","AddHeartModifier","SetMaxCommandHistSize","chat_command","UnloadAll","GetTouch","eventWeaponRound","SetSacrificeType","SetWield","eventPutOn","direct_activate_str_on_obj","GetCaffeine","GetStrikeChance","CanMail","AddMoney","direct_teach_str_to_liv","eventSacrifice","GetBaseLimbs","SetStrikeChance","eventReceiveEmote","GetBury","direct_attack_liv","direct_get_obj","CanFillMe","eventSmell","eventSpeak","direct_ask_liv_to_str","AddMenuItem","eventGo","direct_lie_down_word_obj","GetNetWorth","GetGender","direct_target_only_liv","GetLanguageLevel","SetShade","GetPersistent","GetCapName","GetBonusName","eventHealDamage","GetLocalFee","AddTrainingSkills","CanEvade","CanCarry","SetProtection","direct_whisper_to_liv","GetAutoStand","indirect_shoot_obj_at_liv","GetNoEcho","GetMaxCommandHistSize","GetPoisonStrength","eventBite","direct_reload_every_str","SetPrompt","GetFingers","GetHistory","eventLoadIndex","GetMaxLiers","query_prev_wd","SetMount","direct_pick_str_on_obj","CanBuy","eventBurn","direct_smell_obj","direct_fly_str","GetWanderRecurse","SetMatching","GetPick","eventStrike","SetNoClean","GetConsultResponse","GetRooms","GetMuted","direct_balance_obj_to_obj","direct_roll_obj_on_str","GetVerb","CanBait","indirect_unload_obj_word_obj","direct_lock_obj_with_str","GetLockable","GetRadiantLight","GetOpen","eventDonate","indirect_load_obj_word_obj","AddJump","GetShadows","direct_wield_obj","CanUninstall","SetBaseFile","RemoveManipulate","AddEmoteResponse","GetUndeadType","eventPick","SetRadiantLight","eventUse","query_max_sp","indirect_turn_on_obj_on_obj","GetLivingMaxCarry","SaveObject","GetCreatorBirth","GetRandomLimb","CanClimb","GetDoorsMap","GetVirtual","GeteventPrints","eventQueueCommand",})
LCFunctions (["getrooms":({"GetRooms",}),"getmuted":({"GetMuted",}),"direct_missile_liv":({"direct_missile_liv",}),"getchannel":({"GetChannel",}),"eventputinto":({"eventPutInto",}),"addsave":({"AddSave",}),"getteachingfee":({"GetTeachingFee",}),"setcanlock":({"SetCanLock",}),"setcommunicable":({"SetCommunicable",}),"setskills":({"SetSkills",}),"getname":({"GetName",}),"removeitem":({"RemoveItem",}),"canconsult":({"CanConsult",}),"setpull":({"SetPull",}),"gettellingtale":({"GetTellingTale",}),"setdamage":({"SetDamage",}),"gethiddendoor":({"GetHiddenDoor",}),"getbonusname":({"GetBonusName",}),"getconjure":({"GetConjure",}),"indirect_light_obs_with_obj":({"indirect_light_obs_with_obj",}),"eventmeleeattack":({"eventMeleeAttack",}),"direct_put_obj_obj":({"direct_put_obj_obj",}),"canclimb":({"CanClimb",}),"addlanguagepoints":({"AddLanguagePoints",}),"setitem_func":({"SetItem_func",}),"move_or_destruct":({"move_or_destruct",}),"direct_detect_wrd_in_obj":({"direct_detect_wrd_in_obj",}),"setresetmessage":({"SetResetMessage",}),"eventbait":({"eventBait",}),"setpile":({"SetPile",}),"iscouncilmember":({"IsCouncilMember",}),"end_edit":({"end_edit",}),"direct_turn_obj_on_obj_on":({"direct_turn_obj_on_obj_on",}),"eventevade":({"eventEvade",}),"getplayerob":({"GetPlayerob",}),"eventloadobject":({"eventLoadObject",}),"setfishing":({"SetFishing",}),"direct_stealth_wrd":({"direct_stealth_wrd",}),"getchance":({"GetChance",}),"direct_resurrect_liv":({"direct_resurrect_liv",}),"setcelltype":({"SetCellType",}),"eventboobytrap":({"eventBoobytrap",}),"checkrooms":({"CheckRooms",}),"direct_scratch_str_on_obj":({"direct_scratch_str_on_obj",}),"cantrain":({"CanTrain",}),"canbreathe":({"CanBreathe",}),"getcurrency":({"GetCurrency",}),"direct_abandon_liv":({"direct_abandon_liv",}),"setresistance":({"SetResistance",}),"gethealrate":({"GetHealRate",}),"direct_fish_with_obj":({"direct_fish_with_obj",}),"indirect_roll_obs_on_obj":({"indirect_roll_obs_on_obj",}),"getsleeping":({"GetSleeping",}),"telltale":({"TellTale",}),"eventbuyitem":({"eventBuyItem",}),"restore_player":({"restore_player",}),"direct_crawl_str":({"direct_crawl_str",}),"id":({"id",}),"direct_aim_obj_at_liv":({"direct_aim_obj_at_liv",}),"direct_put_wrd_wrd_word_obj":({"direct_put_wrd_wrd_word_obj",}),"clearbuffers":({"ClearBuffers",}),"getplainshort":({"GetPlainShort",}),"settempbuffer":({"SetTempbuffer",}),"eventlearnspell":({"eventLearnSpell",}),"addrequestresponse":({"AddRequestResponse",}),"getmountowner":({"GetMountOwner",}),"getfollowers":({"GetFollowers",}),"notifyreceipt":({"NotifyReceipt",}),"eventinstall":({"eventInstall",}),"getflaskcontents":({"GetFlaskContents",}),"eventrequest":({"eventRequest",}),"gettown":({"GetTown",}),"getenter":({"GetEnter",}),"direct_train_liv_to_str":({"direct_train_liv_to_str",}),"direct_buffer_liv":({"direct_buffer_liv",}),"indirect_shoot_obj_at_obj":({"indirect_shoot_obj_at_obj",}),"getresetnumber":({"GetResetNumber",}),"direct_pray_for_str_for_obj":({"direct_pray_for_str_for_obj",}),"getchannels":({"GetChannels",}),"setpickingquality":({"SetPickingQuality",}),"direct_add_obj_to_obj":({"direct_add_obj_to_obj",}),"direct_ride_str":({"direct_ride_str",}),"setdestroyonsell":({"SetDestroyOnSell",}),"setrace":({"SetRace",}),"canjump":({"CanJump",}),"removepull":({"RemovePull",}),"mustwield":({"MustWield",}),"setvalue":({"SetValue",}),"getblind":({"GetBlind",}),"direct_ask_liv_str":({"direct_ask_liv_str",}),"addteachinglanguages":({"AddTeachingLanguages",}),"getwimpy":({"GetWimpy",}),"eventclimb":({"eventClimb",}),"cansit":({"CanSit",}),"cmdpage":({"cmdPage",}),"direct_reload_word_obj":({"direct_reload_word_obj",}),"getlastenvironment":({"GetLastEnvironment",}),"getdamagepoints":({"GetDamagePoints",}),"getlong":({"GetLong",}),"getpiletype":({"GetPileType",}),"removeblindness":({"RemoveBlindness",}),"direct_enter_into_obj":({"direct_enter_into_obj",}),"canspeak":({"CanSpeak",}),"setitem_desc":({"SetItem_desc",}),"eventcomparelimbs":({"eventCompareLimbs",}),"query_max_mp":({"query_max_mp",}),"setnobotcondition":({"SetNoBotCondition",}),"setac":({"SetAC",}),"setinventorycheck":({"SetInventoryCheck",}),"setlanguage":({"SetLanguage",}),"parse_command_id_list":({"parse_command_id_list",}),"setbodymass":({"SetBodyMass",}),"setdamagepoints":({"SetDamagePoints",}),"setdebugging":({"SetDebugging",}),"getentermessage":({"GetEnterMessage",}),"direct_dig_obj_with_obj":({"direct_dig_obj_with_obj",}),"eventtrain":({"eventTrain",}),"getnodecay":({"GetNoDecay",}),"direct_body_liv":({"direct_body_liv",}),"getcustomdeviations":({"GetCustomDeviations",}),"eventsit":({"eventSit",}),"setnoreplace":({"SetNoReplace",}),"getcanclose":({"GetCanClose",}),"eventwear":({"eventWear",}),"isfollowing":({"IsFollowing",}),"canstop":({"CanStop",}),"setentermessage":({"SetEnterMessage",}),"indirect_delete_exit_str":({"indirect_delete_exit_str",}),"setpoints":({"SetPoints",}),"eventuntrainliving":({"eventUnTrainLiving",}),"getrarity":({"GetRarity",}),"canmelee":({"CanMelee",}),"setenters":({"SetEnters",}),"setsinkroom":({"SetSinkRoom",}),"setrequiredmagic":({"SetRequiredMagic",}),"getfurniturename":({"GetFurnitureName",}),"direct_unload_obj":({"direct_unload_obj",}),"direct_remove_obj":({"direct_remove_obj",}),"eventpoison":({"eventPoison",}),"candig":({"CanDig",}),"getskillclass":({"GetSkillClass",}),"getlimb":({"GetLimb",}),"setstaminacost":({"SetStaminaCost",}),"canaim":({"CanAim",}),"addquestpoints":({"AddQuestPoints",}),"getcanonicalid":({"GetCanonicalId",}),"setkeys":({"SetKeys",}),"eventcapture":({"eventCapture",}),"show":({"show",}),"direct_rock_str":({"direct_rock_str",}),"direct_unlock_obj_with_str":({"direct_unlock_obj_with_str",}),"direct_copy_obj_str":({"direct_copy_obj_str",}),"setlocalcurrency":({"SetLocalCurrency",}),"setwanderpath":({"SetWanderPath",}),"getdoorside":({"GetDoorSide",}),"eventsink":({"eventSink",}),"eventfollow":({"eventFollow",}),"cmd_followup_and_respond":({"cmd_followup_and_respond",}),"cangive":({"CanGive",}),"getspelllevel":({"GetSpellLevel",}),"getmaxstatpoints":({"GetMaxStatPoints",}),"indirect_marry_liv_to_liv":({"indirect_marry_liv_to_liv",}),"eventdig":({"eventDig",}),"eventdie":({"eventDie",}),"getdifficulty":({"GetDifficulty",}),"setcarriedmass":({"SetCarriedMass",}),"eventaim":({"eventAim",}),"indirect_delete_obj":({"indirect_delete_obj",}),"getriders":({"GetRiders",}),"setskillmodifier":({"SetSkillModifier",}),"direct_smoke_obj":({"direct_smoke_obj",}),"gettalekeys":({"GetTaleKeys",}),"getrespiration":({"GetRespiration",}),"setbury":({"SetBury",}),"getbirth":({"GetBirth",}),"setbonusname":({"SetBonusName",}),"setdollarcost":({"SetDollarCost",}),"settapped":({"SetTapped",}),"removechannel":({"RemoveChannel",}),"getcombataction":({"GetCombatAction",}),"eventsmell":({"eventSmell",}),"eventspeak":({"eventSpeak",}),"canjoin":({"CanJoin",}),"getlivingshort":({"GetLivingShort",}),"getlightlevel":({"GetLightLevel",}),"addrequestresponses":({"AddRequestResponses",}),"setmaxmagicpoints":({"SetMaxMagicPoints",}),"direct_resurrect_obj":({"direct_resurrect_obj",}),"direct_pour_out_obj":({"direct_pour_out_obj",}),"addquestskillpoints":({"AddQuestSkillPoints",}),"getcaptives":({"GetCaptives",}),"query_board_time":({"query_board_time",}),"eventgetfrom":({"eventGetFrom",}),"getclanskill":({"GetClanSkill",}),"getrifletype":({"GetRifleType",}),"getheartmodifier":({"GetHeartModifier",}),"canequip":({"CanEquip",}),"setcombataction":({"SetCombatAction",}),"direct_rockwhip_liv":({"direct_rockwhip_liv",}),"getwebpage":({"GetWebPage",}),"setrules":({"SetRules",}),"setmessage":({"SetMessage",}),"getsave":({"GetSave",}),"isgerm":({"isGerm",}),"disconnect":({"disconnect",}),"direct_aim_obj_at_obj":({"direct_aim_obj_at_obj",}),"getlivingmaxcarry":({"GetLivingMaxCarry",}),"addfollower":({"AddFollower",}),"eventreceivethrow":({"eventReceiveThrow",}),"canget":({"CanGet",}),"getinvis":({"GetInvis",}),"setallowsacrifice":({"SetAllowSacrifice",}),"setdeities":({"SetDeities",}),"removeexit":({"RemoveExit",}),"removesmell":({"RemoveSmell",}),"query_max_hp":({"query_max_hp",}),"getfirearmname":({"GetFirearmName",}),"setlonganditems":({"SetLongAndItems",}),"getsynonyms":({"GetSynonyms",}),"setpick":({"SetPick",}),"addshadow":({"AddShadow",}),"indirect_bury_obj_with_obj":({"indirect_bury_obj_with_obj",}),"addkey":({"AddKey",}),"eventcruise":({"eventCruise",}),"getflowlimit":({"GetFlowLimit",}),"eventpour":({"eventPour",}),"setmaxfuel":({"SetMaxFuel",}),"cansell":({"CanSell",}),"wild_card":({"wild_card",}),"candivorce":({"CanDivorce",}),"setverb":({"SetVerb",}),"canremoveitem":({"CanRemoveItem",}),"getspouse":({"GetSpouse",}),"removemanipulate":({"RemoveManipulate",}),"eventget":({"eventGet",}),"eventtallyvotes":({"eventTallyVotes",}),"setperforated":({"SetPerforated",}),"getmanipulate":({"GetManipulate",}),"getpassword":({"GetPassword",}),"setopen":({"SetOpen",}),"setwanderrecurse":({"SetWanderRecurse",}),"removemenuitem":({"RemoveMenuItem",}),"setcurrency":({"SetCurrency",}),"removemagicprotection":({"RemoveMagicProtection",}),"direct_command_liv_to_str":({"direct_command_liv_to_str",}),"setlocked":({"SetLocked",}),"setsleeping":({"SetSleeping",}),"getclass":({"GetClass",}),"removeencounter":({"RemoveEncounter",}),"eventrestoresight":({"eventRestoreSight",}),"getslowdecay":({"GetSlowDecay",}),"recurselocations":({"RecurseLocations",}),"canswim":({"CanSwim",}),"gethealing":({"GetHealing",}),"setdeathevents":({"SetDeathEvents",}),"compile_object":({"compile_object",}),"indirect_read_obj_at_obj":({"indirect_read_obj_at_obj",}),"getspecialtarget":({"GetSpecialTarget",}),"eventcharge":({"eventCharge",}),"eventforcequeuedcommand":({"eventForceQueuedCommand",}),"getcouncilmember":({"GetCouncilMember",}),"destlimb":({"DestLimb",}),"launch":({"launch",}),"eventequip":({"eventEquip",}),"setnoobviousexits":({"SetNoObviousExits",}),"eventdestroyundead":({"eventDestroyUndead",}),"setconjure":({"SetConjure",}),"cmd_pwd":({"cmd_pwd",}),"getmaxloaded":({"GetMaxLoaded",}),"addfish":({"AddFish",}),"getconsults":({"GetConsults",}),"setlit":({"SetLit",}),"getcarriedweight":({"GetCarriedWeight",}),"eventwritefile":({"eventWriteFile",}),"setexits":({"SetExits",}),"direct_look_on_obj":({"direct_look_on_obj",}),"canscratch":({"CanScratch",}),"eventconsult":({"eventConsult",}),"setadjectives":({"SetAdjectives",}),"canroll":({"CanRoll",}),"getemoteresponse":({"GetEmoteResponse",}),"indirect_balance_obj_to_obj":({"indirect_balance_obj_to_obj",}),"gettrapdescription":({"GetTrapDescription",}),"preaddenter":({"PreAddEnter",}),"setaggressive":({"SetAggressive",}),"setcurrencies":({"SetCurrencies",}),"direct_shoot_obj_with_obj":({"direct_shoot_obj_with_obj",}),"querybane":({"QueryBane",}),"setmealaction":({"SetMealAction",}),"getreadsmap":({"GetReadsMap",}),"getmaxflask":({"GetMaxFlask",}),"getescapechance":({"GetEscapeChance",}),"removecommandresponse":({"RemoveCommandResponse",}),"direct_untrain_liv":({"direct_untrain_liv",}),"removeproperty":({"RemoveProperty",}),"getmincells":({"GetMinCells",}),"addrecursedepth":({"AddRecurseDepth",}),"getposition":({"GetPosition",}),"pushd":({"pushd",}),"setescapechance":({"SetEscapeChance",}),"gethands":({"GetHands",}),"direct_move_obj":({"direct_move_obj",}),"setskill":({"SetSkill",}),"direct_free_liv_from_obj":({"direct_free_liv_from_obj",}),"indirect_sell_liv_obj":({"indirect_sell_liv_obj",}),"direct_dispel_liv":({"direct_dispel_liv",}),"setmaxsitters":({"SetMaxSitters",}),"setcanclose":({"SetCanClose",}),"getenemynames":({"GetEnemyNames",}),"getluck":({"GetLuck",}),"sendweaponmessages":({"SendWeaponMessages",}),"getcommandresponses":({"GetCommandResponses",}),"addconsultresponse":({"AddConsultResponse",}),"direct_look_at_str_on_obj":({"direct_look_at_str_on_obj",}),"getmagicchance":({"GetMagicChance",}),"direct_apply_obj_word_obj":({"direct_apply_obj_word_obj",}),"appraise":({"appraise",}),"getvendortype":({"GetVendorType",}),"getfloors":({"GetFloors",}),"addmagicpoints":({"AddMagicPoints",}),"getmagiccost":({"GetMagicCost",}),"addfood":({"AddFood",}),"setdoorside":({"SetDoorSide",}),"getowner":({"GetOwner",}),"gethboverride":({"GetHBOverride",}),"set_cwd":({"set_cwd",}),"eventempty":({"eventEmpty",}),"enableactions":({"EnableActions",}),"remove_dots":({"remove_dots",}),"getground":({"GetGround",}),"direct_shock_liv":({"direct_shock_liv",}),"direct_lead_liv":({"direct_lead_liv",}),"parse_command_adjectiv_id_list":({"parse_command_adjectiv_id_list",}),"setclanskill":({"SetClanSkill",}),"setrifletype":({"SetRifleType",}),"indirect_turn_obj_on_obj_on":({"indirect_turn_obj_on_obj_on",}),"direct_immolate_liv":({"direct_immolate_liv",}),"direct_bait_obj_with_obj":({"direct_bait_obj_with_obj",}),"getmountstyle":({"GetMountStyle",}),"removeskillbonus":({"RemoveSkillBonus",}),"getmoneymap":({"GetMoneyMap",}),"getdying":({"GetDying",}),"getskillbonus":({"GetSkillBonus",}),"eventdecay":({"eventDecay",}),"getnativelanguage":({"GetNativeLanguage",}),"eventcompletemove":({"eventCompleteMove",}),"direct_whisper_to_liv_in_wrd_str":({"direct_whisper_to_liv_in_wrd_str",}),"addassets":({"AddAssets",}),"getmaxcarry":({"GetMaxCarry",}),"do_shoot":({"do_shoot",}),"settalkresponses":({"SetTalkResponses",}),"getskills":({"GetSkills",}),"direct_scratch_on_obj":({"direct_scratch_on_obj",}),"getarmortype":({"GetArmorType",}),"getrequiredskill":({"GetRequiredSkill",}),"setnodecay":({"SetNoDecay",}),"getdamage":({"GetDamage",}),"setammo":({"SetAmmo",}),"getvotestatus":({"GetVoteStatus",}),"direct_initfix":({"direct_initfix",}),"direct_heal_str_of_liv":({"direct_heal_str_of_liv",}),"setexchangefee":({"SetExchangeFee",}),"settype":({"SetType",}),"getmagicprotection":({"GetMagicProtection",}),"getshakes":({"GetShakes",}),"setflowlimit":({"SetFlowLimit",}),"getbaseskilllevel":({"GetBaseSkillLevel",}),"getclanname":({"GetClanName",}),"eventtellhist":({"eventTellHist",}),"getlimbparent":({"GetLimbParent",}),"getdefaultlanguage":({"GetDefaultLanguage",}),"setmedium":({"SetMedium",}),"setshort":({"SetShort",}),"getvisibility":({"GetVisibility",}),"canlearn":({"CanLearn",}),"cmdappraise":({"cmdAppraise",}),"eventpull":({"eventPull",}),"setrescuebit":({"SetRescueBit",}),"getpreventput":({"GetPreventPut",}),"eventreceivesit":({"eventReceiveSit",}),"addchannel":({"AddChannel",}),"getstrength":({"GetStrength",}),"eventnextday":({"eventNextDay",}),"direct_put_obj_word_obj":({"direct_put_obj_word_obj",}),"eventenemydied":({"eventEnemyDied",}),"setloaded":({"SetLoaded",}),"setsynonyms":({"SetSynonyms",}),"setslowdecay":({"SetSlowDecay",}),"direct_delete_exit_str":({"direct_delete_exit_str",}),"getstaminapoints":({"GetStaminaPoints",}),"direct_swivel_str":({"direct_swivel_str",}),"loadauto":({"LoadAuto",}),"direct_use_obj":({"direct_use_obj",}),"canturnon":({"CanTurnOn",}),"direct_party_wrd_liv":({"direct_party_wrd_liv",}),"getparty":({"GetParty",}),"user_name":({"user_name",}),"settouch":({"SetTouch",}),"direct_look_in_obj":({"direct_look_in_obj",}),"direct_read_str_word_obj":({"direct_read_str_word_obj",}),"performdivorce":({"performDivorce",}),"getwielded":({"GetWielded",}),"direct_shoot_liv_with_obj":({"direct_shoot_liv_with_obj",}),"setgagged":({"SetGagged",}),"rctrl":({"rCtrl",}),"setpassword":({"SetPassword",}),"addexperiencepoints":({"AddExperiencePoints",}),"eventmanipulate":({"eventManipulate",}),"getneighborcoords":({"GetNeighborCoords",}),"cmd_pushd":({"cmd_pushd",}),"direct_get_wrd_wrd_from_obj":({"direct_get_wrd_wrd_from_obj",}),"getpowertype":({"GetPowerType",}),"compileneighbors":({"CompileNeighbors",}),"addnontargets":({"AddNonTargets",}),"getclimbs":({"GetClimbs",}),"eventmove":({"eventMove",}),"getfuelamount":({"GetFuelAmount",}),"direct_farsight_liv":({"direct_farsight_liv",}),"getcommandresponse":({"GetCommandResponse",}),"indirect_reload_str_obj":({"indirect_reload_str_obj",}),"modcharge":({"ModCharge",}),"addlocation":({"AddLocation",}),"getdrainable":({"GetDrainable",}),"direct_ask_liv_about_str":({"direct_ask_liv_about_str",}),"eventdismount":({"eventDismount",}),"setwebpage":({"SetWebPage",}),"addtitle":({"AddTitle",}),"getbodycomposition":({"GetBodyComposition",}),"removesearchpath":({"RemoveSearchPath",}),"direct_judge_obj_to_obj":({"direct_judge_obj_to_obj",}),"getsearchpath":({"GetSearchPath",}),"setproperties":({"SetProperties",}),"direct_bless_obj":({"direct_bless_obj",}),"getmealmessages":({"GetMealMessages",}),"canshowinterior":({"CanShowInterior",}),"eventsacrifice":({"eventSacrifice",}),"getmessages":({"GetMessages",}),"direct_sit_down_word_obj":({"direct_sit_down_word_obj",}),"canrock":({"CanRock",}),"eventdrive":({"eventDrive",}),"addsearch":({"AddSearch",}),"indirect_show_liv_obj":({"indirect_show_liv_obj",}),"indirect_unlock_obj_with_str":({"indirect_unlock_obj_with_str",}),"getfish":({"GetFish",}),"setcantrain":({"SetCanTrain",}),"eventlearn":({"eventLearn",}),"setmealmessages":({"SetMealMessages",}),"getpressure":({"GetPressure",}),"direct_weigh_obj":({"direct_weigh_obj",}),"getcommandfail":({"GetCommandFail",}),"teller_check":({"teller_check",}),"addstatbonus":({"AddStatBonus",}),"indirect_lock_obj_with_str":({"indirect_lock_obj_with_str",}),"eventconvertobject":({"eventConvertObject",}),"eventloaditem":({"eventLoadItem",}),"canbefriend":({"CanBefriend",}),"getgomessage":({"GetGoMessage",}),"direct_look_at_obj_word_obj":({"direct_look_at_obj_word_obj",}),"eventsuffer":({"eventSuffer",}),"setflaskcontents":({"SetFlaskContents",}),"missed_shot":({"missed_shot",}),"direct_steal_obj_from_liv":({"direct_steal_obj_from_liv",}),"setmaxflask":({"SetMaxFlask",}),"setmuted":({"SetMuted",}),"eventlisten":({"eventListen",}),"catch_tell":({"catch_tell",}),"direct_calm_liv":({"direct_calm_liv",}),"removequest":({"RemoveQuest",}),"cankneel":({"CanKneel",}),"setmincells":({"SetMinCells",}),"setposition":({"SetPosition",}),"getpoints":({"GetPoints",}),"clean_up":({"clean_up",}),"eventdivorce":({"eventDivorce",}),"getenters":({"GetEnters",}),"receivechars":({"ReceiveChars",}),"flicker":({"flicker",}),"end_post":({"end_post",}),"getparanoia":({"GetParanoia",}),"sethealing":({"SetHealing",}),"setmagiccost":({"SetMagicCost",}),"addread":({"AddRead",}),"candrop":({"CanDrop",}),"setunique":({"SetUnique",}),"getproperty":({"GetProperty",}),"settale":({"SetTale",}),"addmass":({"AddMass",}),"getstats":({"GetStats",}),"indirect_pulsecheck_liv":({"indirect_pulsecheck_liv",}),"getdirection":({"GetDirection",}),"getmealtype":({"GetMealType",}),"getareamap":({"GetAreaMap",}),"getdrainrate":({"GetDrainRate",}),"canshake":({"CanShake",}),"direct_shoot_obj_wrd_at_wrd":({"direct_shoot_obj_wrd_at_wrd",}),"direct_cast_str_on_obj":({"direct_cast_str_on_obj",}),"setmaxcapture":({"SetMaxCapture",}),"cmdsmell":({"cmdSmell",}),"direct_poison_obj_with_obj":({"direct_poison_obj_with_obj",}),"getattackable":({"GetAttackable",}),"direct_search_obj":({"direct_search_obj",}),"eventloadchapters":({"eventLoadChapters",}),"setundeadtype":({"SetUndeadType",}),"cancast":({"CanCast",}),"setarmortype":({"SetArmorType",}),"getmenuitems":({"GetMenuItems",}),"direct_read_obj_at_obj":({"direct_read_obj_at_obj",}),"getshadowedobject":({"GetShadowedObject",}),"getentermap":({"GetEnterMap",}),"setemoteresponses":({"SetEmoteResponses",}),"getmaxitems":({"GetMaxItems",}),"getfood":({"GetFood",}),"gettapped":({"GetTapped",}),"eventburywith":({"eventBuryWith",}),"direct_aim_obj_wrd":({"direct_aim_obj_wrd",}),"canreceive":({"CanReceive",}),"eventscratch":({"eventScratch",}),"setsaverecurse":({"SetSaveRecurse",}),"getlit":({"GetLit",}),"setpoisonuses":({"SetPoisonUses",}),"direct_befriend_liv":({"direct_befriend_liv",}),"setmaxcarry":({"SetMaxCarry",}),"candrink":({"CanDrink",}),"initrevolver":({"InitRevolver",}),"eventinfect":({"eventInfect",}),"setenter":({"SetEnter",}),"generateobviousexits":({"GenerateObviousExits",}),"eventbite":({"eventBite",}),"direct_look_at_obj":({"direct_look_at_obj",}),"setundead":({"SetUndead",}),"eventkneel":({"eventKneel",}),"eventburn":({"eventBurn",}),"direct_get_obj_out_of_obj":({"direct_get_obj_out_of_obj",}),"direct_pull_obj":({"direct_pull_obj",}),"additem_func":({"AddItem_func",}),"canfillme":({"CanFillMe",}),"setclanname":({"SetClanName",}),"indirect_buy_str_from_liv":({"indirect_buy_str_from_liv",}),"direct_annihilate_at_liv":({"direct_annihilate_at_liv",}),"putcoins":({"PutCoins",}),"canboobytrap":({"CanBoobytrap",}),"direct_veil_liv_against_wrd_wrd":({"direct_veil_liv_against_wrd_wrd",}),"getchamberinterior":({"GetChamberInterior",}),"putcheck":({"PutCheck",}),"getshadowed":({"GetShadowed",}),"setwimpy":({"SetWimpy",}),"removedig":({"RemoveDig",}),"woundlong":({"WoundLong",}),"getautodamage":({"GetAutoDamage",}),"getprimaryskills":({"GetPrimarySkills",}),"direct_drive":({"direct_drive",}),"direct_arrow_liv":({"direct_arrow_liv",}),"getquestpoints":({"GetQuestPoints",}),"canpeer":({"CanPeer",}),"eventunjoin":({"eventUnjoin",}),"setstrength":({"SetStrength",}),"eventshake":({"eventShake",}),"list":({"list",}),"setpowertype":({"SetPowerType",}),"geterrormessage":({"GetErrorMessage",}),"getnocondition":({"GetNoCondition",}),"eventhealdamage":({"eventHealDamage",}),"getlocked":({"GetLocked",}),"direct_pull_str_from_obj":({"direct_pull_str_from_obj",}),"canextinguish":({"CanExtinguish",}),"setdrainable":({"SetDrainable",}),"indirect_shoot_obj_with_obj":({"indirect_shoot_obj_with_obj",}),"direct_attack_liv_only":({"direct_attack_liv_only",}),"eventquell":({"eventQuell",}),"seterrormessage":({"SetErrorMessage",}),"disableactions":({"DisableActions",}),"eventpick":({"eventPick",}),"direct_blades_liv":({"direct_blades_liv",}),"direct_sacrifice_obj_to_str":({"direct_sacrifice_obj_to_str",}),"getlastcommand":({"GetLastCommand",}),"addpoison":({"AddPoison",}),"cmd_alias":({"cmd_alias",}),"removeshake":({"RemoveShake",}),"registerlocation":({"RegisterLocation",}),"cancelcharmode":({"CancelCharmode",}),"getbonusduration":({"GetBonusDuration",}),"eventopen":({"eventOpen",}),"direct_empty_obj":({"direct_empty_obj",}),"eventdrink":({"eventDrink",}),"getspellbook":({"GetSpellBook",}),"getrefuelable":({"GetRefuelable",}),"setcansit":({"SetCanSit",}),"getdeterioration":({"GetDeterioration",}),"getshadowobject":({"GetShadowObject",}),"eventkillenemy":({"eventKillEnemy",}),"getscratches":({"GetScratches",}),"addcarriedmass":({"AddCarriedMass",}),"setgomessage":({"SetGoMessage",}),"direct_sit_word_obj":({"direct_sit_word_obj",}),"sethelp":({"SetHelp",}),"setshadowobject":({"SetShadowObject",}),"eventaddcandidate":({"eventAddCandidate",}),"getnightlight":({"GetNightLight",}),"gettouches":({"GetTouches",}),"indirect_apply_obj_word_obj":({"indirect_apply_obj_word_obj",}),"setmessages":({"SetMessages",}),"setpressure":({"SetPressure",}),"getterminal":({"GetTerminal",}),"canuse":({"CanUse",}),"saveobject":({"SaveObject",}),"rgb2ansi":({"rgb2ansi",}),"setspecialtarget":({"SetSpecialTarget",}),"getpersistent":({"GetPersistent",}),"direct_knock_str_on_obj":({"direct_knock_str_on_obj",}),"getcost":({"GetCost",}),"getresistancemap":({"GetResistanceMap",}),"setprotection":({"SetProtection",}),"indirect_aim_obj_with_obj":({"indirect_aim_obj_with_obj",}),"direct_scry_liv":({"direct_scry_liv",}),"getitemcondition":({"GetItemCondition",}),"setdrainrate":({"SetDrainRate",}),"window_size":({"window_size",}),"direct_can_give_liv_obj":({"direct_can_give_liv_obj",}),"eventuse":({"eventUse",}),"getgermname":({"GetGermName",}),"direct_demonclaw_liv":({"direct_demonclaw_liv",}),"removeextrachannels":({"RemoveExtraChannels",}),"getmaxrecursedepth":({"GetMaxRecurseDepth",}),"setparanoia":({"SetParanoia",}),"addsmell":({"AddSmell",}),"addbank":({"AddBank",}),"direct_verb_rule":({"direct_verb_rule",}),"save_player":({"save_player",}),"cmd_nmsh":({"cmd_nmsh",}),"getcure":({"GetCure",}),"setinvis":({"SetInvis",}),"setdoorstopped":({"SetDoorStopped",}),"indirect_pick_str_on_obj_with_obj":({"indirect_pick_str_on_obj_with_obj",}),"setmenuitems":({"SetMenuItems",}),"setpreventland":({"SetPreventLand",}),"setproperty":({"SetProperty",}),"setvirtfile":({"SetVirtFile",}),"getpress":({"GetPress",}),"getburntvalue":({"GetBurntValue",}),"getsmellmap":({"GetSmellMap",}),"getstorageroom":({"GetStorageRoom",}),"changeclass":({"ChangeClass",}),"getread":({"GetRead",}),"getstatus":({"GetStatus",}),"eventland":({"eventLand",}),"setmealtype":({"SetMealType",}),"direct_wield_obj_word_str":({"direct_wield_obj_word_str",}),"getradiantlight":({"GetRadiantLight",}),"checkencounter":({"CheckEncounter",}),"direct_modify_obj_str":({"direct_modify_obj_str",}),"getmass":({"GetMass",}),"direct_consult_obj":({"direct_consult_obj",}),"eventrestoreequip":({"eventRestoreEquip",}),"direct_regen_str_on_liv":({"direct_regen_str_on_liv",}),"cmd_remove":({"cmd_remove",}),"direct_steal_wrd_from_liv":({"direct_steal_wrd_from_liv",}),"setradiantlight":({"SetRadiantLight",}),"direct_give_liv_wrd_wrd":({"direct_give_liv_wrd_wrd",}),"eventremoveblessing":({"eventRemoveBlessing",}),"eventofferteaching":({"eventOfferTeaching",}),"eventconvert":({"eventConvert",}),"limbcertain":({"LimbCertain",}),"getcreatorbirth":({"GetCreatorBirth",}),"settitlelength":({"SetTitleLength",}),"eventstrike":({"eventStrike",}),"setclass":({"SetClass",}),"check_include_text":({"check_include_text",}),"setmaxitems":({"SetMaxItems",}),"getlimbs":({"GetLimbs",}),"setcommandresponses":({"SetCommandResponses",}),"addpartyquest":({"AddPartyQuest",}),"indirect_resurrect_obj":({"indirect_resurrect_obj",}),"rgb2xterm256":({"rgb2xterm256",}),"direct_wizunlock_obj":({"direct_wizunlock_obj",}),"direct_ride_word_str":({"direct_ride_word_str",}),"direct_read_obj":({"direct_read_obj",}),"canattack":({"CanAttack",}),"indirect_shoot_liv_with_obj":({"indirect_shoot_liv_with_obj",}),"direct_ward_liv_against_wrd":({"direct_ward_liv_against_wrd",}),"getemptyname":({"GetEmptyName",}),"restorelimb":({"RestoreLimb",}),"direct_open_obj_with_obj":({"direct_open_obj_with_obj",}),"eventdonate":({"eventDonate",}),"querymap":({"QueryMap",}),"getbaseradiance":({"GetBaseRadiance",}),"canapply":({"CanApply",}),"getpreventget":({"GetPreventGet",}),"canturn":({"CanTurn",}),"direct_enter_obj":({"direct_enter_obj",}),"direct_burn_obj_with_obj":({"direct_burn_obj_with_obj",}),"direct_reload_str_obj":({"direct_reload_str_obj",}),"inventory_accessible":({"inventory_accessible",}),"getspelltype":({"GetSpellType",}),"getmastermap":({"GetMasterMap",}),"getmedium":({"GetMedium",}),"ceditsave":({"CeditSave",}),"domagunload":({"doMagUnload",}),"direct_shoot_obj_wrd":({"direct_shoot_obj_wrd",}),"eventmount":({"eventMount",}),"setcommercial":({"SetCommercial",}),"getcurrentcommand":({"GetCurrentCommand",}),"getcombatchance":({"GetCombatChance",}),"direct_show_liv_obj":({"direct_show_liv_obj",}),"getexemptvirtual":({"GetExemptVirtual",}),"direct_smoke_from_obj":({"direct_smoke_from_obj",}),"eventloadindex":({"eventLoadIndex",}),"handleteller":({"HandleTeller",}),"setstat":({"SetStat",}),"direct_look_obj":({"direct_look_obj",}),"redrawscreen":({"RedrawScreen",}),"setareamap":({"SetAreaMap",}),"cgetsave":({"cGetSave",}),"getloaded":({"GetLoaded",}),"opendoor":({"openDoor",}),"getburning":({"GetBurning",}),"getmissinglimbparent":({"GetMissingLimbParent",}),"setmillimeter":({"SetMillimeter",}),"setwhereblock":({"SetWhereBlock",}),"direct_extinguish_obj":({"direct_extinguish_obj",}),"eventflood":({"eventFlood",}),"getgagged":({"GetGagged",}),"direct_whisper_in_wrd_to_liv_str":({"direct_whisper_in_wrd_to_liv_str",}),"getmagicpoints":({"GetMagicPoints",}),"cmd_work":({"cmd_work",}),"getdamagetype":({"GetDamageType",}),"addbait":({"AddBait",}),"sethands":({"SetHands",}),"getlivinglong":({"GetLivingLong",}),"rbackspace":({"rBackspace",}),"direct_delete_obj_from_here":({"direct_delete_obj_from_here",}),"setspellbook":({"SetSpellBook",}),"getpickingquality":({"GetPickingQuality",}),"indirect_steal_obj_from_liv":({"indirect_steal_obj_from_liv",}),"eventforce":({"eventForce",}),"direct_activate_obj_on_obj":({"direct_activate_obj_on_obj",}),"getteachinglanguages":({"GetTeachingLanguages",}),"getmatching":({"GetMatching",}),"calculatecarriedmass":({"CalculateCarriedMass",}),"getreligions":({"GetReligions",}),"direct_close_obj":({"direct_close_obj",}),"indirect_sell_obs_to_liv":({"indirect_sell_obs_to_liv",}),"indirect_aim_liv_with_obj":({"indirect_aim_liv_with_obj",}),"addhealthpoints":({"AddHealthPoints",}),"setcharbuffer":({"SetCharbuffer",}),"indirect_free_liv_from_obj":({"indirect_free_liv_from_obj",}),"getannoyblock":({"GetAnnoyblock",}),"eventreceive":({"eventReceive",}),"setarmed":({"SetArmed",}),"direct_unwield_obj":({"direct_unwield_obj",}),"renter":({"rEnter",}),"direct_untrain_liv_to_str":({"direct_untrain_liv_to_str",}),"setstaminapoints":({"SetStaminaPoints",}),"direct_pour_obj_out":({"direct_pour_obj_out",}),"getrequestresponses":({"GetRequestResponses",}),"initializelocations":({"InitializeLocations",}),"eventtalkrespond":({"eventTalkRespond",}),"direct_deactivate_str_on_obj":({"direct_deactivate_str_on_obj",}),"canfly":({"CanFly",}),"xterm2rgb":({"xterm2rgb",}),"direct_pulsecheck_liv":({"direct_pulsecheck_liv",}),"direct_animate_obj":({"direct_animate_obj",}),"setowner":({"SetOwner",}),"eventjump":({"eventJump",}),"indirect_roll_obj_on_obj":({"indirect_roll_obj_on_obj",}),"getnobotcondition":({"GetNoBotCondition",}),"getinternaldesc":({"GetInternalDesc",}),"setsearch":({"SetSearch",}),"getfingers":({"GetFingers",}),"gethistory":({"GetHistory",}),"createvirtualobject":({"CreateVirtualObject",}),"eventtrainskill":({"eventTrainSkill",}),"direct_delete_obj_from_room":({"direct_delete_obj_from_room",}),"addheartmodifier":({"AddHeartModifier",}),"direct_strike_obj":({"direct_strike_obj",}),"addskillpoints":({"AddSkillPoints",}),"getcount":({"GetCount",}),"getemptylong":({"GetEmptyLong",}),"getdirectionmap":({"GetDirectionMap",}),"getrecursedepth":({"GetRecurseDepth",}),"geteverfill":({"GetEverFill",}),"collect_moduli":({"collect_moduli",}),"direct_cloak_wrd":({"direct_cloak_wrd",}),"setinternaldesc":({"SetInternalDesc",}),"direct_scratch_on_str_on_obj":({"direct_scratch_on_str_on_obj",}),"indirect_poison_obj_with_obj":({"indirect_poison_obj_with_obj",}),"setdying":({"SetDying",}),"getknock":({"GetKnock",}),"eventfly":({"eventFly",}),"foundtraps":({"FoundTraps",}),"getnightlong":({"GetNightLong",}),"removestat":({"RemoveStat",}),"getdisabled":({"GetDisabled",}),"eventturnon":({"eventTurnOn",}),"getnospells":({"GetNoSpells",}),"setterminal":({"SetTerminal",}),"setrecursedepth":({"SetRecurseDepth",}),"direct_attack_only_liv":({"direct_attack_only_liv",}),"direct_force_liv_to_str":({"direct_force_liv_to_str",}),"direct_ask_liv_for_str":({"direct_ask_liv_for_str",}),"gethealthshort":({"GetHealthShort",}),"indirect_bait_obj_with_obj":({"indirect_bait_obj_with_obj",}),"setweapontype":({"SetWeaponType",}),"setdoor":({"SetDoor",}),"direct_aim_obj_wrd_at_wrd":({"direct_aim_obj_wrd_at_wrd",}),"getsize":({"GetSize",}),"gettrainingmodifier":({"GetTrainingModifier",}),"setzpg":({"SetZPG",}),"setpermitload":({"SetPermitLoad",}),"setheat":({"SetHeat",}),"getnoclean":({"GetNoClean",}),"getshadows":({"GetShadows",}),"eventstop":({"eventStop",}),"getunique":({"GetUnique",}),"direct_pick_str_on_obj_with_obj":({"direct_pick_str_on_obj_with_obj",}),"iscorpse":({"isCorpse",}),"setgermname":({"SetGermName",}),"eventconnect":({"eventConnect",}),"addtrainingskills":({"AddTrainingSkills",}),"getxverb":({"GetXverb",}),"getresistance":({"GetResistance",}),"setgender":({"SetGender",}),"cancastmagic":({"CanCastMagic",}),"indirect_look_at_obj_word_obj":({"indirect_look_at_obj_word_obj",}),"eventbuck":({"eventBuck",}),"direct_climb_obj":({"direct_climb_obj",}),"getpagerprompt":({"GetPagerPrompt",}),"addstatpoints":({"AddStatPoints",}),"echocommand":({"EchoCommand",}),"getsides":({"GetSides",}),"getvirtual":({"GetVirtual",}),"setwanderspeed":({"SetWanderSpeed",}),"canunlock":({"CanUnlock",}),"setworn":({"SetWorn",}),"getbank":({"GetBank",}),"removeshadow":({"RemoveShadow",}),"indirect_get_obj_out_of_obj":({"indirect_get_obj_out_of_obj",}),"gettempbuffer":({"GetTempbuffer",}),"doroll":({"doRoll",}),"eventshow":({"eventShow",}),"getbane":({"GetBane",}),"setspellchance":({"SetSpellChance",}),"setparty":({"SetParty",}),"destructemptyvirtual":({"DestructEmptyVirtual",}),"net_dead":({"net_dead",}),"eventbring":({"eventBring",}),"eventheartalk":({"eventHearTalk",}),"getrealname":({"GetRealName",}),"setemptyname":({"SetEmptyName",}),"canmarry":({"CanMarry",}),"getmaxmagicpoints":({"GetMaxMagicPoints",}),"getcedmode":({"GetCedmode",}),"direct_backlash_for_liv_against_wrd":({"direct_backlash_for_liv_against_wrd",}),"get_closed":({"get_closed",}),"rgb_distance":({"rgb_distance",}),"getclimate":({"GetClimate",}),"getbankname":({"GetBankName",}),"getincombat":({"GetInCombat",}),"direct_fireball_at_liv":({"direct_fireball_at_liv",}),"setcankneel":({"SetCanKneel",}),"eventrequestcitizenship":({"eventRequestCitizenship",}),"direct_look_inside_obj":({"direct_look_inside_obj",}),"direct_deactivate_obj":({"direct_deactivate_obj",}),"continueheart":({"ContinueHeart",}),"indirect_show_obj_to_liv":({"indirect_show_obj_to_liv",}),"canlock":({"CanLock",}),"getcanclimbcarried":({"GetCanClimbCarried",}),"setspelltype":({"SetSpellType",}),"setmastermap":({"SetMasterMap",}),"resc":({"rEsc",}),"getuserpath":({"GetUserPath",}),"candigwith":({"CanDigWith",}),"cango":({"CanGo",}),"getquestid":({"GetQuestId",}),"addemoteresponse":({"AddEmoteResponse",}),"eventjoin":({"eventJoin",}),"getundead":({"GetUndead",}),"getkeepalive":({"GetKeepalive",}),"getallowsacrifice":({"GetAllowSacrifice",}),"rascii":({"rAscii",}),"canunload":({"CanUnload",}),"indirect_put_obs_obj":({"indirect_put_obs_obj",}),"getcanbite":({"GetCanBite",}),"getcaffeine":({"GetCaffeine",}),"getexternaldesc":({"GetExternalDesc",}),"getpileamount":({"GetPileAmount",}),"setmoney":({"SetMoney",}),"getmaxclones":({"GetMaxClones",}),"getroomaffectlong":({"GetRoomAffectLong",}),"getbodytype":({"GetBodyType",}),"direct_whisper_in_wrd_to_liv":({"direct_whisper_in_wrd_to_liv",}),"getwimpycommand":({"GetWimpyCommand",}),"indirect_get_obj_from_obj":({"indirect_get_obj_from_obj",}),"eventcheckprotection":({"eventCheckProtection",}),"setexternaldesc":({"SetExternalDesc",}),"getrestrictedchannels":({"GetRestrictedChannels",}),"getnomodify":({"GetNoModify",}),"eventwander":({"eventWander",}),"setbefriended":({"SetBefriended",}),"getdummyitem":({"GetDummyItem",}),"setammofile":({"SetAmmoFile",}),"setwimpycommand":({"SetWimpyCommand",}),"addlead":({"AddLead",}),"direct_roll_obj_here":({"direct_roll_obj_here",}),"getmaxammo":({"GetMaxAmmo",}),"direct_wear_obj":({"direct_wear_obj",}),"getpoisongas":({"GetPoisonGas",}),"canload":({"CanLoad",}),"gettitle":({"GetTitle",}),"getpenalty":({"GetPenalty",}),"direct_gale_liv":({"direct_gale_liv",}),"addquest":({"AddQuest",}),"eventsell":({"eventSell",}),"abort_edit":({"abort_edit",}),"direct_activate_obj":({"direct_activate_obj",}),"eventteachplayer":({"eventTeachPlayer",}),"direct_uninstall_obj":({"direct_uninstall_obj",}),"setdestructondrop":({"SetDestructOnDrop",}),"setreligions":({"SetReligions",}),"addlisten":({"AddListen",}),"getcannotinfect":({"GetCannotInfect",}),"getreads":({"GetReads",}),"eventflushqueuedmessages":({"eventFlushQueuedMessages",}),"getspell":({"GetSpell",}),"setvisiblegrid":({"SetVisibleGrid",}),"canreceivehealing":({"CanReceiveHealing",}),"eventmarry":({"eventMarry",}),"setcannotinfect":({"SetCannotInfect",}),"getwanderpath":({"GetWanderPath",}),"eventopenaccount":({"eventOpenAccount",}),"rgb2xterm":({"rgb2xterm",}),"getuniqueid":({"GetUniqueId",}),"direct_bury_str_with_obj":({"direct_bury_str_with_obj",}),"getgodmode":({"GetGodMode",}),"setpoison":({"SetPoison",}),"getbait":({"GetBait",}),"setterraintype":({"SetTerrainType",}),"setmaxfishing":({"SetMaxFishing",}),"eventswim":({"eventSwim",}),"getcaliber":({"GetCaliber",}),"setmatching":({"SetMatching",}),"cansacrifice":({"CanSacrifice",}),"gettraps":({"GetTraps",}),"getopenfee":({"GetOpenFee",}),"setstats":({"SetStats",}),"addtrainingpoints":({"AddTrainingPoints",}),"eventpostrelease":({"eventPostRelease",}),"checkcollapse":({"checkCollapse",}),"geteffectivevision":({"GetEffectiveVision",}),"gettalkhistory":({"GetTalkHistory",}),"getdead":({"GetDead",}),"indirect_put_obj_obj":({"indirect_put_obj_obj",}),"getcommandnumber":({"GetCommandNumber",}),"setemptylong":({"SetEmptyLong",}),"indirect_show_obj_liv":({"indirect_show_obj_liv",}),"getlockable":({"GetLockable",}),"setfirearmtype":({"SetFirearmType",}),"getfueltype":({"GetFuelType",}),"setnightlong":({"SetNightLong",}),"settown":({"SetTown",}),"getfuelrequired":({"GetFuelRequired",}),"indirect_give_liv_obj":({"indirect_give_liv_obj",}),"getdummyitems":({"GetDummyItems",}),"addstuff":({"AddStuff",}),"setcancommand":({"SetCanCommand",}),"getstatlevel":({"GetStatLevel",}),"removehostile":({"RemoveHostile",}),"getpreventsteal":({"GetPreventSteal",}),"direct_ignore_liv":({"direct_ignore_liv",}),"eventroll":({"eventRoll",}),"direct_challenge_liv":({"direct_challenge_liv",}),"setfuelrequired":({"SetFuelRequired",}),"setsource":({"SetSource",}),"direct_swim_into_str":({"direct_swim_into_str",}),"setnonlocalfee":({"SetNonLocalFee",}),"getlistenmap":({"GetListenMap",}),"setpreventsteal":({"SetPreventSteal",}),"seteverfill":({"SetEverFill",}),"getnextlevel":({"GetNextLevel",}),"returnchannels":({"returnChannels",}),"eventhelp":({"eventHelp",}),"settrapdescription":({"SetTrapDescription",}),"getequippedshort":({"GetEquippedShort",}),"indirect_give_obs_to_liv":({"indirect_give_obs_to_liv",}),"canswivel":({"CanSwivel",}),"setbonusduration":({"SetBonusDuration",}),"setdisabled":({"SetDisabled",}),"setnospells":({"SetNoSpells",}),"eventpreview":({"eventPreview",}),"removeteachinglanguages":({"RemoveTeachingLanguages",}),"allowget":({"AllowGet",}),"begin_post":({"begin_post",}),"direct_give_wrd_wrd_to_liv":({"direct_give_wrd_wrd_to_liv",}),"replace_nickname":({"replace_nickname",}),"setlong":({"SetLong",}),"addquestcurrency":({"AddQuestCurrency",}),"eventretrycommand":({"eventRetryCommand",}),"addstaminapoints":({"AddStaminaPoints",}),"direct_arrow_at_liv":({"direct_arrow_at_liv",}),"readbook":({"ReadBook",}),"addbodymass":({"AddBodyMass",}),"getclan":({"GetClan",}),"direct_knock_on_str_on_obj":({"direct_knock_on_str_on_obj",}),"eventlay":({"eventLay",}),"getperforated":({"GetPerforated",}),"eventremoveitem":({"eventRemoveItem",}),"getexperiencepoints":({"GetExperiencePoints",}),"indirect_reload_every_str":({"indirect_reload_every_str",}),"eventfloat":({"eventFloat",}),"reset_prompt":({"reset_prompt",}),"direct_get_obj_obj":({"direct_get_obj_obj",}),"additem":({"AddItem",}),"getstaminacost":({"GetStaminaCost",}),"direct_climb_word_obj":({"direct_climb_word_obj",}),"eventmoveliving":({"eventMoveLiving",}),"getsavename":({"GetSaveName",}),"initcomposition":({"InitComposition",}),"direct_holylight_liv":({"direct_holylight_liv",}),"getwear":({"GetWear",}),"setlimb":({"SetLimb",}),"getlastpuff":({"GetLastPuff",}),"eventdarken":({"eventDarken",}),"settitles":({"SetTitles",}),"setfingers":({"SetFingers",}),"getcarriedmass":({"GetCarriedMass",}),"direct_shoot_obj_at_liv":({"direct_shoot_obj_at_liv",}),"query_cwd":({"query_cwd",}),"setrealname":({"SetRealName",}),"setkeepalive":({"SetKeepalive",}),"getassets":({"GetAssets",}),"eventteachlanguage":({"eventTeachLanguage",}),"eventescape":({"eventEscape",}),"eventdestruct":({"eventDestruct",}),"getcombatbonus":({"GetCombatBonus",}),"direct_turn_obj_on":({"direct_turn_obj_on",}),"cmd_nickname":({"cmd_nickname",}),"setmaxclones":({"SetMaxClones",}),"setbankname":({"SetBankName",}),"getadjectives":({"GetAdjectives",}),"getencounter":({"GetEncounter",}),"direct_turn_off_obj":({"direct_turn_off_obj",}),"setcharge":({"SetCharge",}),"setuserpath":({"SetUserPath",}),"direct_roll_obj_on_obj":({"direct_roll_obj_on_obj",}),"direct_fly_into_str":({"direct_fly_into_str",}),"addmuffed":({"AddMuffed",}),"setkey":({"SetKey",}),"eventcatch":({"eventCatch",}),"direct_portal_to_liv":({"direct_portal_to_liv",}),"getcurrencies":({"GetCurrencies",}),"direct_lock_obj_with_obj":({"direct_lock_obj_with_obj",}),"removeskill":({"RemoveSkill",}),"setnoclean":({"SetNoClean",}),"payment":({"Payment",}),"direct_swivel_str_on_obj":({"direct_swivel_str_on_obj",}),"getspeed":({"GetSpeed",}),"is_living":({"is_living",}),"setpoisongas":({"SetPoisonGas",}),"getdisablechance":({"GetDisableChance",}),"setplayerkill":({"SetPlayerKill",}),"direct_use_obj_to_str":({"direct_use_obj_to_str",}),"setbodytype":({"SetBodyType",}),"setemptyshort":({"SetEmptyShort",}),"getreligion":({"GetReligion",}),"getstrikechance":({"GetStrikeChance",}),"direct_createfix":({"direct_createfix",}),"direct_remedy_liv":({"direct_remedy_liv",}),"adddrink":({"AddDrink",}),"indirect_get_obs_from_obj":({"indirect_get_obs_from_obj",}),"setorigin":({"SetOrigin","setOrigin",}),"setnomodify":({"SetNoModify",}),"getmaxsitters":({"GetMaxSitters",}),"eventreleaseobject":({"eventReleaseObject",}),"direct_annihilate_liv":({"direct_annihilate_liv",}),"setpistoltype":({"SetPistolType",}),"getextrachannels":({"GetExtraChannels",}),"removesearch":({"RemoveSearch",}),"direct_listen_to_str_word_obj":({"direct_listen_to_str_word_obj",}),"eventcomplete":({"eventComplete",}),"setdefaultlanguage":({"SetDefaultLanguage",}),"unloadall":({"UnloadAll",}),"setstrikechance":({"SetStrikeChance",}),"validate_paranoia":({"validate_paranoia",}),"getkeyname":({"GetKeyName",}),"getzpg":({"GetZPG",}),"createdoor":({"CreateDoor",}),"removefollower":({"RemoveFollower",}),"getforced":({"GetForced",}),"cmdsearch":({"cmdSearch",}),"sortenemies":({"SortEnemies",}),"getburnrate":({"GetBurnRate",}),"getlead":({"GetLead",}),"direct_aura_liv":({"direct_aura_liv",}),"setcedmode":({"SetCedmode",}),"direct_cleanse_liv":({"direct_cleanse_liv",}),"canshoot":({"CanShoot",}),"heallimb":({"HealLimb",}),"getsmells":({"GetSmells",}),"setclimate":({"SetClimate",}),"removelimb":({"RemoveLimb",}),"switchlocations":({"SwitchLocations",}),"getweight":({"GetWeight",}),"removerider":({"RemoveRider",}),"direct_dismount_liv":({"direct_dismount_liv",}),"setexemptvirtual":({"SetExemptVirtual",}),"addqueststatpoints":({"AddQuestStatPoints",}),"setquestid":({"SetQuestId",}),"getdeathevents":({"GetDeathEvents",}),"settax":({"SetTax",}),"showrounds":({"ShowRounds",}),"addcurrency":({"AddCurrency",}),"valid_edit":({"valid_edit",}),"direct_blades_at_liv":({"direct_blades_at_liv",}),"setpress":({"SetPress",}),"getretainondeath":({"GetRetainOnDeath",}),"removestatbonus":({"RemoveStatBonus",}),"direct_fly_word_str":({"direct_fly_word_str",}),"direct_cast_str_on_str_of_obj":({"direct_cast_str_on_str_of_obj",}),"eventreadfile":({"eventReadFile",}),"setcanbite":({"SetCanBite",}),"settrainedskills":({"SetTrainedSkills",}),"dgetsave":({"dGetSave",}),"eventdigwith":({"eventDigWith",}),"eventcompleteheal":({"eventCompleteHeal",}),"passengerprint":({"PassengerPrint",}),"getrange":({"GetRange",}),"getactionsenabled":({"GetActionsEnabled",}),"isbag":({"isBag",}),"eventtouch":({"eventTouch",}),"resetlocation":({"ResetLocation",}),"eventuninstall":({"eventUninstall",}),"canuntrain":({"CanUnTrain",}),"direct_show_obj_to_liv":({"direct_show_obj_to_liv",}),"getmaxhealthpoints":({"GetMaxHealthPoints",}),"eventfall":({"eventFall",}),"direct_convert_liv":({"direct_convert_liv",}),"indirect_delete_obj_from_here":({"indirect_delete_obj_from_here",}),"setautoresets":({"SetAutoResets",}),"getsearch":({"GetSearch",}),"setlockable":({"SetLockable",}),"getvoteroom":({"GetVoteRoom",}),"setfueltype":({"SetFuelType",}),"getverbs":({"GetVerbs",}),"getrank":({"GetRank",}),"setbodycomposition":({"SetBodyComposition",}),"eventride":({"eventRide",}),"getsmell":({"GetSmell",}),"eventdetect":({"eventDetect",}),"eventrock":({"eventRock",}),"setcoordinates":({"SetCoordinates",}),"candest":({"CanDest",}),"cmdshow":({"cmdShow",}),"setmaxammo":({"SetMaxAmmo",}),"connect":({"connect",}),"direct_turn_off_obj_on_obj":({"direct_turn_off_obj_on_obj",}),"eventlocklock":({"eventLockLock",}),"direct_crawl_into_str":({"direct_crawl_into_str",}),"eventexecuteattack":({"eventExecuteAttack",}),"getwieldinglimbs":({"GetWieldingLimbs",}),"setclanobject":({"SetClanObject",}),"getnetworth":({"GetNetWorth",}),"checkpower":({"CheckPower",}),"removetouch":({"RemoveTouch",}),"getmelee":({"GetMelee",}),"direct_mend_liv":({"direct_mend_liv",}),"setrequestresponses":({"SetRequestResponses",}),"getsavestring":({"GetSaveString",}),"addmagicprotection":({"AddMagicProtection",}),"heart_beat":({"heart_beat",}),"removeenemy":({"RemoveEnemy",}),"getitems":({"GetItems",}),"setspeakcolor":({"SetSpeakColor",}),"getcurrencymass":({"GetCurrencyMass",}),"direct_look_at_obj_on_obj":({"direct_look_at_obj_on_obj",}),"addfingers":({"AddFingers",}),"direct_shoot_obj_at_obj":({"direct_shoot_obj_at_obj",}),"eventshoot":({"eventShoot",}),"setgodmode":({"SetGodMode",}),"setpreventdrop":({"SetPreventDrop",}),"indirect_delete_obj_from_room":({"indirect_delete_obj_from_room",}),"cmd_unalias":({"cmd_unalias",}),"getlanguagepoints":({"GetLanguagePoints",}),"getgender":({"GetGender",}),"addhostile":({"AddHostile",}),"setcaliber":({"SetCaliber",}),"getneighbors":({"GetNeighbors",}),"indirect_dig_obj_with_obj":({"indirect_dig_obj_with_obj",}),"eventdeploy":({"eventDeploy",}),"getmaxliers":({"GetMaxLiers",}),"eventcheckhealing":({"eventCheckHealing",}),"setopenfee":({"SetOpenFee",}),"canspellattack":({"CanSpellAttack",}),"eventdrop":({"eventDrop",}),"getdefensechance":({"GetDefenseChance",}),"getfollowermap":({"GetFollowerMap",}),"direct_smell_str_word_obj":({"direct_smell_str_word_obj",}),"getaffectlong":({"GetAffectLong",}),"getlistens":({"GetListens",}),"eventcommand":({"eventCommand",}),"getemoteresponses":({"GetEmoteResponses",}),"eventreceiveobject":({"eventReceiveObject",}),"indirect_burn_obj_with_obj":({"indirect_burn_obj_with_obj",}),"eventdisconnect":({"eventDisconnect",}),"getrestrictlimbs":({"GetRestrictLimbs",}),"setprompt":({"SetPrompt",}),"springtrap":({"SpringTrap",}),"getblocked":({"GetBlocked",}),"eventcommandnpc":({"eventCommandNPC",}),"getitem":({"GetItem",}),"settrainingmodifier":({"SetTrainingModifier",}),"setencounter":({"SetEncounter",}),"getcurrentenemy":({"GetCurrentEnemy",}),"setactionsmap":({"SetActionsMap",}),"addbonusduration":({"AddBonusDuration",}),"eventcast":({"eventCast",}),"addexit":({"AddExit",}),"getopacity":({"GetOpacity",}),"direct_throw_obj_word_obj":({"direct_throw_obj_word_obj",}),"recalculatehist":({"RecalculateHist",}),"removetrainingskills":({"RemoveTrainingSkills",}),"setcurrentenemy":({"SetCurrentEnemy",}),"getproperties":({"GetProperties",}),"direct_consult_str_on_obj":({"direct_consult_str_on_obj",}),"addcommandresponse":({"AddCommandResponse",}),"getsacrificetype":({"GetSacrificeType",}),"eventinitiate":({"eventInitiate",}),"eventresults":({"eventResults",}),"eventpicklock":({"eventPickLock",}),"direct_rock_obj":({"direct_rock_obj",}),"direct_unlock_obj_with_obj":({"direct_unlock_obj_with_obj",}),"eventprint":({"eventPrint",}),"terminal_type":({"terminal_type",}),"direct_show_obj_liv":({"direct_show_obj_liv",}),"direct_drink_str_from_obj":({"direct_drink_str_from_obj",}),"indirect_toss_obj_at_obj":({"indirect_toss_obj_at_obj",}),"direct_give_liv_obs":({"direct_give_liv_obs",}),"getexchangefee":({"GetExchangeFee",}),"getnews":({"GetNews",}),"direct_give_liv_obj":({"direct_give_liv_obj",}),"direct_disarm_obj":({"direct_disarm_obj",}),"direct_copy_obj_to_obj":({"direct_copy_obj_to_obj",}),"getaccountinfo":({"GetAccountInfo",}),"sendmeleemessages":({"SendMeleeMessages",}),"getside":({"GetSide",}),"direct_turn_on_obj":({"direct_turn_on_obj",}),"direct_marry_liv_to_liv":({"direct_marry_liv_to_liv",}),"setreligion":({"SetReligion",}),"setscreen":({"SetScreen",}),"setcount":({"SetCount",}),"page":({"Page",}),"eventunlock":({"eventUnlock",}),"eventbefriend":({"eventBefriend",}),"eventretire":({"eventRetire",}),"canfree":({"CanFree",}),"cansteal":({"CanSteal",}),"setknock":({"SetKnock",}),"restrict":({"restrict",}),"restoreobject":({"RestoreObject",}),"continue_mail":({"continue_mail",}),"setchamberinterior":({"SetChamberInterior",}),"setlisten":({"SetListen",}),"evententer":({"eventEnter",}),"eventreceivelay":({"eventReceiveLay",}),"eventlist":({"eventList",}),"canunequip":({"CanUnequip",}),"eventexecutequeuedcommands":({"eventExecuteQueuedCommands",}),"setburnrate":({"SetBurnRate",}),"eventrequestdivorce":({"eventRequestDivorce",}),"direct_remedy_str_of_liv":({"direct_remedy_str_of_liv",}),"setvirtualexits":({"SetVirtualExits",}),"getteloptip":({"GetTeloptIp",}),"gethealthpoints":({"GetHealthPoints",}),"getmaxcapture":({"GetMaxCapture",}),"resolveobjectname":({"ResolveObjectName",}),"getpoison":({"GetPoison",}),"getpull":({"GetPull",}),"eventblind":({"eventBlind",}),"direct_jump_word_word_obj":({"direct_jump_word_word_obj",}),"setcanfly":({"SetCanFly",}),"getprotect":({"GetProtect",}),"parsehook":({"ParseHook",}),"getundeadtype":({"GetUndeadType",}),"getequippeddescription":({"GetEquippedDescription",}),"getfurniture":({"GetFurniture",}),"sethealthpoints":({"SetHealthPoints",}),"removerequestresponse":({"RemoveRequestResponse",}),"getlogintime":({"GetLoginTime",}),"setteachingfee":({"SetTeachingFee",}),"setclient":({"SetClient",}),"getdaylong":({"GetDayLong",}),"getrequiredstamina":({"GetRequiredStamina",}),"getconsultresponses":({"GetConsultResponses",}),"eventwimpy":({"eventWimpy",}),"getrandomlimb":({"GetRandomLimb",}),"getlanguagelevel":({"GetLanguageLevel",}),"getfollowed":({"GetFollowed",}),"shb":({"shb",}),"removeenter":({"RemoveEnter",}),"unrestrictchannel":({"UnrestrictChannel",}),"eventunload":({"eventUnload",}),"direct_rock_wrd_obj":({"direct_rock_wrd_obj",}),"eventreceiveemote":({"eventReceiveEmote",}),"isplayer":({"isPlayer",}),"restrictchannel":({"RestrictChannel",}),"direct_backlash_for_liv":({"direct_backlash_for_liv",}),"getrespirationtype":({"GetRespirationType",}),"setaction":({"SetAction",}),"sethistorysize":({"SetHistorySize",}),"cmddebugall":({"cmdDebugAll",}),"getpoisonuses":({"GetPoisonUses",}),"gettraplevel":({"GetTrapLevel",}),"direct_drink_obj":({"direct_drink_obj",}),"canrepair":({"CanRepair",}),"indirect_reload":({"indirect_reload",}),"direct_dig_str_with_obj":({"direct_dig_str_with_obj",}),"removelocation":({"RemoveLocation",}),"direct_teleport_to_liv":({"direct_teleport_to_liv",}),"getsource":({"GetSource",}),"direct_fill_obj_with_obj":({"direct_fill_obj_with_obj",}),"indirect_pour_from_obj_into_obj":({"indirect_pour_from_obj_into_obj",}),"direct_palm_liv":({"direct_palm_liv",}),"getsitters":({"GetSitters",}),"setkeyname":({"SetKeyName",}),"getmorality":({"GetMorality",}),"addfollowbonus":({"AddFollowBonus",}),"direct_reload":({"direct_reload",}),"direct_whisper_to_liv_str":({"direct_whisper_to_liv_str",}),"eventsteal":({"eventSteal",}),"addvisionbonus":({"AddVisionBonus",}),"direct_dest_obj":({"direct_dest_obj",}),"removetrainingpoints":({"RemoveTrainingPoints",}),"getmaxskillpoints":({"GetMaxSkillPoints",}),"direct_evade_liv":({"direct_evade_liv",}),"setinfect":({"SetInfect",}),"setfish":({"SetFish",}),"getmissinglimbparents":({"GetMissingLimbParents",}),"canbuy":({"CanBuy",}),"eventspreadpoison":({"eventSpreadPoison",}),"getpk":({"GetPK",}),"price":({"price",}),"getremotetargets":({"GetRemoteTargets",}),"getvehicleinterior":({"GetVehicleInterior",}),"getpromptstring":({"GetPromptString",}),"gettalesdir":({"GetTalesDir",}),"getfight":({"GetFight",}),"direct_frigidus_liv":({"direct_frigidus_liv",}),"parsepost":({"ParsePost",}),"direct_capture_liv_word_obj":({"direct_capture_liv_word_obj",}),"direct_fill_obj_from_obj":({"direct_fill_obj_from_obj",}),"direct_listen_obj":({"direct_listen_obj",}),"direct_initfix_obj":({"direct_initfix_obj",}),"getcoords":({"GetCoords",}),"eventbuy":({"eventBuy",}),"eventweaponround":({"eventWeaponRound",}),"getrace":({"GetRace",}),"direct_cast_obj":({"direct_cast_obj",}),"setmaxliers":({"SetMaxLiers",}),"gethostiles":({"GetHostiles",}),"eventburnout":({"eventBurnOut",}),"setcomposition":({"SetComposition",}),"eventextinguish":({"eventExtinguish",}),"getlimbclass":({"GetLimbClass",}),"setmaxrecursedepth":({"SetMaxRecurseDepth",}),"getdaylight":({"GetDayLight",}),"getcapname":({"GetCapName",}),"direct_pour_from_obj_into_obj":({"direct_pour_from_obj_into_obj",}),"eventdeviatestat":({"eventDeviateStat",}),"eventstartvoting":({"eventStartVoting",}),"setmaxcommandhistsize":({"SetMaxCommandHistSize",}),"getbaitstrength":({"GetBaitStrength",}),"setpoisonstrength":({"SetPoisonStrength",}),"indirect_burn_obs_with_obj":({"indirect_burn_obs_with_obj",}),"direct_jump_word_obj":({"direct_jump_word_obj",}),"direct_say_to_liv_str":({"direct_say_to_liv_str",}),"canreceivemagic":({"CanReceiveMagic",}),"settitle":({"SetTitle",}),"rgb_downto_xterm256":({"rgb_downto_xterm256",}),"gettitles":({"GetTitles",}),"getbasefile":({"GetBaseFile",}),"getgravity":({"GetGravity",}),"gethistorylist":({"GetHistoryList",}),"getstatsmap":({"GetStatsMap",}),"marriagerequest":({"MarriageRequest",}),"direct_corrupt_liv":({"direct_corrupt_liv",}),"getnoncurrencymass":({"GetNonCurrencyMass",}),"setreads":({"SetReads",}),"setmagnum":({"SetMagnum",}),"addsurcharge":({"AddSurcharge",}),"setbaitstrength":({"SetBaitStrength",}),"direct_light_obj":({"direct_light_obj",}),"setspell":({"SetSpell",}),"addskillbonus":({"AddSkillBonus",}),"setdefaultexits":({"SetDefaultExits",}),"gettax":({"GetTax",}),"set_board_id":({"set_board_id",}),"getenemies":({"GetEnemies",}),"eventweaponattack":({"eventWeaponAttack",}),"addterraintype":({"AddTerrainType",}),"gettraptype":({"GetTrapType",}),"sethiddendoor":({"SetHiddenDoor",}),"direct_force_liv_str":({"direct_force_liv_str",}),"direct_drain_liv":({"direct_drain_liv",}),"eventreceiveattack":({"eventReceiveAttack",}),"direct_delete_obj_from_obj":({"direct_delete_obj_from_obj",}),"direct_touch_str_word_obj":({"direct_touch_str_word_obj",}),"getcharge":({"GetCharge",}),"direct_createfix_obj":({"direct_createfix_obj",}),"getexit":({"GetExit",}),"eventtrainliving":({"eventTrainLiving",}),"eventmagicround":({"eventMagicRound",}),"canbank":({"CanBank",}),"eventswivel":({"eventSwivel",}),"setmuffed":({"SetMuffed",}),"getquest":({"GetQuest",}),"setfood":({"SetFood",}),"indirect_give_obs_liv":({"indirect_give_obs_liv",}),"getmaxcommandhistsize":({"GetMaxCommandHistSize",}),"direct_compare_obj_to_obj":({"direct_compare_obj_to_obj",}),"getbuttonid":({"GetButtonId",}),"canweapon":({"CanWeapon",}),"direct_reload_obj":({"direct_reload_obj",}),"getkeys":({"GetKeys",}),"removefish":({"RemoveFish",}),"eventturn":({"eventTurn",}),"direct_install_obj_word_obj":({"direct_install_obj_word_obj",}),"canabandon":({"CanAbandon",}),"direct_gaze":({"direct_gaze",}),"getorigin":({"GetOrigin","getOrigin",}),"direct_fly":({"direct_fly",}),"getghost":({"GetGhost",}),"getrequestresponse":({"GetRequestResponse",}),"getprotection":({"GetProtection",}),"direct_search_str_word_obj":({"direct_search_str_word_obj",}),"getstudents":({"GetStudents",}),"canmail":({"CanMail",}),"cmdparserefresh":({"cmdParseRefresh",}),"getbasecost":({"GetBaseCost",}),"setnoecho":({"SetNoEcho",}),"rgb2match":({"rgb2match",}),"setblocked":({"SetBlocked",}),"getheartrate":({"GetHeartRate",}),"getbury":({"GetBury",}),"eventmovefollowers":({"eventMoveFollowers",}),"indirect_throw_obj_into_obj":({"indirect_throw_obj_into_obj",}),"parse_command_plural_id_list":({"parse_command_plural_id_list",}),"getsurroundareas":({"GetSurroundAreas",}),"setmountowner":({"SetMountOwner",}),"direct_pour_obj_into_obj":({"direct_pour_obj_into_obj",}),"indirect_add_obj":({"indirect_add_obj",}),"direct_acidspray_liv":({"direct_acidspray_liv",}),"indirect_put_obj_word_obj":({"indirect_put_obj_word_obj",}),"setopacity":({"SetOpacity",}),"eventcontinue":({"eventContinue",}),"indirect_add_obj_to_here":({"indirect_add_obj_to_here",}),"direct_rejuvinate_liv":({"direct_rejuvinate_liv",}),"getbriefmode":({"GetBriefMode",}),"setrespiration":({"SetRespiration",}),"eventsave":({"eventSave",}),"indirect_turn_off_obj_on_obj":({"indirect_turn_off_obj_on_obj",}),"cmdtouch":({"cmdTouch",}),"setteloptip":({"SetTeloptIp",}),"setdisablechance":({"SetDisableChance",}),"cmd_read":({"cmd_read",}),"indirect_drink_from_obj":({"indirect_drink_from_obj",}),"setlivingshort":({"SetLivingShort",}),"eventgo":({"eventGo",}),"settraplevel":({"SetTrapLevel",}),"direct_swim_str":({"direct_swim_str",}),"indirect_give_obj_liv":({"indirect_give_obj_liv",}),"eventpreattack":({"eventPreAttack",}),"addsearchpath":({"AddSearchPath",}),"setextrachannels":({"SetExtraChannels",}),"direct_swivel_obj":({"direct_swivel_obj",}),"direct_learn_str_from_liv":({"direct_learn_str_from_liv",}),"ceditcollate":({"CeditCollate",}),"setfollowed":({"SetFollowed",}),"eventunshadow":({"eventUnshadow",}),"addtalkresponse":({"AddTalkResponse",}),"getid":({"GetId",}),"getclimateexposed":({"GetClimateExposed",}),"getflaskuses":({"GetFlaskUses",}),"checkguardeds":({"CheckGuardeds",}),"getpick":({"GetPick",}),"canputonto":({"CanPutOnto",}),"direct_lie_word_obj":({"direct_lie_word_obj",}),"cmd_eventdestruct":({"cmd_eventDestruct",}),"checkactions":({"CheckActions",}),"eventgetmoney":({"eventGetMoney",}),"indirect_add_obj_to_room":({"indirect_add_obj_to_room",}),"setfirearmname":({"SetFirearmName",}),"getverb":({"GetVerb",}),"canbait":({"CanBait",}),"addmenuitem":({"AddMenuItem",}),"eventmeleeround":({"eventMeleeRound",}),"getpolyglot":({"GetPolyglot",}),"indirect_judge_obj_to_obj":({"indirect_judge_obj_to_obj",}),"direct_bite_liv":({"direct_bite_liv",}),"direct_wear_obj_on_str":({"direct_wear_obj_on_str",}),"gethb":({"GetHB",}),"getopen":({"GetOpen",}),"eventnegotiateobstacles":({"eventNegotiateObstacles",}),"addjump":({"AddJump",}),"indirect_get_obs_out_of_obj":({"indirect_get_obs_out_of_obj",}),"direct_dig_with_obj":({"direct_dig_with_obj",}),"setmorality":({"SetMorality",}),"getcommercial":({"GetCommercial",}),"direct_bump_liv":({"direct_bump_liv",}),"direct_wizlock_obj":({"direct_wizlock_obj",}),"indirect_sell_obj_to_liv":({"indirect_sell_obj_to_liv",}),"direct_swivel_wrd_obj":({"direct_swivel_wrd_obj",}),"cmd_edit":({"cmd_edit",}),"getmarriages":({"GetMarriages",}),"expertise":({"Expertise",}),"addskill":({"AddSkill",}),"canfillother":({"CanFillOther",}),"gettrainedskilles":({"GetTrainedSkilles",}),"process_input":({"process_input",}),"setretainondeath":({"SetRetainOnDeath",}),"user_names":({"user_names",}),"addpressure":({"AddPressure",}),"indirect_zap_liv":({"indirect_zap_liv",}),"eventreleasestand":({"eventReleaseStand",}),"setclimb":({"SetClimb",}),"rarrow":({"rArrow",}),"getmillimeter":({"GetMillimeter",}),"getmaxstaminapoints":({"GetMaxStaminaPoints",}),"setspeed":({"SetSpeed",}),"setprotect":({"SetProtect",}),"getwhereblock":({"GetWhereBlock",}),"continuetraining":({"ContinueTraining",}),"direct_turn_obj_on_obj_off":({"direct_turn_obj_on_obj_off",}),"eventunequip":({"eventUnequip",}),"settalesdir":({"SetTalesDir",}),"setretain":({"SetRetain",}),"indirect_unlock_obj_with_obj":({"indirect_unlock_obj_with_obj",}),"getshake":({"GetShake",}),"getskilllevel":({"GetSkillLevel",}),"setdaylong":({"SetDayLong",}),"removenontargets":({"RemoveNonTargets",}),"getcommandhist":({"GetCommandHist",}),"setcanswim":({"SetCanSwim",}),"setdifficulty":({"SetDifficulty",}),"getcustomxp":({"GetCustomXP",}),"direct_touch_obj":({"direct_touch_obj",}),"indirect_lock_obj_with_obj":({"indirect_lock_obj_with_obj",}),"getnontargets":({"GetNonTargets",}),"getdoorstopped":({"GetDoorStopped",}),"getpreventland":({"GetPreventLand",}),"removeconsultresponse":({"RemoveConsultResponse",}),"getprompt":({"GetPrompt",}),"regetid":({"regetID",}),"getdeviating":({"GetDeviating",}),"continue_post":({"continue_post",}),"getalias":({"GetAlias",}),"getlasterror":({"GetLastError",}),"setdaylight":({"SetDayLight",}),"getemail":({"GetEmail",}),"setcure":({"SetCure",}),"setcanbefriend":({"SetCanBefriend",}),"getshadowedname":({"GetShadowedName",}),"cansmoke":({"CanSmoke",}),"getcharbuffer":({"GetCharbuffer",}),"setbasefile":({"SetBaseFile",}),"receive_message":({"receive_message",}),"addproperty":({"AddProperty",}),"setlightlevel":({"SetLightLevel",}),"getknocks":({"GetKnocks",}),"removelisten":({"RemoveListen",}),"setread":({"SetRead",}),"direct_pull_str_on_obj":({"direct_pull_str_on_obj",}),"getdrink":({"GetDrink",}),"setmass":({"SetMass",}),"gettitlelength":({"GetTitleLength",}),"addrider":({"AddRider",}),"getskillsmap":({"GetSkillsMap",}),"cmdlisten":({"cmdListen",}),"getcouncil":({"GetCouncil",}),"getanchored":({"GetAnchored",}),"getlocalfee":({"GetLocalFee",}),"settraptype":({"SetTrapType",}),"direct_load_obj":({"direct_load_obj",}),"eventhistory":({"eventHistory",}),"eventlock":({"eventLock",}),"getlanguagename":({"GetLanguageName",}),"eventencounterblock":({"eventEncounterBlock",}),"canwear":({"CanWear",}),"direct_follow_liv":({"direct_follow_liv",}),"setcanclimbcarried":({"SetCanClimbCarried",}),"addpoisongas":({"AddPoisonGas",}),"eventradiate":({"eventRadiate",}),"setrestrictlimbs":({"SetRestrictLimbs",}),"setrange":({"SetRange",}),"cmdenter":({"cmdEnter",}),"setbuttonid":({"SetButtonId",}),"getsavefile":({"GetSaveFile",}),"getscreen":({"GetScreen",}),"setsmell":({"SetSmell",}),"setmanipulate":({"SetManipulate",}),"getweapontype":({"GetWeaponType",}),"getdestructondrop":({"GetDestructOnDrop",}),"getencumbrance":({"GetEncumbrance",}),"calculateammosize":({"CalculateAmmoSize",}),"getpermitload":({"GetPermitLoad",}),"setcapname":({"SetCapName",}),"setbriefmode":({"SetBriefMode",}),"picktale":({"PickTale",}),"direct_offer_obj":({"direct_offer_obj",}),"getlisten":({"GetListen",}),"setsacrificetype":({"SetSacrificeType",}),"mustcarry":({"MustCarry",}),"getcurrencymap":({"GetCurrencyMap",}),"addtouch":({"AddTouch",}),"setbasecost":({"SetBaseCost",}),"getpacifist":({"GetPacifist",}),"setgravity":({"SetGravity",}),"direct_turn_liv":({"direct_turn_liv",}),"getvisibleriders":({"GetVisibleRiders",}),"getlightsensitivity":({"GetLightSensitivity",}),"cmd_cd":({"cmd_cd",}),"addenemy":({"AddEnemy",}),"direct_install_obj":({"direct_install_obj",}),"eventload":({"eventLoad",}),"eventparse":({"eventParse",}),"getmissinglimbs":({"GetMissingLimbs",}),"eventsmoke":({"eventSmoke",}),"setmelee":({"SetMelee",}),"setitems":({"SetItems",}),"getelevator":({"GetElevator",}),"request_vis":({"request_vis",}),"getlevel":({"GetLevel",}),"direct_mount_liv":({"direct_mount_liv",}),"indirect_put_obs_word_obj":({"indirect_put_obs_word_obj",}),"resetcurrentenemy":({"ResetCurrentEnemy",}),"getammo":({"GetAmmo",}),"setmissinglimbs":({"SetMissingLimbs",}),"gettype":({"GetType",}),"getmaxcells":({"GetMaxCells",}),"setflaskuses":({"SetFlaskUses",}),"getdoorsmap":({"GetDoorsMap",}),"continue_followup":({"continue_followup",}),"direct_deactivate_obj_on_obj":({"direct_deactivate_obj_on_obj",}),"getclient":({"GetClient",}),"removeread":({"RemoveRead",}),"addhp":({"AddHP",}),"canuninstall":({"CanUninstall",}),"eventreconnect":({"eventReconnect",}),"getwield":({"GetWield",}),"getconsult":({"GetConsult",}),"direct_buy_str_from_liv":({"direct_buy_str_from_liv",}),"setsky":({"SetSky",}),"getambientlight":({"GetAmbientLight",}),"query_board_id":({"query_board_id",}),"eventreceivedamage":({"eventReceiveDamage",}),"direct_knock_obj":({"direct_knock_obj",}),"setleader":({"SetLeader",}),"create":({"create",}),"getaction":({"GetAction",}),"addround":({"AddRound",}),"canlead":({"CanLead",}),"direct_train_liv":({"direct_train_liv",}),"setambientlight":({"SetAmbientLight",}),"direct_connect_str":({"direct_connect_str",}),"canturnoff":({"CanTurnOff",}),"direct_request_str_from_liv":({"direct_request_str_from_liv",}),"direct_eat_obj":({"direct_eat_obj",}),"getshade":({"GetShade",}),"direct_load_obj_word_obj":({"direct_load_obj_word_obj",}),"getexitmap":({"GetExitMap",}),"getmode":({"GetMode",}),"getconsultresponse":({"GetConsultResponse",}),"eventcheckenvironment":({"eventCheckEnvironment",}),"setfuelname":({"SetFuelName",}),"setpolyglot":({"SetPolyglot",}),"setconsultresponses":({"SetConsultResponses",}),"eventabandon":({"eventAbandon",}),"getduration":({"GetDuration",}),"getinfect":({"GetInfect",}),"eventcollapse":({"eventCollapse",}),"isfreshcorpse":({"isFreshCorpse",}),"eventendvoting":({"eventEndVoting",}),"newbody":({"NewBody",}),"getdoors":({"GetDoors",}),"getbefriended":({"GetBefriended",}),"init":({"init",}),"getmount":({"GetMount",}),"erase_prompt":({"erase_prompt",}),"getmissdata":({"GetMissData",}),"removemuffed":({"RemoveMuffed",}),"getexitdata":({"GetExitData",}),"addextrachannels":({"AddExtraChannels",}),"setdeviating":({"SetDeviating",}),"removeterraintype":({"RemoveTerrainType",}),"eventputon":({"eventPutOn",}),"indirect_delete_obj_from_obj":({"indirect_delete_obj_from_obj",}),"setlasterror":({"SetLastError",}),"setvendortype":({"SetVendorType",}),"direct_light_obj_with_obj":({"direct_light_obj_with_obj",}),"direct_command_str_to_str":({"direct_command_str_to_str",}),"isdummy":({"isDummy",}),"eventbalance":({"eventBalance",}),"push":({"Push",}),"getclasses":({"GetClasses",}),"setwander":({"SetWander",}),"direct_press_obj":({"direct_press_obj",}),"eventfish":({"eventFish",}),"direct_scratch_obj":({"direct_scratch_obj",}),"eventunlocklock":({"eventUnlockLock",}),"sethboverride":({"SetHBOverride",}),"setsize":({"SetSize",}),"indirect_compare_obj_to_obj":({"indirect_compare_obj_to_obj",}),"checkpending":({"CheckPending",}),"canlight":({"CanLight",}),"setcustomxp":({"SetCustomXP",}),"direct_add_obj_to_here":({"direct_add_obj_to_here",}),"direct_listen_to_obj":({"direct_listen_to_obj",}),"restore_inventory":({"restore_inventory",}),"getreversedirection":({"GetReverseDirection",}),"getwanderspeed":({"GetWanderSpeed",}),"setmountstyle":({"SetMountStyle",}),"indirect_give_obj_to_liv":({"indirect_give_obj_to_liv",}),"getvirtualsky":({"GetVirtualSky",}),"getmaxfishing":({"GetMaxFishing",}),"addencounter":({"AddEncounter",}),"eventstart":({"eventStart",}),"setdig":({"SetDig",}),"setdie":({"SetDie",}),"getmagnum":({"GetMagnum",}),"caneat":({"CanEat",}),"getnotalemessage":({"GetNoTaleMessage",}),"getspellchance":({"GetSpellChance",}),"eventfire":({"eventFire",}),"setguard":({"SetGuard",}),"indirect_reload_str_word":({"indirect_reload_str_word",}),"indirect_boobytrap_obj_with_obj":({"indirect_boobytrap_obj_with_obj",}),"indirect_throw_obj_at_obj":({"indirect_throw_obj_at_obj",}),"getdefiniteshort":({"GetDefiniteShort",}),"indirect_reload_obj":({"indirect_reload_obj",}),"getlimbchildren":({"GetLimbChildren",}),"setbroken":({"SetBroken",}),"eventrepair":({"eventRepair",}),"indirect_uninstall_obj_word_obj":({"indirect_uninstall_obj_word_obj",}),"getmanipulates":({"GetManipulates",}),"getstatclass":({"GetStatClass",}),"setremotetargets":({"SetRemoteTargets",}),"indirect_capture_liv_word_obj":({"indirect_capture_liv_word_obj",}),"setcommandfail":({"SetCommandFail",}),"setbane":({"SetBane",}),"eventputonto":({"eventPutOnto",}),"eventrunout":({"eventRunOut",}),"cmdbrowse":({"cmdBrowse",}),"getmaxclass":({"GetMaxClass",}),"canstand":({"CanStand",}),"setclosed":({"SetClosed",}),"getcombatverbs":({"GetCombatVerbs",}),"direct_aim_obj_with_obj":({"direct_aim_obj_with_obj",}),"direct_modify_word_str":({"direct_modify_word_str",}),"eventeat":({"eventEat",}),"getmutedtype":({"GetMutedType",}),"direct_backstab_liv":({"direct_backstab_liv",}),"getmuffed":({"GetMuffed",}),"direct_give_obj_liv":({"direct_give_obj_liv",}),"addenter":({"AddEnter",}),"getfollowbonus":({"GetFollowBonus",}),"eventexchange":({"eventExchange",}),"eventremovecandidate":({"eventRemoveCandidate",}),"setanchored":({"SetAnchored",}),"setlocalfee":({"SetLocalFee",}),"getminheat":({"GetMinHeat",}),"direct_turn_obj":({"direct_turn_obj",}),"direct_add_obj_to_room":({"direct_add_obj_to_room",}),"getvisionbonus":({"GetVisionBonus",}),"eventencounter":({"eventEncounter",}),"getequippedlimbs":({"GetEquippedLimbs",}),"eventrevive":({"eventRevive",}),"gettale":({"GetTale",}),"setpreventput":({"SetPreventPut",}),"direct_drink_from_obj":({"direct_drink_from_obj",}),"getlanguages":({"GetLanguages",}),"getareatype":({"GetAreaType",}),"eventrefuel":({"eventRefuel",}),"direct_sell_obj_to_liv":({"direct_sell_obj_to_liv",}),"setnodefaultexits":({"SetNoDefaultExits",}),"direct_boobytrap_obj_with_obj":({"direct_boobytrap_obj_with_obj",}),"cmdprice":({"cmdPrice",}),"setsavefile":({"SetSaveFile",}),"popd":({"popd",}),"getammotype":({"GetAmmoType",}),"direct_uninstall_obj_word_obj":({"direct_uninstall_obj_word_obj",}),"getalcohol":({"GetAlcohol",}),"cmddial":({"cmdDial",}),"getnoecho":({"GetNoEcho",}),"direct_say_to_liv":({"direct_say_to_liv",}),"getmaxprotection":({"GetMaxProtection",}),"eventlight":({"eventLight",}),"loadrevolver":({"LoadRevolver",}),"canmanipulate":({"CanManipulate",}),"gettorso":({"GetTorso",}),"eventburyitem":({"eventBuryItem",}),"canpress":({"CanPress",}),"direct_drain_at_liv":({"direct_drain_at_liv",}),"eventdeteriorate":({"eventDeteriorate",}),"eventmoralact":({"eventMoralAct",}),"setpacifist":({"SetPacifist",}),"eventcustomizestat":({"eventCustomizeStat",}),"getvalue":({"GetValue",}),"eventdescribeenvironment":({"eventDescribeEnvironment",}),"setfuelamount":({"SetFuelAmount",}),"indirect_fill_obj_with_obj":({"indirect_fill_obj_with_obj",}),"direct_move_str_on_obj":({"direct_move_str_on_obj",}),"indirect_install_obj_word_obj":({"indirect_install_obj_word_obj",}),"getmaxload":({"GetMaxLoad",}),"getvisiblegrid":({"GetVisibleGrid",}),"setelevator":({"SetElevator",}),"gethostsite":({"GetHostSite",}),"setfight":({"SetFight",}),"eventstand":({"eventStand",}),"addstat":({"AddStat",}),"getterraintype":({"GetTerrainType",}),"removeconsult":({"RemoveConsult",}),"setmaxcells":({"SetMaxCells",}),"eventdisplaystatus":({"eventDisplayStatus",}),"resetlevel":({"ResetLevel",}),"direct_teach_liv_to_str":({"direct_teach_liv_to_str",}),"canteach":({"CanTeach",}),"direct_shake_obj":({"direct_shake_obj",}),"gettargets":({"GetTargets",}),"getbaselimbs":({"GetBaseLimbs",}),"getflyroom":({"GetFlyRoom",}),"query_sp":({"query_sp",}),"direct_target_liv":({"direct_target_liv",}),"setbait":({"SetBait",}),"setnativelanguage":({"SetNativeLanguage",}),"performmarriage":({"performMarriage",}),"indirect_turn_obj_on_obj_off":({"indirect_turn_obj_on_obj_off",}),"indirect_fill_obj_from_obj":({"indirect_fill_obj_from_obj",}),"resetcurrency":({"ResetCurrency",}),"addsacrificetype":({"AddSacrificeType",}),"direct_unload_obj_word_obj":({"direct_unload_obj_word_obj",}),"getfirearmtype":({"GetFirearmType",}),"eventbreak":({"eventBreak",}),"setsurroundareas":({"SetSurroundAreas",}),"getparalyzed":({"GetParalyzed",}),"getliers":({"GetLiers",}),"getcustomstats":({"GetCustomStats",}),"do_nickname":({"do_nickname",}),"canpull":({"CanPull",}),"setdead":({"SetDead",}),"eventfill":({"eventFill",}),"direct_missile_at_liv":({"direct_missile_at_liv",}),"direct_knock_on_obj":({"direct_knock_on_obj",}),"getpresses":({"GetPresses",}),"getautostand":({"GetAutoStand",}),"setmaxhealthpoints":({"SetMaxHealthPoints",}),"getlockstrength":({"GetLockStrength",}),"subtractround":({"SubtractRound",}),"setquestpoints":({"SetQuestPoints",}),"eventunquell":({"eventUnQuell",}),"getvirtualsea":({"GetVirtualSea",}),"getdestroyonsell":({"GetDestroyOnSell",}),"eventdecreasefuel":({"eventDecreaseFuel",}),"getnochancolors":({"GetNoChanColors",}),"getplayerkill":({"GetPlayerKill",}),"direct_turn_on_obj_on_obj":({"direct_turn_on_obj_on_obj",}),"getnonlocalfee":({"GetNonLocalFee",}),"getemptyshort":({"GetEmptyShort",}),"setduration":({"SetDuration",}),"setnocondition":({"SetNoCondition",}),"direct_target_liv_only":({"direct_target_liv_only",}),"setlockstrength":({"SetLockStrength",}),"setchance":({"SetChance",}),"eventpress":({"eventPress",}),"setmag":({"SetMag",}),"direct_learn_to_str_from_liv":({"direct_learn_to_str_from_liv",}),"setnochancolors":({"SetNoChanColors",}),"rdel":({"rDel",}),"direct_aim_liv_with_obj":({"direct_aim_liv_with_obj",}),"eventdisarm":({"eventDisarm",}),"addcommandresponses":({"AddCommandResponses",}),"getownerob":({"GetOwnerOb",}),"getretain":({"GetRetain",}),"loadbook":({"LoadBook",}),"direct_curse_obj":({"direct_curse_obj",}),"setup":({"Setup",}),"canburywith":({"CanBuryWith",}),"indirect_get_obs_obj":({"indirect_get_obs_obj",}),"direct_fireball_liv":({"direct_fireball_liv",}),"getfullexitdata":({"GetFullExitData",}),"setattackable":({"SetAttackable",}),"getinventory":({"GetInventory",}),"canpoison":({"CanPoison",}),"setdefaultread":({"SetDefaultRead",}),"getlocations":({"GetLocations",}),"get_path":({"get_path",}),"setconsult":({"SetConsult",}),"eventshowinterior":({"eventShowInterior",}),"getmaxskilllevel":({"GetMaxSkillLevel",}),"gethelp":({"GetHelp",}),"eventtrainspell":({"eventTrainSpell",}),"eventteach":({"eventTeach",}),"getequipped":({"GetEquipped",}),"getnonexits":({"GetNonExits",}),"setdenominator":({"SetDenominator",}),"removepress":({"RemovePress",}),"setcruiseinmessage":({"SetCruiseInMessage",}),"setclan":({"SetClan",}),"direct_add_obj":({"direct_add_obj",}),"getmodify":({"GetModify",}),"direct_bury_obj_with_obj":({"direct_bury_obj_with_obj",}),"getrules":({"GetRules",}),"removelanguage":({"RemoveLanguage",}),"getemptyitem":({"GetEmptyItem",}),"canfollow":({"CanFollow",}),"doautounload":({"doAutoUnload",}),"direct_send_str_to_str":({"direct_send_str_to_str",}),"direct_frigidus_at_liv":({"direct_frigidus_at_liv",}),"getscratch":({"GetScratch",}),"getrequiredmagic":({"GetRequiredMagic",}),"minusammo":({"MinusAmmo",}),"restart_heart":({"restart_heart",}),"plusammo":({"PlusAmmo",}),"eventloadinventory":({"eventLoadInventory",}),"getlifespan":({"GetLifeSpan",}),"setmaxstaminapoints":({"SetMaxStaminaPoints",}),"eventregisterside":({"eventRegisterSide",}),"rgb2grey":({"rgb2grey",}),"eventbless":({"eventBless",}),"direct_shield_liv":({"direct_shield_liv",}),"eventcastvote":({"eventCastVote",}),"canputinto":({"CanPutInto",}),"statreport":({"StatReport",}),"getsky":({"GetSky",}),"setwear":({"SetWear",}),"eventshadow":({"eventShadow",}),"setcruiseoutmessage":({"SetCruiseOutMessage",}),"eventturnoff":({"eventTurnOff",}),"getgaggedtype":({"GetGaggedType",}),"getlocalcurrency":({"GetLocalCurrency",}),"eventdeposit":({"eventDeposit",}),"eventcure":({"eventCure",}),"removebonuses":({"RemoveBonuses",}),"do_alias":({"do_alias",}),"getautoresets":({"GetAutoResets",}),"setattack":({"SetAttack",}),"indirect_pour_obj_into_obj":({"indirect_pour_obj_into_obj",}),"getlogharass":({"GetLogHarass",}),"indirect_aim_obj_at_liv":({"indirect_aim_obj_at_liv",}),"cache_commands":({"cache_commands",}),"direct_command_liv":({"direct_command_liv",}),"eventread":({"eventRead",}),"eventwelcome":({"eventWelcome",}),"canknock":({"CanKnock",}),"getcanlock":({"GetCanLock",}),"getmagicresistance":({"GetMagicResistance",}),"eventcruisemessages":({"eventCruiseMessages",}),"getmaptype":({"GetMapType",}),"getskillmodifier":({"GetSkillModifier",}),"setautodamage":({"SetAutoDamage",}),"direct_dismount_from_liv":({"direct_dismount_from_liv",}),"direct_climb_out_of_obj":({"direct_climb_out_of_obj",}),"continueteaching":({"ContinueTeaching",}),"indirect_get_obj_obj":({"indirect_get_obj_obj",}),"indirect_add_obj_to_obj":({"indirect_add_obj_to_obj",}),"cmdparse":({"cmdParse",}),"query_mp":({"query_mp",}),"getclanobject":({"GetClanObject",}),"receivecanonicalid":({"ReceiveCanonicalId",}),"getstatbonus":({"GetStatBonus",}),"direct_get_wrd_wrd_out_of_obj":({"direct_get_wrd_wrd_out_of_obj",}),"setclasses":({"SetClasses",}),"setrarity":({"SetRarity",}),"getcharmode":({"GetCharmode",}),"cmd_post":({"cmd_post",}),"receive_snoop":({"receive_snoop",}),"getpersistentinventory":({"GetPersistentInventory",}),"more":({"more",}),"getspeakcolor":({"GetSpeakColor",}),"reset":({"reset",}),"setstorageroom":({"SetStorageRoom",}),"classmember":({"ClassMember",}),"eventsendmissmessages":({"eventSendMissMessages",}),"setcorpse":({"SetCorpse",}),"setammotype":({"SetAmmoType",}),"addcaffeine":({"AddCaffeine",}),"eventannouncecanonicalid":({"eventAnnounceCanonicalId",}),"donetrying":({"DoneTrying",}),"resetbank":({"ResetBank",}),"direct_soulseek_liv":({"direct_soulseek_liv",}),"getautoheal":({"GetAutoHeal",}),"eventpage":({"eventPage",}),"eventfree":({"eventFree",}),"basemap":({"BaseMap",}),"getexits":({"GetExits",}),"canrelease":({"CanRelease",}),"direct_zap_liv":({"direct_zap_liv",}),"getfrequency":({"GetFrequency",}),"razzledazzle":({"RazzleDazzle",}),"spent":({"Spent",}),"caninstall":({"CanInstall",}),"setpk":({"SetPK",}),"removetalkresponse":({"RemoveTalkResponse",}),"eventedit":({"eventEdit",}),"getjumps":({"GetJumps",}),"setbaselimbs":({"SetBaseLimbs",}),"gettrainingskills":({"GetTrainingSkills",}),"inventory_visible":({"inventory_visible",}),"direct_roll_obj":({"direct_roll_obj",}),"getlastsave":({"GetLastSave",}),"setrefuelable":({"SetRefuelable",}),"ransi":({"rAnsi",}),"getcreatorage":({"GetCreatorAge",}),"status":({"status",}),"direct_give_obj_to_liv":({"direct_give_obj_to_liv",}),"getbasestatlevel":({"GetBaseStatLevel",}),"gettalkresponse":({"GetTalkResponse",}),"setbonuses":({"SetBonuses",}),"getwizvision":({"GetWizVision",}),"setshake":({"SetShake",}),"readbookindex":({"ReadBookIndex",}),"setminheat":({"SetMinHeat",}),"displayshort":({"displayShort",}),"setparalyzed":({"SetParalyzed",}),"direct_reload_str_word":({"direct_reload_str_word",}),"getdig":({"GetDig",}),"getactionsmap":({"GetActionsMap",}),"getdie":({"GetDie",}),"geteventprints":({"GeteventPrints",}),"direct_drop_obj":({"direct_drop_obj",}),"eventpreparecast":({"eventPrepareCast",}),"setnightlight":({"SetNightLight",}),"direct_get_obj_from_obj":({"direct_get_obj_from_obj",}),"getleader":({"GetLeader",}),"setlightsensitivity":({"SetLightSensitivity",}),"getskill":({"GetSkill",}),"direct_turn_obj_off":({"direct_turn_obj_off",}),"getwanderrecurse":({"GetWanderRecurse",}),"eventknock":({"eventKnock",}),"setautostand":({"SetAutoStand",}),"removeemoteresponse":({"RemoveEmoteResponse",}),"indirect_reload_word_obj":({"indirect_reload_word_obj",}),"getstat":({"GetStat",}),"indirect_light_obj_with_obj":({"indirect_light_obj_with_obj",}),"direct_drive_word_str":({"direct_drive_word_str",}),"canburn":({"CanBurn",}),"getprotectionmap":({"GetProtectionMap",}),"direct_delete_obj":({"direct_delete_obj",}),"eventtalkhist":({"eventTalkHist",}),"setrequiredstamina":({"SetRequiredStamina",}),"setemail":({"SetEmail",}),"setvisibleriders":({"SetVisibleRiders",}),"evaluatecitizenshiprequest":({"EvaluateCitizenshipRequest",}),"indirect_dest_obj":({"indirect_dest_obj",}),"getrechargeable":({"GetRechargeable",}),"cmd_popd":({"cmd_popd",}),"getpulls":({"GetPulls",}),"direct_cast_str_against_str":({"direct_cast_str_against_str",}),"setpersistent":({"SetPersistent",}),"setrechargeable":({"SetRechargeable",}),"getobviousexits":({"GetObviousExits",}),"direct_refresh_liv":({"direct_refresh_liv",}),"direct_open_obj":({"direct_open_obj",}),"setrespirationtype":({"SetRespirationType",}),"getcoordinates":({"GetCoordinates",}),"getcelltype":({"GetCellType",}),"process_request":({"process_request",}),"removeknock":({"RemoveKnock",}),"setrank":({"SetRank",}),"setobviousexits":({"SetObviousExits",}),"getmissinglimb":({"GetMissingLimb",}),"canput":({"CanPut",}),"setmagicpoints":({"SetMagicPoints",}),"setinventory":({"SetInventory",}),"getmoralitydescription":({"GetMoralityDescription",}),"getage":({"GetAge",}),"direct_rock_str_on_obj":({"direct_rock_str_on_obj",}),"canpick":({"CanPick",}),"direct_press_str_on_obj":({"direct_press_str_on_obj",}),"query_hp":({"query_hp",}),"setmaxload":({"SetMaxLoad",}),"canrequestcitizenship":({"CanRequestCitizenship",}),"direct_shake_str_on_obj":({"direct_shake_str_on_obj",}),"setburntvalue":({"SetBurntValue",}),"direct_heal_liv":({"direct_heal_liv",}),"canthrow":({"CanThrow",}),"cancapture":({"CanCapture",}),"write_prompt":({"write_prompt",}),"setemptyitem":({"SetEmptyItem",}),"getpreventdrop":({"GetPreventDrop",}),"checkcharmode":({"CheckCharmode",}),"eventput":({"eventPut",}),"getpoisonstrength":({"GetPoisonStrength",}),"eventrestore":({"eventRestore",}),"canopen":({"CanOpen",}),"setvehicleinterior":({"SetVehicleInterior",}),"indirect_aim_obj_at_obj":({"indirect_aim_obj_at_obj",}),"eventqueuecommand":({"eventQueueCommand",}),"canclose":({"CanClose",}),"direct_pray_for_str_against_str_for_liv":({"direct_pray_for_str_against_str_for_liv",}),"setflyroom":({"SetFlyRoom",}),"getcommands":({"GetCommands",}),"chat_command":({"chat_command",}),"changelevel":({"ChangeLevel",}),"removescratch":({"RemoveScratch",}),"direct_activate_str_on_obj":({"direct_activate_str_on_obj",}),"updatescreen":({"UpdateScreen",}),"getbroken":({"GetBroken",}),"setlogharass":({"SetLogHarass",}),"direct_teach_str_to_liv":({"direct_teach_str_to_liv",}),"resetsurroundexits":({"ResetSurroundExits",}),"getshort":({"GetShort",}),"direct_get_obj":({"direct_get_obj",}),"direct_attack_liv":({"direct_attack_liv",}),"getclosed":({"GetClosed",}),"setlifespan":({"SetLifeSpan",}),"direct_ask_liv_to_str":({"direct_ask_liv_to_str",}),"getdeaths":({"GetDeaths",}),"setlevel":({"SetLevel",}),"eventdestroyenemy":({"eventDestroyEnemy",}),"direct_lie_down_word_obj":({"direct_lie_down_word_obj",}),"cangetfrom":({"CanGetFrom",}),"setpreventget":({"SetPreventGet",}),"direct_target_only_liv":({"direct_target_only_liv",}),"getextralong":({"GetExtraLong",}),"getalllanguages":({"GetAllLanguages",}),"limbguess":({"LimbGuess",}),"getdoor":({"GetDoor",}),"eventwithdraw":({"eventWithdraw",}),"getcombatmove":({"GetCombatMove",}),"getlanguage":({"GetLanguage",}),"getbodymass":({"GetBodyMass",}),"gettrainingpoints":({"GetTrainingPoints",}),"getheat":({"GetHeat",}),"direct_whisper_to_liv":({"direct_whisper_to_liv",}),"gettouch":({"GetTouch",}),"indirect_shoot_obj_at_liv":({"indirect_shoot_obj_at_liv",}),"setalllanguages":({"SetAllLanguages",}),"setwield":({"SetWield",}),"eventpausemessages":({"eventPauseMessages",}),"cmdquit":({"cmdQuit",}),"getmobility":({"GetMobility",}),"direct_reload_every_str":({"direct_reload_every_str",}),"allowpass":({"AllowPass",}),"addmoney":({"AddMoney",}),"getcandidates":({"GetCandidates",}),"addlimb":({"AddLimb",}),"query_prev_wd":({"query_prev_wd",}),"setownerob":({"SetOwnerOb",}),"getsinkroom":({"GetSinkRoom",}),"direct_pick_str_on_obj":({"direct_pick_str_on_obj",}),"direct_fly_str":({"direct_fly_str",}),"setid":({"SetId",}),"direct_smell_obj":({"direct_smell_obj",}),"setnotalemessage":({"SetNoTaleMessage",}),"dorevolverunload":({"doRevolverUnload",}),"getworn":({"GetWorn",}),"getmessage":({"GetMessage",}),"eventthrow":({"eventThrow",}),"getlive":({"GetLive",}),"getdebugging":({"GetDebugging",}),"gettalkresponses":({"GetTalkResponses",}),"eventmultiply":({"eventMultiply",}),"getquests":({"GetQuests",}),"getenterdata":({"GetEnterData",}),"setcharmode":({"SetCharmode",}),"setfrequency":({"SetFrequency",}),"eventask":({"eventAsk",}),"setshade":({"SetShade",}),"getdeities":({"GetDeities",}),"setdamagetype":({"SetDamageType",}),"getnoreplace":({"GetNoReplace",}),"setnews":({"SetNews",}),"getmag":({"GetMag",}),"eventclose":({"eventClose",}),"cancarry":({"CanCarry",}),"canevade":({"CanEvade",}),"direct_balance_obj_to_obj":({"direct_balance_obj_to_obj",}),"direct_roll_obj_on_str":({"direct_roll_obj_on_str",}),"setlivinglong":({"SetLivingLong",}),"removefishing":({"RemoveFishing",}),"eventmail":({"eventMail",}),"getplayerpaused":({"GetPlayerPaused",}),"getsearches":({"GetSearches",}),"sethb":({"SetHB",}),"gettalkhisttypes":({"GetTalkHistTypes",}),"indirect_unload_obj_word_obj":({"indirect_unload_obj_word_obj",}),"getmaxfuel":({"GetMaxFuel",}),"direct_lock_obj_with_str":({"direct_lock_obj_with_str",}),"setscratch":({"SetScratch",}),"setautoheal":({"SetAutoHeal",}),"setfloors":({"SetFloors",}),"setside":({"SetSide",}),"setcanstand":({"SetCanStand",}),"removetitle":({"RemoveTitle",}),"setwizvision":({"SetWizVision",}),"indirect_load_obj_word_obj":({"indirect_load_obj_word_obj",}),"direct_wield_obj":({"direct_wield_obj",}),"setplayerpaused":({"SetPlayerPaused",}),"setmount":({"SetMount",}),"destruct":({"Destruct",}),"displaylong":({"displayLong",}),"gettellhistory":({"GetTellHistory",}),"setground":({"SetGround",}),"eventsearch":({"eventSearch",}),"setannoyblock":({"SetAnnoyblock",}),"eventdrain":({"eventDrain",}),"cmdall":({"cmdAll",}),"query_max_sp":({"query_max_sp",}),"indirect_turn_on_obj_on_obj":({"indirect_turn_on_obj_on_obj",}),"getitemsmap":({"GetItemsMap",}),"addalcohol":({"AddAlcohol",}),"getcommunicable":({"GetCommunicable",}),"eventextraaction":({"eventExtraAction",}),])
TmpMap ([])
